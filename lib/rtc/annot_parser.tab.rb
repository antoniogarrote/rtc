#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/rtc/annot_parser.racc".
#

require 'racc/parser'



require 'rtc/annot_lexer.rex'
require 'rtc/parser'
require 'rtc/typing/types.rb'

module Rtc

  class TypeAnnotationParser < Racc::Parser

    attr_accessor :pos, :proxy

    # FIXME(rwsims): it's not clear what proxy is for, it's used when defining
    # class constants for doing class type signatures.
    def initialize(proxy)
        @proxy = proxy
    end

    def strip_quotes(arg)
      arg.strip.gsub(/^\"/, "").gsub(/\"$/, "")
    end

    # ####################
    # helper methods for type constructors from ML parser
    # ####################

    
    def pragma(key)
      fail "Unknown pragma keyword: #{key}" if(key !="FIXME")
    end

  end


class TypeAnnotationParser < Racc::Parser

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 55, :_reduce_1,
 1, 55, :_reduce_2,
 1, 55, :_reduce_3,
 3, 59, :_reduce_4,
 3, 59, :_reduce_5,
 3, 59, :_reduce_6,
 2, 56, :_reduce_7,
 2, 57, :_reduce_8,
 3, 58, :_reduce_9,
 1, 63, :_reduce_10,
 0, 63, :_reduce_11,
 2, 61, :_reduce_12,
 3, 61, :_reduce_13,
 1, 65, :_reduce_14,
 0, 65, :_reduce_15,
 2, 62, :_reduce_16,
 3, 62, :_reduce_17,
 6, 66, :_reduce_18,
 3, 66, :_reduce_19,
 6, 64, :_reduce_20,
 3, 64, :_reduce_21,
 6, 64, :_reduce_22,
 3, 64, :_reduce_23,
 5, 64, :_reduce_24,
 8, 64, :_reduce_25,
 1, 64, :_reduce_26,
 1, 70, :_reduce_27,
 1, 70, :_reduce_28,
 1, 70, :_reduce_29,
 1, 67, :_reduce_30,
 3, 67, :_reduce_31,
 5, 69, :_reduce_32,
 6, 69, :_reduce_33,
 4, 69, :_reduce_34,
 3, 69, :_reduce_35,
 3, 72, :_reduce_36,
 1, 72, :_reduce_37,
 2, 73, :_reduce_38,
 2, 73, :_reduce_39,
 1, 73, :_reduce_40,
 0, 71, :_reduce_41,
 3, 71, :_reduce_42,
 1, 68, :_reduce_43,
 3, 68, :_reduce_44,
 1, 75, :_reduce_45,
 1, 75, :_reduce_46,
 1, 74, :_reduce_47,
 2, 74, :_reduce_48,
 1, 76, :_reduce_49,
 3, 76, :_reduce_50,
 2, 77, :_reduce_51,
 1, 77, :_reduce_52,
 1, 60, :_reduce_53,
 1, 78, :_reduce_54,
 3, 78, :_reduce_55,
 1, 79, :_reduce_56,
 1, 79, :_reduce_57,
 1, 79, :_reduce_58,
 1, 79, :_reduce_59,
 1, 79, :_reduce_60,
 1, 79, :_reduce_61,
 1, 79, :_reduce_62,
 1, 79, :_reduce_63,
 1, 79, :_reduce_64,
 2, 79, :_reduce_65,
 3, 79, :_reduce_66,
 4, 79, :_reduce_67,
 5, 79, :_reduce_68,
 1, 79, :_reduce_69,
 3, 79, :_reduce_70,
 5, 83, :_reduce_71,
 3, 83, :_reduce_72,
 1, 84, :_reduce_73,
 1, 84, :_reduce_74,
 2, 85, :_reduce_75,
 1, 85, :_reduce_76,
 4, 80, :_reduce_77,
 1, 82, :_reduce_78,
 3, 82, :_reduce_79,
 3, 86, :_reduce_80,
 1, 87, :_reduce_81,
 1, 87, :_reduce_82,
 3, 87, :_reduce_83,
 3, 87, :_reduce_84,
 0, 81, :_reduce_85,
 1, 81, :_reduce_86 ]

racc_reduce_n = 87

racc_shift_n = 166

racc_action_table = [
    35,    36,    41,    43,   142,    56,   -16,    25,    27,    59,
    60,    34,   -12,   111,   112,    44,    57,    72,    35,    26,
    91,    31,   113,    37,    40,    42,    66,    35,    22,    34,
    82,    30,    35,    33,    38,    19,    79,    20,    46,    35,
    36,    41,    43,    34,    22,    75,    25,    27,    72,    82,
    34,    19,    38,    20,    44,    79,    18,    35,    26,   107,
    31,    38,    37,    40,    42,    30,    38,   116,    34,   117,
    30,    21,    33,    38,   104,    22,    75,    46,    35,    36,
    41,    43,    19,    22,    20,    25,    27,    15,   119,    34,
    19,    38,    20,    44,   108,    72,    35,    26,   120,    31,
   103,    37,    40,    42,   128,   109,   102,    34,    21,    30,
    35,    33,    38,   124,   125,   127,    46,    35,    36,    41,
    43,    34,    22,    75,    25,    27,    54,   126,    34,    19,
    38,    20,    44,    52,    49,    50,    26,    55,    31,    21,
    37,    40,    42,   104,    38,    22,    92,    21,    30,    98,
    33,    38,    19,   132,    20,    46,    35,    36,    41,    43,
     8,   133,    89,    25,    27,    21,    88,    34,   -14,   -14,
   -14,    44,    85,    84,    78,    26,    77,    31,   110,    37,
    40,    42,    76,   144,   -15,   -15,   -15,    30,   145,    33,
    38,    30,   147,     9,    46,    35,    36,    41,    43,    67,
    21,   150,    25,    27,   151,    58,    34,   153,    53,   155,
    44,    13,    21,    21,    26,   159,    31,    12,    37,    40,
    42,   161,    11,   163,    21,    21,    30,   nil,    33,    38,
   nil,   nil,   nil,    46,    35,    36,    41,    43,   nil,   nil,
   nil,    25,    27,   nil,   nil,    34,   nil,   nil,   nil,    44,
   nil,   nil,   nil,    26,   nil,    31,   nil,    37,    40,    42,
   nil,   nil,   nil,   nil,   nil,    30,   nil,    33,    38,   nil,
   nil,   nil,    46,    35,    36,    41,    43,   nil,   nil,   nil,
    25,    27,   nil,   nil,    34,   nil,   nil,   nil,    44,   nil,
   nil,   nil,    26,   nil,    31,   nil,    37,    40,    42,   nil,
   nil,   nil,   nil,   nil,    30,   nil,    33,    38,   nil,   nil,
   nil,    46,    35,    36,    41,    43,   nil,   nil,   nil,    25,
    27,   nil,   nil,    34,   nil,   nil,   nil,    44,   nil,   nil,
   nil,    26,   nil,    31,   nil,    37,    40,    42,   nil,   nil,
   nil,   nil,   nil,    30,   nil,    33,    38,   nil,   nil,   nil,
    46,    35,    36,    41,    43,   nil,   nil,   nil,    25,    27,
   nil,   nil,    34,   nil,   nil,   nil,    44,   nil,   nil,   nil,
    26,   nil,    31,   nil,    37,    40,    42,   nil,   nil,   nil,
   nil,   nil,    30,   nil,    33,    38,   nil,   nil,   nil,    46,
    35,    36,    41,    43,   nil,   nil,   nil,    25,    27,   nil,
   nil,    34,   nil,   nil,   nil,    44,   nil,   nil,   nil,    26,
   nil,    31,   nil,    37,    40,    42,   nil,   nil,   nil,   nil,
   nil,    30,   nil,    33,    38,   nil,   nil,   nil,    46,    35,
    36,    41,    43,   nil,   nil,   nil,    25,    27,   nil,   139,
    34,   nil,   nil,   nil,    44,   nil,   nil,   nil,    26,   nil,
    31,   nil,    37,    40,    42,   nil,   nil,   nil,   nil,   nil,
    30,   nil,    33,    38,   nil,   nil,   nil,    46,    35,    36,
    41,    43,   nil,   nil,   nil,    25,    27,    59,    60,    34,
   nil,   nil,   nil,    44,    64,   nil,   nil,    26,   nil,    31,
   nil,    37,    40,    42,   nil,   nil,   nil,   nil,   nil,    30,
   nil,    33,    38,   nil,   nil,   nil,    46,    35,    36,    41,
    43,   nil,   nil,   nil,    25,    27,   nil,   nil,    34,   nil,
   nil,   nil,    44,   nil,   nil,   nil,    26,   nil,    31,   nil,
    37,    40,    42,   nil,   nil,   nil,   nil,   nil,    30,   nil,
    33,    38,   nil,   nil,   nil,    46,    35,    36,    41,    43,
   nil,   nil,   nil,    25,    27,   nil,   nil,    34,   nil,   nil,
   nil,    44,   nil,   nil,   nil,    26,   nil,    31,   nil,    37,
    40,    42,   nil,   nil,   nil,   nil,   nil,    30,   nil,    33,
    38,   nil,   nil,   nil,    46,    35,    36,    41,    43,   nil,
   nil,   nil,    25,    27,   nil,   nil,    34,   nil,   nil,   nil,
    44,   nil,   nil,   nil,    26,   nil,    31,   nil,    37,    40,
    42,   nil,   nil,   nil,   nil,   nil,    30,   nil,    33,    38,
   nil,   nil,   nil,    46,    35,    36,    41,    43,   nil,   nil,
   nil,    25,    27,   nil,   nil,    34,   nil,   nil,   nil,    44,
   nil,   nil,   nil,    26,   nil,    31,   nil,    37,    40,    42,
   nil,   nil,   nil,   nil,   nil,    30,   nil,    33,    38,   nil,
   nil,   nil,    46,    35,    36,    41,    43,   nil,   nil,   nil,
    25,    27,   nil,   nil,    34,   nil,   nil,   nil,    44,   nil,
   nil,   nil,    26,   nil,    31,   nil,    37,    40,    42,   nil,
   nil,   nil,   nil,   nil,    30,   nil,    33,    38,   nil,   nil,
   nil,    46,    35,    36,    41,    43,   nil,   nil,   nil,    25,
    27,   nil,   nil,    34,   nil,   nil,   nil,    44,   nil,   nil,
   nil,    26,   nil,    31,   nil,    37,    40,    42,   nil,   nil,
   nil,   nil,   nil,    30,   nil,    33,    38,   nil,   nil,   nil,
    46 ]

racc_action_check = [
   103,   103,   103,   103,   118,    15,    51,   103,   103,   103,
   103,   103,    23,    72,    73,   103,    15,    26,   127,   103,
    51,   103,    75,   103,   103,   103,    23,    34,   111,   127,
   155,   103,   125,   103,   103,   111,   155,   111,   103,    77,
    77,    77,    77,   125,    26,    26,    77,    77,   107,    31,
    77,    26,   127,    26,    77,    31,     7,   109,    77,    69,
    77,    34,    77,    77,    77,    78,   125,    80,   109,    81,
    77,     7,    77,    77,    64,   107,   107,    77,   150,   150,
   150,   150,   107,     7,   107,   150,   150,     7,    86,   150,
     7,   109,     7,   150,    70,   112,    57,   150,    87,   150,
    63,   150,   150,   150,    98,    70,    62,    57,    56,   150,
    55,   150,   150,    94,    95,    98,   150,   144,   144,   144,
   144,    55,   112,   112,   144,   144,    14,    97,   144,   112,
    57,   112,   144,    10,    10,    10,   144,    14,   144,    54,
   144,   144,   144,   102,    55,    58,    52,   104,   144,    58,
   144,   144,    58,   105,    58,   144,    92,    92,    92,    92,
     0,   106,    50,    92,    92,   108,    49,    92,     8,     8,
     8,    92,    39,    36,    30,    92,    29,    92,    71,    92,
    92,    92,    27,   120,     0,     0,     0,    92,   124,    92,
    92,    25,   126,     0,    92,    67,    67,    67,    67,    24,
   128,   129,    67,    67,   131,    18,    67,   136,    11,   141,
    67,     6,   145,   147,    67,   148,    67,     5,    67,    67,
    67,   153,     1,   159,   161,   163,    67,   nil,    67,    67,
   nil,   nil,   nil,    67,     9,     9,     9,     9,   nil,   nil,
   nil,     9,     9,   nil,   nil,     9,   nil,   nil,   nil,     9,
   nil,   nil,   nil,     9,   nil,     9,   nil,     9,     9,     9,
   nil,   nil,   nil,   nil,   nil,     9,   nil,     9,     9,   nil,
   nil,   nil,     9,    84,    84,    84,    84,   nil,   nil,   nil,
    84,    84,   nil,   nil,    84,   nil,   nil,   nil,    84,   nil,
   nil,   nil,    84,   nil,    84,   nil,    84,    84,    84,   nil,
   nil,   nil,   nil,   nil,    84,   nil,    84,    84,   nil,   nil,
   nil,    84,   139,   139,   139,   139,   nil,   nil,   nil,   139,
   139,   nil,   nil,   139,   nil,   nil,   nil,   139,   nil,   nil,
   nil,   139,   nil,   139,   nil,   139,   139,   139,   nil,   nil,
   nil,   nil,   nil,   139,   nil,   139,   139,   nil,   nil,   nil,
   139,    88,    88,    88,    88,   nil,   nil,   nil,    88,    88,
   nil,   nil,    88,   nil,   nil,   nil,    88,   nil,   nil,   nil,
    88,   nil,    88,   nil,    88,    88,    88,   nil,   nil,   nil,
   nil,   nil,    88,   nil,    88,    88,   nil,   nil,   nil,    88,
    89,    89,    89,    89,   nil,   nil,   nil,    89,    89,   nil,
   nil,    89,   nil,   nil,   nil,    89,   nil,   nil,   nil,    89,
   nil,    89,   nil,    89,    89,    89,   nil,   nil,   nil,   nil,
   nil,    89,   nil,    89,    89,   nil,   nil,   nil,    89,   117,
   117,   117,   117,   nil,   nil,   nil,   117,   117,   nil,   117,
   117,   nil,   nil,   nil,   117,   nil,   nil,   nil,   117,   nil,
   117,   nil,   117,   117,   117,   nil,   nil,   nil,   nil,   nil,
   117,   nil,   117,   117,   nil,   nil,   nil,   117,    21,    21,
    21,    21,   nil,   nil,   nil,    21,    21,    21,    21,    21,
   nil,   nil,   nil,    21,    21,   nil,   nil,    21,   nil,    21,
   nil,    21,    21,    21,   nil,   nil,   nil,   nil,   nil,    21,
   nil,    21,    21,   nil,   nil,   nil,    21,    60,    60,    60,
    60,   nil,   nil,   nil,    60,    60,   nil,   nil,    60,   nil,
   nil,   nil,    60,   nil,   nil,   nil,    60,   nil,    60,   nil,
    60,    60,    60,   nil,   nil,   nil,   nil,   nil,    60,   nil,
    60,    60,   nil,   nil,   nil,    60,    59,    59,    59,    59,
   nil,   nil,   nil,    59,    59,   nil,   nil,    59,   nil,   nil,
   nil,    59,   nil,   nil,   nil,    59,   nil,    59,   nil,    59,
    59,    59,   nil,   nil,   nil,   nil,   nil,    59,   nil,    59,
    59,   nil,   nil,   nil,    59,    44,    44,    44,    44,   nil,
   nil,   nil,    44,    44,   nil,   nil,    44,   nil,   nil,   nil,
    44,   nil,   nil,   nil,    44,   nil,    44,   nil,    44,    44,
    44,   nil,   nil,   nil,   nil,   nil,    44,   nil,    44,    44,
   nil,   nil,   nil,    44,   113,   113,   113,   113,   nil,   nil,
   nil,   113,   113,   nil,   nil,   113,   nil,   nil,   nil,   113,
   nil,   nil,   nil,   113,   nil,   113,   nil,   113,   113,   113,
   nil,   nil,   nil,   nil,   nil,   113,   nil,   113,   113,   nil,
   nil,   nil,   113,   119,   119,   119,   119,   nil,   nil,   nil,
   119,   119,   nil,   nil,   119,   nil,   nil,   nil,   119,   nil,
   nil,   nil,   119,   nil,   119,   nil,   119,   119,   119,   nil,
   nil,   nil,   nil,   nil,   119,   nil,   119,   119,   nil,   nil,
   nil,   119,   132,   132,   132,   132,   nil,   nil,   nil,   132,
   132,   nil,   nil,   132,   nil,   nil,   nil,   132,   nil,   nil,
   nil,   132,   nil,   132,   nil,   132,   132,   132,   nil,   nil,
   nil,   nil,   nil,   132,   nil,   132,   132,   nil,   nil,   nil,
   132 ]

racc_action_pointer = [
   141,   222,   nil,   nil,   nil,   212,   206,    41,   125,   219,
    90,   208,   nil,   nil,   105,   -16,   nil,   nil,   182,   nil,
   nil,   453,   nil,     7,   167,   145,     2,   157,   nil,   172,
   152,     7,   nil,   nil,    12,   nil,   141,   nil,   nil,   167,
   nil,   nil,   nil,   nil,   570,   nil,   nil,   nil,   nil,   145,
   141,     1,   125,   nil,   109,    95,    78,    81,   103,   531,
   492,   nil,    75,    98,    38,   nil,   nil,   180,   nil,    57,
    73,   143,   -10,    12,   nil,     1,   nil,    24,    19,   nil,
    30,    40,   nil,   nil,   258,   nil,    86,    67,   336,   375,
   nil,   nil,   141,   nil,    80,   112,   nil,    94,    83,   nil,
   nil,   nil,   107,   -15,   117,   150,   128,    33,   135,    42,
   nil,   -14,    80,   609,   nil,   nil,   nil,   414,   -29,   648,
   180,   nil,   nil,   nil,   167,    17,   171,     3,   170,   198,
   nil,   167,   687,   nil,   nil,   nil,   174,   nil,   nil,   297,
   nil,   207,   nil,   nil,   102,   182,   nil,   183,   182,   nil,
    63,   nil,   nil,   200,   nil,   -12,   nil,   nil,   nil,   202,
   nil,   194,   nil,   195,   nil,   nil ]

racc_action_default = [
   -11,   -87,    -1,    -2,    -3,   -87,   -87,   -87,   -10,   -87,
   -87,   -87,    -7,    -8,   -87,   -87,   -26,   -30,   -87,   -28,
   -29,   -87,   -27,   -11,   -58,   -87,   -85,   -87,   -53,   -54,
   -49,   -87,   -59,   -57,   -87,   -46,   -87,   -62,   -45,   -87,
   -64,   -61,   -63,   -60,   -87,   -56,   -69,   -47,   -52,   -87,
   -87,   -15,   -87,   166,   -87,   -87,   -87,   -87,   -87,   -87,
   -87,   -40,   -87,   -37,   -41,   -13,   -10,   -87,   -51,   -82,
   -87,   -87,   -87,   -81,   -86,   -87,   -65,   -87,   -87,   -74,
   -87,   -87,   -73,   -48,   -87,    -9,   -78,   -87,   -87,   -87,
   -17,   -14,   -87,   -21,   -87,   -43,   -23,   -87,   -87,   -31,
   -39,   -38,   -41,   -87,   -87,   -35,   -87,   -87,   -87,   -87,
   -66,   -87,   -87,   -87,   -55,   -50,   -70,   -87,   -87,   -87,
   -87,    -5,    -6,    -4,   -87,   -87,   -87,   -87,   -87,   -34,
   -36,   -87,   -87,   -67,   -84,   -19,   -87,   -83,   -80,   -87,
   -76,   -72,   -77,   -79,   -87,   -87,   -44,   -87,   -87,   -24,
   -87,   -42,   -32,   -87,   -75,   -87,   -68,   -20,   -22,   -87,
   -33,   -87,   -71,   -87,   -18,   -25 ]

racc_goto_table = [
    16,    39,    80,    87,    74,    62,    68,    94,   105,    97,
    99,     6,     5,    61,     4,    23,    95,    51,    95,    83,
    14,   114,   156,    71,     3,     2,   106,   141,     1,   nil,
   nil,   nil,   nil,   nil,   nil,    65,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   118,   nil,   nil,   129,    93,   nil,    96,
   nil,   100,   101,   nil,   nil,   nil,   nil,   nil,   nil,   115,
   nil,   136,    90,    99,   nil,   nil,   nil,   nil,   nil,   nil,
    95,   nil,   nil,   nil,   nil,   nil,   nil,   146,   143,   148,
   121,   122,   nil,   nil,   123,   134,    95,   130,    95,   nil,
   137,   nil,   nil,   nil,   nil,    61,   nil,   131,   nil,   nil,
   nil,   135,   nil,   nil,   nil,   138,   nil,   nil,   nil,   140,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   149,   nil,   nil,   152,   nil,   162,   nil,   nil,   nil,
   nil,   154,   nil,   nil,   nil,   nil,   nil,   nil,   157,   nil,
   158,   nil,   160,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   164,   nil,   165 ]

racc_goto_check = [
    15,     6,    29,    28,    33,    18,    22,    14,    17,    14,
    16,     8,     7,     6,     4,    10,    20,     5,    20,    21,
    13,    24,    25,    27,     3,     2,    28,    31,     1,   nil,
   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    28,   nil,   nil,    17,    15,   nil,    15,
   nil,     6,     6,   nil,   nil,   nil,   nil,   nil,   nil,    22,
   nil,    14,     8,    16,   nil,   nil,   nil,   nil,   nil,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,    14,    28,    14,
     6,     6,   nil,   nil,     6,    33,    20,    18,    20,   nil,
    33,   nil,   nil,   nil,   nil,     6,   nil,    15,   nil,   nil,
   nil,    15,   nil,   nil,   nil,     6,   nil,   nil,   nil,     6,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    15,   nil,   nil,     6,   nil,    29,   nil,   nil,   nil,
   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,
    15,   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    15,   nil,    15 ]

racc_goto_pointer = [
   nil,    28,    25,    24,    14,     7,    -8,    12,    11,   nil,
     8,   nil,   nil,    13,   -48,    -7,   -48,   -56,   -16,   nil,
   -39,   -15,   -19,   nil,   -56,  -122,   nil,    -3,   -41,   -29,
   nil,   -90,   nil,   -22 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,    86,   nil,   nil,     7,
   nil,    10,    69,    70,   nil,   nil,    17,   nil,   nil,    63,
    45,    47,    48,    24,    28,    29,    32,   nil,   nil,   nil,
    81,   nil,    73,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :T_COMMA => 2,
 :T_RARROW => 3,
 :K_OR => 4,
 :T_EOF => 5,
 :K_CLASS => 6,
 :K_METACLASS => 7,
 :K_MODULE => 8,
 :K_INTERFACE => 9,
 :K_TYPE => 10,
 :K_TYPEVAR => 11,
 :K_ALIAS => 12,
 :K_REQUIRE => 13,
 :K_END => 14,
 :K_SELF => 15,
 :K_TUPLE => 16,
 :T_BOTTOM => 17,
 :T_TOP => 18,
 :T_BEGIN_LINE => 19,
 :T_SEMICOLON => 20,
 :T_COLON => 21,
 :T_DOUBLE_COLON => 22,
 :T_DOT => 23,
 :T_STAR => 24,
 :T_QUESTION => 25,
 :T_CARROT => 26,
 :T_BANG => 27,
 :T_EQUAL => 28,
 :T_ASSOC => 29,
 :T_LPAREN => 30,
 :T_RPAREN => 31,
 :T_LESS => 32,
 :T_GREATER => 33,
 :T_LBRACKET => 34,
 :T_RBRACKET => 35,
 :T_LBRACE => 36,
 :T_RBRACE => 37,
 :T_TRUE => 38,
 :T_BOOL => 39,
 :T_FALSE => 40,
 :T_SUBTYPE => 41,
 :T_STRING => 42,
 :T_IVAR => 43,
 :T_CVAR => 44,
 :T_GVAR => 45,
 :T_CONST_ID => 46,
 :T_TYPE_ID => 47,
 :T_SYMBOL => 48,
 :T_LOCAL_ID => 49,
 :T_TICKED_ID => 50,
 :T_SUFFIXED_ID => 51,
 :T_DOUBLE_HASH => 52,
 :K_NIL => 53 }

racc_use_result_var = true

racc_nt_base = 54

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'T_COMMA',
'T_RARROW',
'K_OR',
'T_EOF',
'K_CLASS',
'K_METACLASS',
'K_MODULE',
'K_INTERFACE',
'K_TYPE',
'K_TYPEVAR',
'K_ALIAS',
'K_REQUIRE',
'K_END',
'K_SELF',
'K_TUPLE',
'T_BOTTOM',
'T_TOP',
'T_BEGIN_LINE',
'T_SEMICOLON',
'T_COLON',
'T_DOUBLE_COLON',
'T_DOT',
'T_STAR',
'T_QUESTION',
'T_CARROT',
'T_BANG',
'T_EQUAL',
'T_ASSOC',
'T_LPAREN',
'T_RPAREN',
'T_LESS',
'T_GREATER',
'T_LBRACKET',
'T_RBRACKET',
'T_LBRACE',
'T_RBRACE',
'T_TRUE',
'T_BOOL',
'T_FALSE',
'T_SUBTYPE',
'T_STRING',
'T_IVAR',
'T_CVAR',
'T_GVAR',
'T_CONST_ID',
'T_TYPE_ID',
'T_SYMBOL',
'T_LOCAL_ID',
'T_TICKED_ID',
'T_SUFFIXED_ID',
'T_DOUBLE_HASH',
'K_NIL',
'$start',
'entry',
'e_method',
'e_field',
'e_annotation',
'field_sig',
'type_expr',
'method_annotation_list',
'field_annotation_list',
'method_start',
'const_method_type',
'field_start',
'method_type',
'method_name',
'type_id_list',
'method_sig',
'relative_method_name',
'block',
'method_arg_list',
'method_arg',
'type_var',
'simple_type_var',
'type_ident_list',
'type_ident',
'or_type_list',
'single_type_expr',
'tuple',
'field_or_method_list',
'type_expr_comma_list',
'hash_member_list',
'hash_key',
'hash_type',
'field_type',
'field_or_method_nonempty_list']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 51
  def _reduce_1( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 52
  def _reduce_2( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 53
  def _reduce_3( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 59
  def _reduce_4( val, _values, result )
        result = handle_var(:ivar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 61
  def _reduce_5( val, _values, result )
        result = handle_var(:cvar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 63
  def _reduce_6( val, _values, result )
        result = handle_var(:gvar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 70
  def _reduce_7( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 73
  def _reduce_8( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 76
  def _reduce_9( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 79
  def _reduce_10( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 80
  def _reduce_11( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 83
  def _reduce_12( val, _values, result )
 result = [val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 87
  def _reduce_13( val, _values, result )
        result = [val[1]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 89
  def _reduce_14( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 90
  def _reduce_15( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 93
  def _reduce_16( val, _values, result )
 result = [val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 94
  def _reduce_17( val, _values, result )
 result = [val[1]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 99
  def _reduce_18( val, _values, result )
 result = handle_mtype(val[0], val[2], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 101
  def _reduce_19( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 106
  def _reduce_20( val, _values, result )
 result = handle_mtype(val[0], val[2], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 108
  def _reduce_21( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 110
  def _reduce_22( val, _values, result )
 result = handle_mtype(val[0], val[2], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 112
  def _reduce_23( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 116
  def _reduce_24( val, _values, result )
    	result = handle_mtype(ClassMethodIdentifier.new(val[2]), nil, val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 117
  def _reduce_25( val, _values, result )
 result = handle_mtype(ClassMethodIdentifier.new(val[2]), val[4], val[7])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 121
  def _reduce_26( val, _values, result )
       result = handle_mtype(MethodIdentifier.new("__rtc_next_method"), nil, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 124
  def _reduce_27( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 126
  def _reduce_28( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 128
  def _reduce_29( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 131
  def _reduce_30( val, _values, result )
 result = MethodIdentifier.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 132
  def _reduce_31( val, _values, result )
 result = ClassMethodIdentifier.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 138
  def _reduce_32( val, _values, result )
        result = construct_msig([], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 141
  def _reduce_33( val, _values, result )
        result = construct_msig(val[1], val[3], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 144
  def _reduce_34( val, _values, result )
    	result = construct_msig(val[1], val[3], Rtc::Types::TopType.instance)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 147
  def _reduce_35( val, _values, result )
        result = construct_msig([], val[2], Rtc::Types::TopType.instance)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 153
  def _reduce_36( val, _values, result )
      result = val[2].unshift(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 156
  def _reduce_37( val, _values, result )
      result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 160
  def _reduce_38( val, _values, result )
        result = Rtc::Types::OptionalArg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 163
  def _reduce_39( val, _values, result )
        result = Rtc::Types::Vararg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 166
  def _reduce_40( val, _values, result )
        result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 169
  def _reduce_41( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 170
  def _reduce_42( val, _values, result )
 result = handle_btype(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 173
  def _reduce_43( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 174
  def _reduce_44( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 177
  def _reduce_45( val, _values, result )
 result = handle_type_param(:id, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 178
  def _reduce_46( val, _values, result )
 result = handle_type_param(:self, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 181
  def _reduce_47( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 184
  def _reduce_48( val, _values, result )
        result = handle_type_param(:varargs, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 187
  def _reduce_49( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 191
  def _reduce_50( val, _values, result )
      result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 199
  def _reduce_51( val, _values, result )
   	  	result = {
   	  		:type => :absolute,
   	  		:name_list => val[1]
   	  	}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 205
  def _reduce_52( val, _values, result )
        result = {
        	:type => :relative,
        	:name_list => val[0]
        }
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 216
  def _reduce_53( val, _values, result )
        list = val[0][:or_list]
        if(list.length > 1)
          result = Rtc::Types::UnionType.new(list)
        else
          # flatten if there is no union
          result = list[0]
        end
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 218
  def _reduce_54( val, _values, result )
 result = {:or_list => [val[0]]}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 224
  def _reduce_55( val, _values, result )
        # need to differientiate OR lists from tuples (which are just arrays)
        val[2][:or_list] = [val[0]] + val[2][:or_list]
        result = val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 226
  def _reduce_56( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 230
  def _reduce_57( val, _values, result )
    	result = Rtc::Types::SymbolType.new(eval(val[0]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 233
  def _reduce_58( val, _values, result )
        result = handle_type_ident(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 236
  def _reduce_59( val, _values, result )
        result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 239
  def _reduce_60( val, _values, result )
        result = Rtc::Types::TopType.instance
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 242
  def _reduce_61( val, _values, result )
    	result = Rtc::Types::BottomType.instance
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 245
  def _reduce_62( val, _values, result )
        result = Rtc::Types::NominalType.of(TrueClass)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 248
  def _reduce_63( val, _values, result )
        result = Rtc::Types::NominalType.of(FalseClass)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 254
  def _reduce_64( val, _values, result )
        result = Rtc::Types::UnionType.of([
          Rtc::Types::NominalType.of(FalseClass),
          Rtc::Types::NominalType.of(TrueClass)
        ])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 257
  def _reduce_65( val, _values, result )
        result = Rtc::Types::TopType.instance
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 260
  def _reduce_66( val, _values, result )
        result = handle_structural_type(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 264
  def _reduce_67( val, _values, result )
        nominal = handle_type_ident(val[0])
        result = Rtc::Types::ParameterizedType.new(nominal, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 267
  def _reduce_68( val, _values, result )
       result = Rtc::Types::ProceduralType.new(nil, val[4], val[1], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 270
  def _reduce_69( val, _values, result )
    	result = Rtc::Types::NominalType.of(NilClass)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 273
  def _reduce_70( val, _values, result )
        result = Rtc::Types::HashType.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 279
  def _reduce_71( val, _values, result )
       result = val[4]
       result[val[0]] = val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 283
  def _reduce_72( val, _values, result )
      result = Rtc::NativeHash.new
      result[val[0]] = val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 285
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 286
  def _reduce_74( val, _values, result )
 result = eval(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 292
  def _reduce_75( val, _values, result )
       result = Rtc::Types::OptionalArg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 292
  def _reduce_76( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 298
  def _reduce_77( val, _values, result )
        result = Rtc::Types::TupleType.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 300
  def _reduce_78( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 303
  def _reduce_79( val, _values, result )
        result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 309
  def _reduce_80( val, _values, result )
        result = handle_var(:ivar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 313
  def _reduce_81( val, _values, result )
        result = {:fields => [val[0]], :methods => []}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 315
  def _reduce_82( val, _values, result )
        result = {:fields => [],       :methods => [val[0]]}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 320
  def _reduce_83( val, _values, result )
        field_method_hash = val[2]
        field_method_hash[:fields] += [val[0]]
        result = field_method_hash
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 325
  def _reduce_84( val, _values, result )
        field_method_hash = val[2]
        field_method_hash[:methods] += [val[0]]
        result = field_method_hash
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 327
  def _reduce_85( val, _values, result )
 result = {:fields => [], :methods => []}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 328
  def _reduce_86( val, _values, result )
 result = val[0]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

end   # class TypeAnnotationParser


end
