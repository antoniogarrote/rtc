#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/rtc/annot_parser.racc".
#

require 'racc/parser'



require 'rtc/annot_lexer.rex'
require 'rtc/parser'
require 'rtc/typing/types.rb'

module Rtc

  class TypeAnnotationParser < Racc::Parser

    attr_accessor :pos, :proxy

    # FIXME(rwsims): it's not clear what proxy is for, it's used when defining
    # class constants for doing class type signatures.
    def initialize(proxy)
        @proxy = proxy
    end

    def strip_quotes(arg)
      arg.strip.gsub(/^\"/, "").gsub(/\"$/, "")
    end

    # ####################
    # helper methods for type constructors from ML parser
    # ####################

    
    def pragma(key)
      fail "Unknown pragma keyword: #{key}" if(key !="FIXME")
    end

  end


class TypeAnnotationParser < Racc::Parser

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 56, :_reduce_1,
 1, 56, :_reduce_2,
 1, 56, :_reduce_3,
 1, 56, :_reduce_4,
 3, 61, :_reduce_5,
 3, 61, :_reduce_6,
 3, 61, :_reduce_7,
 2, 57, :_reduce_8,
 2, 58, :_reduce_9,
 3, 59, :_reduce_10,
 5, 60, :_reduce_11,
 1, 65, :_reduce_12,
 0, 65, :_reduce_13,
 2, 63, :_reduce_14,
 3, 63, :_reduce_15,
 1, 67, :_reduce_16,
 0, 67, :_reduce_17,
 2, 64, :_reduce_18,
 3, 64, :_reduce_19,
 6, 68, :_reduce_20,
 3, 68, :_reduce_21,
 6, 66, :_reduce_22,
 3, 66, :_reduce_23,
 6, 66, :_reduce_24,
 3, 66, :_reduce_25,
 5, 66, :_reduce_26,
 8, 66, :_reduce_27,
 1, 66, :_reduce_28,
 1, 72, :_reduce_29,
 1, 72, :_reduce_30,
 1, 72, :_reduce_31,
 1, 69, :_reduce_32,
 3, 69, :_reduce_33,
 5, 71, :_reduce_34,
 6, 71, :_reduce_35,
 4, 71, :_reduce_36,
 3, 71, :_reduce_37,
 3, 74, :_reduce_38,
 1, 74, :_reduce_39,
 2, 75, :_reduce_40,
 2, 75, :_reduce_41,
 1, 75, :_reduce_42,
 0, 73, :_reduce_43,
 3, 73, :_reduce_44,
 1, 70, :_reduce_45,
 3, 70, :_reduce_46,
 1, 77, :_reduce_47,
 1, 77, :_reduce_48,
 1, 76, :_reduce_49,
 2, 76, :_reduce_50,
 1, 78, :_reduce_51,
 3, 78, :_reduce_52,
 2, 79, :_reduce_53,
 1, 79, :_reduce_54,
 1, 62, :_reduce_55,
 1, 80, :_reduce_56,
 3, 80, :_reduce_57,
 1, 81, :_reduce_58,
 1, 81, :_reduce_59,
 1, 81, :_reduce_60,
 1, 81, :_reduce_61,
 1, 81, :_reduce_62,
 1, 81, :_reduce_63,
 1, 81, :_reduce_64,
 1, 81, :_reduce_65,
 1, 81, :_reduce_66,
 2, 81, :_reduce_67,
 3, 81, :_reduce_68,
 4, 81, :_reduce_69,
 5, 81, :_reduce_70,
 1, 81, :_reduce_71,
 3, 81, :_reduce_72,
 1, 81, :_reduce_73,
 5, 85, :_reduce_74,
 3, 85, :_reduce_75,
 1, 86, :_reduce_76,
 1, 86, :_reduce_77,
 2, 87, :_reduce_78,
 1, 87, :_reduce_79,
 4, 82, :_reduce_80,
 1, 84, :_reduce_81,
 3, 84, :_reduce_82,
 3, 88, :_reduce_83,
 1, 89, :_reduce_84,
 1, 89, :_reduce_85,
 3, 89, :_reduce_86,
 3, 89, :_reduce_87,
 0, 83, :_reduce_88,
 1, 83, :_reduce_89 ]

racc_reduce_n = 90

racc_shift_n = 173

racc_action_table = [
    12,   -18,    45,    30,   -14,    30,    31,    36,    39,     7,
   104,    76,    19,    22,    29,    60,    29,    73,    85,    76,
    42,   105,    69,    30,    21,    73,    25,   110,    32,    35,
    38,    41,   109,   114,   -17,   -17,   -17,    27,    37,    34,
    37,   115,    53,     9,    43,    30,    31,    36,    39,    81,
    55,    65,    19,    22,    69,    53,    29,    52,    37,    54,
    42,    86,    30,    30,    21,   146,    25,    30,    32,    35,
    38,    41,    87,    29,    29,    80,   145,    27,    29,    34,
    37,    90,    55,    65,    43,    30,    31,    36,    39,    52,
    88,    54,    19,    22,    69,    78,    29,    37,    37,    77,
    42,    89,    37,    30,    21,   125,    25,   126,    32,    35,
    38,    41,   127,   107,    29,    72,    71,    27,    27,    34,
    37,    53,    55,    65,    43,    30,    31,    36,    39,    52,
    55,    54,    19,    22,    91,    92,    29,    52,    37,    54,
    42,    96,    62,   106,    21,   135,    25,    59,    32,    35,
    38,    41,   139,    58,    55,   141,   142,    27,   121,    34,
    37,    52,   143,    54,    43,    30,    31,    36,    39,    13,
    14,    15,    19,    22,   144,    97,    29,   -16,   -16,   -16,
    42,   127,    57,    53,    21,   150,    25,   151,    32,    35,
    38,    41,   152,    56,   154,    27,   156,    27,    18,    34,
    37,   158,   103,    53,    43,    30,    31,    36,    39,   161,
   162,    17,    19,    22,   164,   102,    29,    53,    53,   168,
    42,   101,    53,   171,    21,    53,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,    91,    92,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   136,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
   nil,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,   nil,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,   nil,    34,
    37,   nil,   nil,   nil,    43,    30,    31,    36,    39,   nil,
    49,   nil,    19,    22,   nil,   nil,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    21,    53,    25,   nil,    32,    35,
    38,    41,   nil,   nil,   nil,   nil,   nil,    27,    55,    34,
    37,   nil,    47,   nil,    43,    52,   nil,    54 ]

racc_action_check = [
     0,    16,    10,   105,    46,   102,   102,   102,   102,     0,
    68,    25,   102,   102,   105,    16,   102,    25,    46,   154,
   102,    68,   101,    29,   102,   154,   102,    75,   102,   102,
   102,   102,    74,    82,     0,     0,     0,   102,   105,   102,
   102,    83,    86,     0,   102,   150,   150,   150,   150,    40,
   101,   101,   150,   150,   103,    88,   150,   101,    29,   101,
   150,    47,    87,    89,   150,   121,   150,   145,   150,   150,
   150,   150,    47,    87,    89,    31,   121,   150,   145,   150,
   150,    49,   103,   103,   150,    59,    59,    59,    59,   103,
    48,   103,    59,    59,    21,    28,    59,    87,    89,    27,
    59,    48,   145,   143,    59,    94,    59,    95,    59,    59,
    59,    59,    96,    70,   143,    24,    22,    59,    19,    59,
    59,   104,    21,    21,    59,    53,    53,    53,    53,    21,
   106,    21,    53,    53,    53,    53,    53,   106,   143,   106,
    53,    53,    17,    69,    53,   108,    53,    15,    53,    53,
    53,    53,   113,    14,    90,   115,   117,    53,    90,    53,
    53,    90,   118,    90,    53,     9,     9,     9,     9,     1,
     1,     1,     9,     9,   120,    56,     9,     7,     7,     7,
     9,   125,    13,   127,     9,   128,     9,   129,     9,     9,
     9,     9,   134,    12,   138,    77,   142,     9,     8,     9,
     9,   144,    67,   146,     9,   141,   141,   141,   141,   147,
   149,     2,   141,   141,   152,    65,   141,   156,   158,   159,
   141,    64,   164,   168,   141,   171,   141,   nil,   141,   141,
   141,   141,   nil,   nil,   nil,   nil,   nil,   141,   nil,   141,
   141,   nil,   nil,   nil,   141,    72,    72,    72,    72,   nil,
   nil,   nil,    72,    72,   nil,   nil,    72,   nil,   nil,   nil,
    72,   nil,   nil,   nil,    72,   nil,    72,   nil,    72,    72,
    72,    72,   nil,   nil,   nil,   nil,   nil,    72,   nil,    72,
    72,   nil,   nil,   nil,    72,   136,   136,   136,   136,   nil,
   nil,   nil,   136,   136,   nil,   nil,   136,   nil,   nil,   nil,
   136,   nil,   nil,   nil,   136,   nil,   136,   nil,   136,   136,
   136,   136,   nil,   nil,   nil,   nil,   nil,   136,   nil,   136,
   136,   nil,   nil,   nil,   136,   126,   126,   126,   126,   nil,
   nil,   nil,   126,   126,   126,   126,   126,   nil,   nil,   nil,
   126,   nil,   nil,   nil,   126,   nil,   126,   nil,   126,   126,
   126,   126,   nil,   nil,   nil,   nil,   nil,   126,   nil,   126,
   126,   nil,   nil,   nil,   126,   114,   114,   114,   114,   nil,
   nil,   nil,   114,   114,   nil,   nil,   114,   nil,   nil,   nil,
   114,   nil,   nil,   nil,   114,   nil,   114,   nil,   114,   114,
   114,   114,   nil,   nil,   nil,   nil,   nil,   114,   nil,   114,
   114,   nil,   nil,   nil,   114,   110,   110,   110,   110,   nil,
   nil,   nil,   110,   110,   nil,   110,   110,   nil,   nil,   nil,
   110,   nil,   nil,   nil,   110,   nil,   110,   nil,   110,   110,
   110,   110,   nil,   nil,   nil,   nil,   nil,   110,   nil,   110,
   110,   nil,   nil,   nil,   110,    78,    78,    78,    78,   nil,
   nil,   nil,    78,    78,   nil,   nil,    78,   nil,   nil,   nil,
    78,   nil,   nil,   nil,    78,   nil,    78,   nil,    78,    78,
    78,    78,   nil,   nil,   nil,   nil,   nil,    78,   nil,    78,
    78,   nil,   nil,   nil,    78,    80,    80,    80,    80,   nil,
   nil,   nil,    80,    80,   nil,   nil,    80,   nil,   nil,   nil,
    80,   nil,   nil,   nil,    80,   nil,    80,   nil,    80,    80,
    80,    80,   nil,   nil,   nil,   nil,   nil,    80,   nil,    80,
    80,   nil,   nil,   nil,    80,    58,    58,    58,    58,   nil,
   nil,   nil,    58,    58,   nil,   nil,    58,   nil,   nil,   nil,
    58,   nil,   nil,   nil,    58,   nil,    58,   nil,    58,    58,
    58,    58,   nil,   nil,   nil,   nil,   nil,    58,   nil,    58,
    58,   nil,   nil,   nil,    58,    42,    42,    42,    42,   nil,
   nil,   nil,    42,    42,   nil,   nil,    42,   nil,   nil,   nil,
    42,   nil,   nil,   nil,    42,   nil,    42,   nil,    42,    42,
    42,    42,   nil,   nil,   nil,   nil,   nil,    42,   nil,    42,
    42,   nil,   nil,   nil,    42,   161,   161,   161,   161,   nil,
   nil,   nil,   161,   161,   nil,   nil,   161,   nil,   nil,   nil,
   161,   nil,   nil,   nil,   161,   nil,   161,   nil,   161,   161,
   161,   161,   nil,   nil,   nil,   nil,   nil,   161,   nil,   161,
   161,   nil,   nil,   nil,   161,    91,    91,    91,    91,   nil,
   nil,   nil,    91,    91,   nil,   nil,    91,   nil,   nil,   nil,
    91,   nil,   nil,   nil,    91,   nil,    91,   nil,    91,    91,
    91,    91,   nil,   nil,   nil,   nil,   nil,    91,   nil,    91,
    91,   nil,   nil,   nil,    91,    97,    97,    97,    97,   nil,
   nil,   nil,    97,    97,   nil,   nil,    97,   nil,   nil,   nil,
    97,   nil,   nil,   nil,    97,   nil,    97,   nil,    97,    97,
    97,    97,   nil,   nil,   nil,   nil,   nil,    97,   nil,    97,
    97,   nil,   nil,   nil,    97,    92,    92,    92,    92,   nil,
   nil,   nil,    92,    92,   nil,   nil,    92,   nil,   nil,   nil,
    92,   nil,   nil,   nil,    92,   nil,    92,   nil,    92,    92,
    92,    92,   nil,   nil,   nil,   nil,   nil,    92,   nil,    92,
    92,   nil,   nil,   nil,    92,    57,    57,    57,    57,   nil,
    11,   nil,    57,    57,   nil,   nil,    57,   nil,   nil,   nil,
    57,   nil,   nil,   nil,    57,    11,    57,   nil,    57,    57,
    57,    57,   nil,   nil,   nil,   nil,   nil,    57,    11,    57,
    57,   nil,    11,   nil,    57,    11,   nil,    11 ]

racc_action_pointer = [
   -10,   125,   211,   nil,   nil,   nil,   nil,   133,   193,   150,
    -3,   755,   152,   161,   132,   126,    -4,   142,   nil,    71,
   nil,    79,    91,   nil,    83,   -32,   nil,    77,    91,     8,
   nil,    43,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    44,   nil,   550,   nil,   nil,   nil,    -1,    40,    69,    58,
   nil,   nil,   nil,   110,   nil,   nil,   147,   750,   510,    70,
   nil,   nil,   nil,   nil,   219,   194,   nil,   200,   -11,   120,
    78,   nil,   230,   nil,    -5,    -2,   nil,   148,   430,   nil,
   470,   nil,    31,    10,   nil,   nil,    12,    47,    25,    48,
   111,   630,   710,   nil,    74,   105,    76,   670,   nil,   nil,
   nil,     7,   -10,    39,    91,   -12,    87,   nil,   112,   nil,
   390,   nil,   nil,   119,   350,   152,   nil,   123,   160,   nil,
   141,    44,   nil,   nil,   nil,   145,   310,   153,   182,   182,
   nil,   nil,   nil,   nil,   159,   nil,   270,   nil,   192,   nil,
   nil,   190,   175,    88,   180,    52,   173,   206,   nil,   173,
    30,   nil,   193,   nil,   -24,   nil,   187,   nil,   188,   186,
   nil,   590,   nil,   nil,   192,   nil,   nil,   nil,   202,   nil,
   nil,   195,   nil ]

racc_action_default = [
   -13,   -90,   -90,    -1,    -2,    -3,    -4,   -12,   -90,   -90,
   -90,   -90,   -90,   -90,   -90,   -90,   -17,   -90,    -8,   -90,
   -49,   -88,   -90,   -54,   -60,   -90,   -55,   -51,   -56,   -90,
   -48,   -90,   -64,   -61,   -59,   -66,   -63,   -47,   -65,   -62,
   -90,   -73,   -90,   -71,   -58,    -9,   -13,   -90,   -90,   -90,
   -28,   -32,   -30,   -90,   -31,   -29,   -90,   -90,   -90,   -90,
   -16,   -19,   173,   -53,   -84,   -90,   -89,   -85,   -90,   -90,
   -90,   -67,   -90,   -77,   -90,   -90,   -76,   -90,   -90,   -50,
   -90,   -10,   -81,   -90,   -15,   -12,   -90,   -90,   -90,   -90,
   -90,   -90,   -90,   -42,   -90,   -39,   -43,   -90,    -5,    -6,
    -7,   -90,   -90,   -90,   -90,   -90,   -90,   -68,   -90,   -72,
   -90,   -52,   -57,   -90,   -90,   -90,   -25,   -90,   -45,   -23,
   -90,   -90,   -33,   -41,   -40,   -43,   -90,   -90,   -37,   -90,
   -86,   -83,   -87,   -21,   -90,   -69,   -90,   -79,   -75,   -80,
   -82,   -90,   -90,   -90,   -90,   -90,   -90,   -36,   -38,   -90,
   -90,   -11,   -90,   -78,   -90,   -70,   -90,   -46,   -90,   -90,
   -26,   -90,   -44,   -34,   -90,   -74,   -24,   -22,   -90,   -35,
   -20,   -90,   -27 ]

racc_goto_table = [
    50,    74,    40,    94,    63,   128,    66,    83,   118,   117,
   118,   120,     8,    10,   122,    48,    46,    16,     6,    79,
     5,   112,   155,    70,     4,     3,   118,   134,   138,    61,
   122,     2,   nil,   nil,   147,   nil,   nil,   108,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   113,    93,   nil,   nil,   nil,
    98,    99,   100,   nil,   nil,   nil,   nil,   nil,    84,   nil,
   nil,   nil,   111,   nil,   118,   157,   118,   159,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   116,   148,   119,   nil,   140,
   nil,   nil,   nil,   nil,   123,   124,   130,   nil,   132,   nil,
   129,   nil,   nil,   133,   nil,   131,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   137,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   149,   nil,   nil,    93,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   153,
   165,   nil,   nil,   nil,   nil,   160,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   163,   nil,   166,   nil,   167,   nil,   nil,
   nil,   nil,   nil,   170,   169,   nil,   nil,   nil,   nil,   nil,
   172 ]

racc_goto_check = [
    16,    30,     7,    19,    23,    18,    34,    29,    21,    15,
    21,    15,     8,     9,    17,    14,    11,     6,     5,    22,
     4,    25,    26,    28,     3,     2,    21,    15,    32,     9,
    17,     1,   nil,   nil,    18,   nil,   nil,    29,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    29,     7,   nil,   nil,   nil,
     7,     7,     7,   nil,   nil,   nil,   nil,   nil,     8,   nil,
   nil,   nil,    23,   nil,    21,    15,    21,    15,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,    19,    16,   nil,    29,
   nil,   nil,   nil,   nil,     7,     7,    34,   nil,    34,   nil,
     7,   nil,   nil,    16,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,
    30,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,   nil,    16,   nil,    16,   nil,   nil,
   nil,   nil,   nil,    16,     7,   nil,   nil,   nil,   nil,   nil,
    16 ]

racc_goto_pointer = [
   nil,    31,    25,    24,    20,    18,    16,    -7,    12,    13,
   nil,     5,   nil,   nil,     4,   -78,   -11,   -76,   -91,   -50,
   nil,   -79,   -10,   -15,   nil,   -57,  -119,   nil,     2,   -35,
   -24,   nil,   -82,   nil,   -15 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    82,   nil,   nil,
    11,   nil,     1,    67,    68,   nil,   nil,    51,   nil,   nil,
    95,    44,    20,    23,    24,    26,    28,    33,   nil,   nil,
   nil,    75,   nil,    64,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :T_COMMA => 2,
 :T_RARROW => 3,
 :K_OR => 4,
 :T_EOF => 5,
 :K_CLASS => 6,
 :K_METACLASS => 7,
 :K_MODULE => 8,
 :K_INTERFACE => 9,
 :K_TYPE => 10,
 :K_TYPEVAR => 11,
 :K_ALIAS => 12,
 :K_REQUIRE => 13,
 :K_END => 14,
 :K_SELF => 15,
 :K_TUPLE => 16,
 :T_BOTTOM => 17,
 :T_TOP => 18,
 :T_BEGIN_LINE => 19,
 :T_SEMICOLON => 20,
 :T_COLON => 21,
 :T_DOUBLE_COLON => 22,
 :T_DOT => 23,
 :T_STAR => 24,
 :T_QUESTION => 25,
 :T_CARROT => 26,
 :T_BANG => 27,
 :T_EQUAL => 28,
 :T_ASSOC => 29,
 :T_LPAREN => 30,
 :T_RPAREN => 31,
 :T_LESS => 32,
 :T_GREATER => 33,
 :T_LBRACKET => 34,
 :T_RBRACKET => 35,
 :T_LBRACE => 36,
 :T_RBRACE => 37,
 :T_TRUE => 38,
 :T_BOOL => 39,
 :T_FALSE => 40,
 :T_TYPE_NAME => 41,
 :T_SUBTYPE => 42,
 :T_STRING => 43,
 :T_IVAR => 44,
 :T_CVAR => 45,
 :T_GVAR => 46,
 :T_CONST_ID => 47,
 :T_TYPE_ID => 48,
 :T_SYMBOL => 49,
 :T_LOCAL_ID => 50,
 :T_TICKED_ID => 51,
 :T_SUFFIXED_ID => 52,
 :T_DOUBLE_HASH => 53,
 :K_NIL => 54 }

racc_use_result_var = true

racc_nt_base = 55

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'T_COMMA',
'T_RARROW',
'K_OR',
'T_EOF',
'K_CLASS',
'K_METACLASS',
'K_MODULE',
'K_INTERFACE',
'K_TYPE',
'K_TYPEVAR',
'K_ALIAS',
'K_REQUIRE',
'K_END',
'K_SELF',
'K_TUPLE',
'T_BOTTOM',
'T_TOP',
'T_BEGIN_LINE',
'T_SEMICOLON',
'T_COLON',
'T_DOUBLE_COLON',
'T_DOT',
'T_STAR',
'T_QUESTION',
'T_CARROT',
'T_BANG',
'T_EQUAL',
'T_ASSOC',
'T_LPAREN',
'T_RPAREN',
'T_LESS',
'T_GREATER',
'T_LBRACKET',
'T_RBRACKET',
'T_LBRACE',
'T_RBRACE',
'T_TRUE',
'T_BOOL',
'T_FALSE',
'T_TYPE_NAME',
'T_SUBTYPE',
'T_STRING',
'T_IVAR',
'T_CVAR',
'T_GVAR',
'T_CONST_ID',
'T_TYPE_ID',
'T_SYMBOL',
'T_LOCAL_ID',
'T_TICKED_ID',
'T_SUFFIXED_ID',
'T_DOUBLE_HASH',
'K_NIL',
'$start',
'entry',
'e_method',
'e_field',
'e_annotation',
'e_type',
'field_sig',
'type_expr',
'method_annotation_list',
'field_annotation_list',
'method_start',
'const_method_type',
'field_start',
'method_type',
'method_name',
'type_id_list',
'method_sig',
'relative_method_name',
'block',
'method_arg_list',
'method_arg',
'type_var',
'simple_type_var',
'type_ident_list',
'type_ident',
'or_type_list',
'single_type_expr',
'tuple',
'field_or_method_list',
'type_expr_comma_list',
'hash_member_list',
'hash_key',
'hash_type',
'field_type',
'field_or_method_nonempty_list']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 52
  def _reduce_1( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 53
  def _reduce_2( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 54
  def _reduce_3( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 55
  def _reduce_4( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 61
  def _reduce_5( val, _values, result )
        result = handle_var(:ivar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 63
  def _reduce_6( val, _values, result )
        result = handle_var(:cvar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 65
  def _reduce_7( val, _values, result )
        result = handle_var(:gvar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 72
  def _reduce_8( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 75
  def _reduce_9( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 78
  def _reduce_10( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 81
  def _reduce_11( val, _values, result )
 result = Rtc::TypeAbbreviation.new(val[1], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 84
  def _reduce_12( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 85
  def _reduce_13( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 88
  def _reduce_14( val, _values, result )
 result = [val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 92
  def _reduce_15( val, _values, result )
        result = [val[1]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 94
  def _reduce_16( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 95
  def _reduce_17( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 98
  def _reduce_18( val, _values, result )
 result = [val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 99
  def _reduce_19( val, _values, result )
 result = [val[1]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 104
  def _reduce_20( val, _values, result )
 result = handle_mtype(val[0], val[2], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 106
  def _reduce_21( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 111
  def _reduce_22( val, _values, result )
 result = handle_mtype(val[0], val[2], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 113
  def _reduce_23( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 115
  def _reduce_24( val, _values, result )
 result = handle_mtype(val[0], val[2], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 117
  def _reduce_25( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 121
  def _reduce_26( val, _values, result )
    	result = handle_mtype(ClassMethodIdentifier.new(val[2]), nil, val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 122
  def _reduce_27( val, _values, result )
 result = handle_mtype(ClassMethodIdentifier.new(val[2]), val[4], val[7])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 126
  def _reduce_28( val, _values, result )
       result = handle_mtype(MethodIdentifier.new("__rtc_next_method"), nil, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 129
  def _reduce_29( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 131
  def _reduce_30( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 133
  def _reduce_31( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 136
  def _reduce_32( val, _values, result )
 result = MethodIdentifier.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 137
  def _reduce_33( val, _values, result )
 result = ClassMethodIdentifier.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 143
  def _reduce_34( val, _values, result )
        result = construct_msig([], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 146
  def _reduce_35( val, _values, result )
        result = construct_msig(val[1], val[3], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 149
  def _reduce_36( val, _values, result )
    	result = construct_msig(val[1], val[3], Rtc::Types::TopType.instance)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 152
  def _reduce_37( val, _values, result )
        result = construct_msig([], val[2], Rtc::Types::TopType.instance)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 158
  def _reduce_38( val, _values, result )
      result = val[2].unshift(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 161
  def _reduce_39( val, _values, result )
      result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 165
  def _reduce_40( val, _values, result )
        result = Rtc::Types::OptionalArg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 168
  def _reduce_41( val, _values, result )
        result = Rtc::Types::Vararg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 171
  def _reduce_42( val, _values, result )
        result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 174
  def _reduce_43( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 175
  def _reduce_44( val, _values, result )
 result = handle_btype(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 178
  def _reduce_45( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 179
  def _reduce_46( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 182
  def _reduce_47( val, _values, result )
 result = handle_type_param(:id, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 183
  def _reduce_48( val, _values, result )
 result = handle_type_param(:self, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 186
  def _reduce_49( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 189
  def _reduce_50( val, _values, result )
        result = handle_type_param(:varargs, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 192
  def _reduce_51( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 196
  def _reduce_52( val, _values, result )
      result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 204
  def _reduce_53( val, _values, result )
   	  	result = {
   	  		:type => :absolute,
   	  		:name_list => val[1]
   	  	}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 210
  def _reduce_54( val, _values, result )
        result = {
        	:type => :relative,
        	:name_list => val[0]
        }
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 221
  def _reduce_55( val, _values, result )
        list = val[0][:or_list]
        if(list.length > 1)
          result = Rtc::Types::UnionType.new(list)
        else
          # flatten if there is no union
          result = list[0]
        end
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 238
  def _reduce_56( val, _values, result )
      # before unions could only be built via this parser rule so we didn't
      # need to account for nested unions (they were impossible to construct
      # in the grammar). Now with type abbreviations, it's possible to construct
      # a nested union as follows:
      # type %foo = Fixnum or String
      # type %bar = Float or Proc
      # type %baz = %foo or %baz
      # so we need to flatten it as we parse an or expression, so that the above
      # yields the type Fixnum or String or Float or Proc
      if val[0].is_a?(Rtc::Types::UnionType)
         result = {:or_list => val[0].types.to_a }
      else
         result = {:or_list => [val[0]]} 
      end
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 245
  def _reduce_57( val, _values, result )
        if val[0].is_a?(Rtc::Types::UnionType)
           result = {:or_list => val[0].types.to_a + val[2][:or_list] }
        else 
           result = {:or_list => [val[0]] + val[2][:or_list] }
        end
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 247
  def _reduce_58( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 251
  def _reduce_59( val, _values, result )
    	result = Rtc::Types::SymbolType.new(eval(val[0]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 254
  def _reduce_60( val, _values, result )
        result = handle_type_ident(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 257
  def _reduce_61( val, _values, result )
        result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 260
  def _reduce_62( val, _values, result )
        result = Rtc::Types::TopType.instance
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 263
  def _reduce_63( val, _values, result )
    	result = Rtc::Types::BottomType.instance
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 266
  def _reduce_64( val, _values, result )
        result = Rtc::Types::NominalType.of(TrueClass)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 269
  def _reduce_65( val, _values, result )
        result = Rtc::Types::NominalType.of(FalseClass)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 275
  def _reduce_66( val, _values, result )
        result = Rtc::Types::UnionType.of([
          Rtc::Types::NominalType.of(FalseClass),
          Rtc::Types::NominalType.of(TrueClass)
        ])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 278
  def _reduce_67( val, _values, result )
        result = Rtc::Types::TopType.instance
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 281
  def _reduce_68( val, _values, result )
        result = handle_structural_type(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 285
  def _reduce_69( val, _values, result )
        nominal = handle_type_ident(val[0])
        result = Rtc::Types::ParameterizedType.new(nominal, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 288
  def _reduce_70( val, _values, result )
       result = Rtc::Types::ProceduralType.new(nil, val[4], val[1], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 291
  def _reduce_71( val, _values, result )
    	result = Rtc::Types::NominalType.of(NilClass)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 294
  def _reduce_72( val, _values, result )
        result = Rtc::Types::HashType.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 297
  def _reduce_73( val, _values, result )
        result = get_type(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 303
  def _reduce_74( val, _values, result )
       result = val[4]
       result[val[0]] = val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 307
  def _reduce_75( val, _values, result )
      result = Rtc::NativeHash.new
      result[val[0]] = val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 309
  def _reduce_76( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 310
  def _reduce_77( val, _values, result )
 result = eval(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 316
  def _reduce_78( val, _values, result )
       result = Rtc::Types::OptionalArg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 316
  def _reduce_79( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 322
  def _reduce_80( val, _values, result )
        result = Rtc::Types::TupleType.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 324
  def _reduce_81( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 327
  def _reduce_82( val, _values, result )
        result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 333
  def _reduce_83( val, _values, result )
        result = handle_var(:ivar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 337
  def _reduce_84( val, _values, result )
        result = {:fields => [val[0]], :methods => []}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 339
  def _reduce_85( val, _values, result )
        result = {:fields => [],       :methods => [val[0]]}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 344
  def _reduce_86( val, _values, result )
        field_method_hash = val[2]
        field_method_hash[:fields] += [val[0]]
        result = field_method_hash
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 349
  def _reduce_87( val, _values, result )
        field_method_hash = val[2]
        field_method_hash[:methods] += [val[0]]
        result = field_method_hash
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 351
  def _reduce_88( val, _values, result )
 result = {:fields => [], :methods => []}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 352
  def _reduce_89( val, _values, result )
 result = val[0]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

end   # class TypeAnnotationParser


end
