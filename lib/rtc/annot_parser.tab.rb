#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'rtc/annot_lexer.rex'
require 'rtc/parser'
require 'rtc/typing/types.rb'

module Rtc

  class TypeAnnotationParser < Racc::Parser

    attr_accessor :pos, :proxy

    # FIXME(rwsims): it's not clear what proxy is for, it's used when defining
    # class constants for doing class type signatures.
    def initialize(proxy)
        @proxy = proxy
    end

    def strip_quotes(arg)
      arg.strip.gsub(/^\"/, "").gsub(/\"$/, "")
    end

    # ####################
    # helper methods for type constructors from ML parser
    # ####################

    
    def pragma(key)
      fail "Unknown pragma keyword: #{key}" if(key !="FIXME")
    end

  end

class TypeAnnotationParser < Racc::Parser

module_eval(<<'...end annot_parser.racc/module_eval...', 'annot_parser.racc', 391)

...end annot_parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    21,    14,    25,    86,    25,    18,    21,   -18,    21,
    43,    34,    33,    10,   106,    85,    25,    38,    23,   110,
    23,   109,    99,    53,    40,   105,    70,    24,    39,    24,
    42,   -14,    35,    37,    36,    20,   108,   -17,   -17,   -17,
    24,    20,    30,    20,    53,    83,     9,    41,    21,    43,
    34,    33,    80,    49,    72,    25,    38,    70,    81,    23,
    50,    49,    51,    40,    88,    21,    21,    39,    50,    42,
    51,    35,    37,    36,    80,    87,    23,    23,   107,    24,
    81,    30,    20,   125,    49,    72,    41,    21,    43,    34,
    33,    50,   149,    51,    25,    38,    70,   126,    23,    20,
    20,   127,    40,   150,    47,    21,    39,    24,    42,   101,
    35,    37,    36,   -16,   -16,   -16,    23,    98,    24,    53,
    30,    20,    97,    49,    72,    41,    21,    43,    34,    33,
    50,    49,    51,    25,    38,    46,    96,    23,    50,    20,
    51,    40,    89,    21,    21,    39,   134,    42,    82,    35,
    37,    36,    53,   111,    23,    23,    68,    24,    67,    30,
    20,    54,    55,    56,    41,    21,    43,    34,    33,    66,
   140,    24,    25,    38,    64,   145,    23,    20,    20,   146,
    40,   147,   148,    62,    39,   151,    42,    53,    35,    37,
    36,   125,    61,    49,   155,   156,    24,   122,    30,    20,
    50,   114,    51,    41,    21,    43,    34,    33,   158,   113,
   160,    25,    38,   115,   162,    23,    53,    17,    16,    40,
   166,   167,   168,    39,   112,    42,    53,    35,    37,    36,
    53,   172,    15,    53,   175,    24,    53,    30,    20,   nil,
   nil,   nil,    41,    21,    43,    34,    33,   nil,   nil,   nil,
    25,    38,   nil,   nil,    23,   nil,   nil,   nil,    40,   nil,
   nil,   nil,    39,   nil,    42,   nil,    35,    37,    36,   nil,
   nil,   nil,   nil,   nil,    24,   nil,    30,    20,   nil,   nil,
   nil,    41,    21,    43,    34,    33,   nil,   nil,   nil,    25,
    38,   nil,   nil,    23,   nil,   nil,   nil,    40,   nil,   nil,
   nil,    39,   nil,    42,   nil,    35,    37,    36,   nil,   nil,
   nil,   nil,   nil,    24,   nil,    30,    20,   nil,   nil,   nil,
    41,    21,    43,    34,    33,   nil,   nil,   nil,    25,    38,
   nil,   nil,    23,   nil,   nil,   nil,    40,   nil,   nil,   nil,
    39,   nil,    42,   nil,    35,    37,    36,   nil,   nil,   nil,
   nil,   nil,    24,   nil,    30,    20,   nil,   nil,   nil,    41,
    21,    43,    34,    33,   nil,   nil,   nil,    25,    38,   nil,
   nil,    23,   nil,   nil,   nil,    40,   nil,   nil,   nil,    39,
   nil,    42,   nil,    35,    37,    36,   nil,   nil,   nil,   nil,
   nil,    24,   nil,    30,    20,   nil,   nil,   nil,    41,    21,
    43,    34,    33,   nil,   nil,   nil,    25,    38,    94,    93,
    23,   nil,   nil,   nil,    40,   nil,   nil,   nil,    39,   nil,
    42,   nil,    35,    37,    36,   nil,   nil,   nil,   nil,   nil,
    24,   nil,    30,    20,   nil,   nil,   nil,    41,    21,    43,
    34,    33,   nil,   nil,   nil,    25,    38,   nil,   nil,    23,
   nil,   nil,   nil,    40,   nil,   nil,   nil,    39,   nil,    42,
   nil,    35,    37,    36,   nil,   nil,   nil,   nil,   nil,    24,
   nil,    30,    20,   nil,   nil,   nil,    41,    21,    43,    34,
    33,   nil,   nil,   nil,    25,    38,   nil,   nil,    23,   nil,
   nil,   nil,    40,   nil,   nil,   nil,    39,   nil,    42,   nil,
    35,    37,    36,   nil,   nil,   nil,   nil,   nil,    24,   nil,
    30,    20,   nil,   nil,   nil,    41,    21,    43,    34,    33,
   nil,   nil,   nil,    25,    38,   nil,   143,    23,   nil,   nil,
   nil,    40,   nil,   nil,   nil,    39,   nil,    42,   nil,    35,
    37,    36,   nil,   nil,   nil,   nil,   nil,    24,   nil,    30,
    20,   nil,   nil,   nil,    41,    21,    43,    34,    33,   nil,
   nil,   nil,    25,    38,   nil,   nil,    23,   nil,   nil,   nil,
    40,   nil,   nil,   nil,    39,   nil,    42,   nil,    35,    37,
    36,   nil,   nil,   nil,   nil,   nil,    24,   nil,    30,    20,
   nil,   nil,   nil,    41,    21,    43,    34,    33,   nil,   nil,
   nil,    25,    38,   nil,   nil,    23,   nil,   nil,   nil,    40,
   nil,   nil,   nil,    39,   nil,    42,   nil,    35,    37,    36,
   nil,   nil,   nil,   nil,   nil,    24,   nil,    30,    20,   nil,
   nil,   nil,    41,    21,    43,    34,    33,   nil,   nil,   nil,
    25,    38,    94,    93,    23,   nil,   nil,   nil,    40,    90,
   nil,   nil,    39,   nil,    42,   nil,    35,    37,    36,   nil,
   nil,   nil,   nil,   nil,    24,   nil,    30,    20,   nil,   nil,
   nil,    41,    21,    43,    34,    33,   nil,   nil,   nil,    25,
    38,   nil,   nil,    23,   nil,   nil,   nil,    40,   nil,   nil,
   nil,    39,   nil,    42,   nil,    35,    37,    36,   nil,   nil,
   nil,   nil,   nil,    24,   nil,    30,    20,   nil,   nil,   nil,
    41,    21,    43,    34,    33,   nil,   nil,   nil,    25,    38,
   nil,   nil,    23,   nil,   nil,   nil,    40,   nil,   nil,   nil,
    39,   nil,    42,   nil,    35,    37,    36,   nil,   nil,   nil,
   nil,   nil,    24,   nil,    30,    20,   nil,   nil,   nil,    41 ]

racc_action_check = [
     0,    23,     0,    13,    45,    14,     8,   147,    57,   167,
   167,   167,   167,     0,    69,    45,   167,   167,   147,    73,
   167,    72,    57,    86,   167,    69,    39,    13,   167,    14,
   167,    44,   167,   167,   167,    23,    71,     0,     0,     0,
   167,   147,   167,   167,    88,    44,     0,   167,   151,   151,
   151,   151,    42,    39,    39,   151,   151,   111,    42,   151,
    39,   107,    39,   151,    46,   150,   101,   151,   107,   151,
   107,   151,   151,   151,   158,    46,   150,   101,    70,   151,
   158,   151,   151,    90,   111,   111,   151,    82,    82,    82,
    82,   111,   122,   111,    82,    82,   110,    91,    82,   150,
   101,    92,    82,   122,    11,   105,    82,    64,    82,    58,
    82,    82,    82,    10,    10,    10,   105,    56,    82,    11,
    82,    82,    55,   110,   110,    82,    67,    67,    67,    67,
   110,    11,   110,    67,    67,    11,    54,    67,    11,   105,
    11,    67,    47,    87,    85,    67,   104,    67,    43,    67,
    67,    67,   106,    74,    87,    85,    38,    67,    31,    67,
    67,    12,    12,    12,    67,     9,     9,     9,     9,    28,
   112,    25,     9,     9,    24,   116,     9,    87,    85,   117,
     9,   118,   120,    19,     9,   124,     9,   125,     9,     9,
     9,   126,    15,    89,   133,   135,     9,    89,     9,     9,
    89,    78,    89,     9,   143,   143,   143,   143,   142,    77,
   146,   143,   143,    79,   148,   143,   149,     7,     6,   143,
   152,   153,   156,   143,    76,   143,   160,   143,   143,   143,
   162,   164,     1,   168,   172,   143,   175,   143,   143,   nil,
   nil,   nil,   143,    66,    66,    66,    66,   nil,   nil,   nil,
    66,    66,   nil,   nil,    66,   nil,   nil,   nil,    66,   nil,
   nil,   nil,    66,   nil,    66,   nil,    66,    66,    66,   nil,
   nil,   nil,   nil,   nil,    66,   nil,    66,    66,   nil,   nil,
   nil,    66,   140,   140,   140,   140,   nil,   nil,   nil,   140,
   140,   nil,   nil,   140,   nil,   nil,   nil,   140,   nil,   nil,
   nil,   140,   nil,   140,   nil,   140,   140,   140,   nil,   nil,
   nil,   nil,   nil,   140,   nil,   140,   140,   nil,   nil,   nil,
   140,    93,    93,    93,    93,   nil,   nil,   nil,    93,    93,
   nil,   nil,    93,   nil,   nil,   nil,    93,   nil,   nil,   nil,
    93,   nil,    93,   nil,    93,    93,    93,   nil,   nil,   nil,
   nil,   nil,    93,   nil,    93,    93,   nil,   nil,   nil,    93,
    94,    94,    94,    94,   nil,   nil,   nil,    94,    94,   nil,
   nil,    94,   nil,   nil,   nil,    94,   nil,   nil,   nil,    94,
   nil,    94,   nil,    94,    94,    94,   nil,   nil,   nil,   nil,
   nil,    94,   nil,    94,    94,   nil,   nil,   nil,    94,   127,
   127,   127,   127,   nil,   nil,   nil,   127,   127,   127,   127,
   127,   nil,   nil,   nil,   127,   nil,   nil,   nil,   127,   nil,
   127,   nil,   127,   127,   127,   nil,   nil,   nil,   nil,   nil,
   127,   nil,   127,   127,   nil,   nil,   nil,   127,    96,    96,
    96,    96,   nil,   nil,   nil,    96,    96,   nil,   nil,    96,
   nil,   nil,   nil,    96,   nil,   nil,   nil,    96,   nil,    96,
   nil,    96,    96,    96,   nil,   nil,   nil,   nil,   nil,    96,
   nil,    96,    96,   nil,   nil,   nil,    96,    97,    97,    97,
    97,   nil,   nil,   nil,    97,    97,   nil,   nil,    97,   nil,
   nil,   nil,    97,   nil,   nil,   nil,    97,   nil,    97,   nil,
    97,    97,    97,   nil,   nil,   nil,   nil,   nil,    97,   nil,
    97,    97,   nil,   nil,   nil,    97,   115,   115,   115,   115,
   nil,   nil,   nil,   115,   115,   nil,   115,   115,   nil,   nil,
   nil,   115,   nil,   nil,   nil,   115,   nil,   115,   nil,   115,
   115,   115,   nil,   nil,   nil,   nil,   nil,   115,   nil,   115,
   115,   nil,   nil,   nil,   115,   113,   113,   113,   113,   nil,
   nil,   nil,   113,   113,   nil,   nil,   113,   nil,   nil,   nil,
   113,   nil,   nil,   nil,   113,   nil,   113,   nil,   113,   113,
   113,   nil,   nil,   nil,   nil,   nil,   113,   nil,   113,   113,
   nil,   nil,   nil,   113,    98,    98,    98,    98,   nil,   nil,
   nil,    98,    98,   nil,   nil,    98,   nil,   nil,   nil,    98,
   nil,   nil,   nil,    98,   nil,    98,   nil,    98,    98,    98,
   nil,   nil,   nil,   nil,   nil,    98,   nil,    98,    98,   nil,
   nil,   nil,    98,    53,    53,    53,    53,   nil,   nil,   nil,
    53,    53,    53,    53,    53,   nil,   nil,   nil,    53,    53,
   nil,   nil,    53,   nil,    53,   nil,    53,    53,    53,   nil,
   nil,   nil,   nil,   nil,    53,   nil,    53,    53,   nil,   nil,
   nil,    53,   109,   109,   109,   109,   nil,   nil,   nil,   109,
   109,   nil,   nil,   109,   nil,   nil,   nil,   109,   nil,   nil,
   nil,   109,   nil,   109,   nil,   109,   109,   109,   nil,   nil,
   nil,   nil,   nil,   109,   nil,   109,   109,   nil,   nil,   nil,
   109,    40,    40,    40,    40,   nil,   nil,   nil,    40,    40,
   nil,   nil,    40,   nil,   nil,   nil,    40,   nil,   nil,   nil,
    40,   nil,    40,   nil,    40,    40,    40,   nil,   nil,   nil,
   nil,   nil,    40,   nil,    40,    40,   nil,   nil,   nil,    40 ]

racc_action_pointer = [
    -6,   232,   nil,   nil,   nil,   nil,   213,   212,     1,   150,
    70,    89,   118,   -19,   -17,   192,   nil,   nil,   nil,   178,
   nil,   nil,   nil,   -14,   152,   125,   nil,   nil,   165,   nil,
   nil,   126,   nil,   nil,   nil,   nil,   nil,   nil,   131,    11,
   696,   nil,    10,   116,    26,   -17,    43,   119,   nil,   nil,
   nil,   nil,   nil,   618,   115,   101,    96,     3,    77,   nil,
   nil,   nil,   nil,   nil,    61,   nil,   228,   111,   nil,    -7,
    55,     1,     0,    17,   151,   nil,   193,   207,   164,   184,
   nil,   nil,    72,   nil,   nil,   129,    -7,   128,    14,   151,
    47,    66,    99,   306,   345,   nil,   423,   462,   579,   nil,
   nil,    51,   nil,   nil,   113,    90,   122,    19,   nil,   657,
    81,    42,   167,   540,   nil,   501,   142,   146,   179,   nil,
   149,   nil,    71,   nil,   182,   157,   155,   384,   nil,   nil,
   nil,   nil,   nil,   161,   nil,   162,   nil,   nil,   nil,   nil,
   267,   nil,   206,   189,   nil,   nil,   189,    -8,   193,   186,
    50,    33,   183,   218,   nil,   nil,   201,   nil,    32,   nil,
   196,   nil,   200,   nil,   198,   nil,   nil,    -6,   203,   nil,
   nil,   nil,   213,   nil,   nil,   206,   nil ]

racc_action_default = [
   -13,   -93,    -1,    -2,    -3,    -4,   -93,   -93,   -93,   -93,
   -12,   -93,   -93,   -93,   -93,   -93,    -8,    -9,   -10,   -93,
   -47,   -48,   -49,   -93,   -51,   -93,   -54,   -55,   -56,   -58,
   -59,   -60,   -61,   -62,   -63,   -64,   -65,   -66,   -93,   -91,
   -93,   -71,   -93,   -93,   -13,   -93,   -93,   -93,   -28,   -29,
   -30,   -31,   -32,   -93,   -93,   -93,   -93,   -17,   -83,   -84,
   -85,   177,   -11,   -50,   -93,   -53,   -93,   -93,   -67,   -93,
   -93,   -93,   -93,   -87,   -88,   -92,   -93,   -80,   -93,   -93,
   -75,   -76,   -93,   -12,   -15,   -93,   -93,   -93,   -93,   -93,
   -43,   -93,   -39,   -93,   -93,   -42,   -93,   -93,   -93,   -16,
   -19,   -93,   -52,   -57,   -93,   -93,   -93,   -93,   -68,   -93,
   -93,   -93,   -93,   -93,   -72,   -93,   -93,   -93,   -45,   -23,
   -93,   -25,   -93,   -33,   -37,   -93,   -43,   -93,   -40,   -41,
    -5,    -6,    -7,   -93,   -69,   -93,   -21,   -86,   -89,   -90,
   -93,   -81,   -74,   -93,   -78,   -79,   -93,   -93,   -93,   -93,
   -93,   -93,   -93,   -36,   -38,   -82,   -93,   -70,   -93,   -77,
   -93,   -46,   -93,   -26,   -93,   -34,   -44,   -93,   -93,   -73,
   -22,   -24,   -93,   -35,   -20,   -93,   -27 ]

racc_goto_table = [
    48,    19,    78,   118,    91,   118,    76,     7,   117,    75,
   120,     6,    65,   124,   123,    58,    58,    59,    60,   118,
   103,    57,     5,   118,   133,    63,     4,    45,   135,     8,
   157,    71,   123,   104,     3,     2,   142,    44,     1,   nil,
   nil,   nil,   nil,   nil,   nil,    95,   nil,   nil,   116,   153,
   nil,   102,   nil,   nil,   nil,    84,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   100,   118,   nil,   nil,   118,   nil,
   161,   nil,   nil,   164,   nil,   119,   nil,   121,   154,   141,
   138,   139,   nil,   nil,   nil,   128,   129,   nil,   130,   131,
   132,   nil,   nil,   nil,   nil,   136,   nil,   nil,   nil,   nil,
   nil,   137,   nil,   nil,   nil,   nil,   nil,   144,   nil,   nil,
   nil,   nil,   nil,   nil,   152,   nil,   nil,   nil,   169,    95,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   159,   nil,   nil,   163,   nil,
   nil,   nil,   nil,   165,   nil,   nil,   nil,   nil,   nil,   170,
   nil,   171,   nil,   nil,   nil,   nil,   nil,   174,   nil,   173,
   nil,   nil,   nil,   nil,   176 ]

racc_goto_check = [
    17,     7,    31,    22,    20,    22,    30,     9,    16,    36,
    16,     8,    24,    19,    18,    25,    25,    34,    34,    22,
    26,     6,     5,    22,    16,    23,     4,    15,    16,    10,
    27,    29,    18,    30,     3,     2,    33,    12,     1,   nil,
   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,    30,    19,
   nil,    24,   nil,   nil,   nil,     8,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     9,    22,   nil,   nil,    22,   nil,
    16,   nil,   nil,    16,   nil,    17,   nil,    17,    20,    30,
    36,    36,   nil,   nil,   nil,     7,     7,   nil,     7,     7,
     7,   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,
   nil,     7,   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,
   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,    31,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,    17,   nil,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,    17,
   nil,    17,   nil,   nil,   nil,   nil,   nil,    17,   nil,     7,
   nil,   nil,   nil,   nil,    17 ]

racc_goto_pointer = [
   nil,    38,    35,    34,    26,    22,     9,    -8,    11,     7,
    29,   nil,    26,   nil,   nil,    16,   -77,   -11,   -75,   -77,
   -49,   nil,   -82,     2,   -13,     2,   -46,  -110,   nil,    -8,
   -34,   -40,   nil,   -79,     4,   nil,   -30 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    77,   nil,   nil,
   nil,    11,   nil,    12,    74,    69,   nil,   nil,    52,   nil,
   nil,    92,    29,    22,    26,    31,    27,    28,    32,   nil,
   nil,   nil,    79,   nil,   nil,    73,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 55, :_reduce_1,
  1, 55, :_reduce_2,
  1, 55, :_reduce_3,
  1, 55, :_reduce_4,
  3, 60, :_reduce_5,
  3, 60, :_reduce_6,
  3, 60, :_reduce_7,
  2, 56, :_reduce_8,
  2, 57, :_reduce_9,
  2, 58, :_reduce_10,
  3, 59, :_reduce_11,
  1, 65, :_reduce_12,
  0, 65, :_reduce_13,
  2, 62, :_reduce_14,
  3, 62, :_reduce_15,
  1, 67, :_reduce_16,
  0, 67, :_reduce_17,
  2, 63, :_reduce_18,
  3, 63, :_reduce_19,
  6, 68, :_reduce_20,
  3, 68, :_reduce_21,
  6, 66, :_reduce_22,
  3, 66, :_reduce_23,
  6, 66, :_reduce_24,
  3, 66, :_reduce_25,
  5, 66, :_reduce_26,
  8, 66, :_reduce_27,
  1, 66, :_reduce_28,
  1, 72, :_reduce_29,
  1, 72, :_reduce_30,
  1, 72, :_reduce_31,
  1, 69, :_reduce_32,
  3, 69, :_reduce_33,
  5, 71, :_reduce_34,
  6, 71, :_reduce_35,
  4, 71, :_reduce_36,
  3, 71, :_reduce_37,
  3, 74, :_reduce_38,
  1, 74, :_reduce_39,
  2, 75, :_reduce_40,
  2, 75, :_reduce_41,
  1, 75, :_reduce_42,
  0, 73, :_reduce_43,
  3, 73, :_reduce_44,
  1, 70, :_reduce_45,
  3, 70, :_reduce_46,
  1, 77, :_reduce_47,
  1, 77, :_reduce_48,
  1, 76, :_reduce_49,
  2, 76, :_reduce_50,
  1, 78, :_reduce_51,
  3, 78, :_reduce_52,
  2, 79, :_reduce_53,
  1, 79, :_reduce_54,
  1, 61, :_reduce_55,
  1, 80, :_reduce_56,
  3, 80, :_reduce_57,
  1, 81, :_reduce_58,
  1, 81, :_reduce_59,
  1, 81, :_reduce_60,
  1, 81, :_reduce_61,
  1, 81, :_reduce_62,
  1, 81, :_reduce_63,
  1, 81, :_reduce_64,
  1, 81, :_reduce_65,
  1, 81, :_reduce_66,
  2, 81, :_reduce_67,
  3, 81, :_reduce_68,
  4, 81, :_reduce_69,
  5, 81, :_reduce_70,
  1, 81, :_reduce_71,
  3, 81, :_reduce_72,
  5, 85, :_reduce_73,
  3, 85, :_reduce_74,
  1, 86, :_reduce_75,
  1, 86, :_reduce_76,
  2, 87, :_reduce_77,
  1, 87, :_reduce_78,
  4, 82, :_reduce_79,
  1, 84, :_reduce_80,
  3, 84, :_reduce_81,
  4, 88, :_reduce_82,
  1, 88, :_reduce_83,
  2, 64, :_reduce_84,
  2, 64, :_reduce_85,
  3, 89, :_reduce_86,
  1, 90, :_reduce_87,
  1, 90, :_reduce_88,
  3, 90, :_reduce_89,
  3, 90, :_reduce_90,
  0, 83, :_reduce_91,
  1, 83, :_reduce_92 ]

racc_reduce_n = 93

racc_shift_n = 177

racc_token_table = {
  false => 0,
  :error => 1,
  :T_COMMA => 2,
  :T_RARROW => 3,
  :K_OR => 4,
  :T_EOF => 5,
  :K_CLASS => 6,
  :K_METACLASS => 7,
  :K_MODULE => 8,
  :K_INTERFACE => 9,
  :K_TYPE => 10,
  :K_TYPEVAR => 11,
  :K_ALIAS => 12,
  :K_REQUIRE => 13,
  :K_END => 14,
  :K_SELF => 15,
  :K_TUPLE => 16,
  :T_BOTTOM => 17,
  :T_TOP => 18,
  :T_BEGIN_LINE => 19,
  :T_SEMICOLON => 20,
  :T_COLON => 21,
  :T_DOUBLE_COLON => 22,
  :T_DOT => 23,
  :T_STAR => 24,
  :T_QUESTION => 25,
  :T_CARROT => 26,
  :T_BANG => 27,
  :T_EQUAL => 28,
  :T_ASSOC => 29,
  :T_LPAREN => 30,
  :T_RPAREN => 31,
  :T_LESS => 32,
  :T_GREATER => 33,
  :T_LBRACKET => 34,
  :T_RBRACKET => 35,
  :T_LBRACE => 36,
  :T_RBRACE => 37,
  :T_TRUE => 38,
  :T_BOOL => 39,
  :T_FALSE => 40,
  :T_SUBTYPE => 41,
  :T_STRING => 42,
  :T_IVAR => 43,
  :T_CVAR => 44,
  :T_GVAR => 45,
  :T_CONST_ID => 46,
  :T_TYPE_ID => 47,
  :T_SYMBOL => 48,
  :T_LOCAL_ID => 49,
  :T_TICKED_ID => 50,
  :T_SUFFIXED_ID => 51,
  :T_DOUBLE_HASH => 52,
  :K_NIL => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "T_COMMA",
  "T_RARROW",
  "K_OR",
  "T_EOF",
  "K_CLASS",
  "K_METACLASS",
  "K_MODULE",
  "K_INTERFACE",
  "K_TYPE",
  "K_TYPEVAR",
  "K_ALIAS",
  "K_REQUIRE",
  "K_END",
  "K_SELF",
  "K_TUPLE",
  "T_BOTTOM",
  "T_TOP",
  "T_BEGIN_LINE",
  "T_SEMICOLON",
  "T_COLON",
  "T_DOUBLE_COLON",
  "T_DOT",
  "T_STAR",
  "T_QUESTION",
  "T_CARROT",
  "T_BANG",
  "T_EQUAL",
  "T_ASSOC",
  "T_LPAREN",
  "T_RPAREN",
  "T_LESS",
  "T_GREATER",
  "T_LBRACKET",
  "T_RBRACKET",
  "T_LBRACE",
  "T_RBRACE",
  "T_TRUE",
  "T_BOOL",
  "T_FALSE",
  "T_SUBTYPE",
  "T_STRING",
  "T_IVAR",
  "T_CVAR",
  "T_GVAR",
  "T_CONST_ID",
  "T_TYPE_ID",
  "T_SYMBOL",
  "T_LOCAL_ID",
  "T_TICKED_ID",
  "T_SUFFIXED_ID",
  "T_DOUBLE_HASH",
  "K_NIL",
  "$start",
  "entry",
  "e_method",
  "e_field",
  "e_class",
  "e_annotation",
  "field_sig",
  "type_expr",
  "method_annotation_list",
  "field_annotation_list",
  "class_annotation",
  "method_start",
  "const_method_type",
  "field_start",
  "method_type",
  "method_name",
  "type_id_list",
  "method_sig",
  "relative_method_name",
  "block",
  "method_arg_list",
  "method_arg",
  "type_var",
  "simple_type_var",
  "type_ident_list",
  "type_ident",
  "or_type_list",
  "single_type_expr",
  "tuple",
  "field_or_method_list",
  "type_expr_comma_list",
  "hash_member_list",
  "hash_key",
  "hash_type",
  "class_decl",
  "field_type",
  "field_or_method_nonempty_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'annot_parser.racc', 51)
  def _reduce_1(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 52)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 53)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 54)
  def _reduce_4(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 59)
  def _reduce_5(val, _values, result)
            result = handle_var(:ivar, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 61)
  def _reduce_6(val, _values, result)
            result = handle_var(:cvar, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 63)
  def _reduce_7(val, _values, result)
            result = handle_var(:gvar, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 71)
  def _reduce_8(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 74)
  def _reduce_9(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 77)
  def _reduce_10(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 80)
  def _reduce_11(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 83)
  def _reduce_12(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 84)
  def _reduce_13(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 87)
  def _reduce_14(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 89)
  def _reduce_15(val, _values, result)
            result = [val[1]] + val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 93)
  def _reduce_16(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 94)
  def _reduce_17(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 97)
  def _reduce_18(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 98)
  def _reduce_19(val, _values, result)
     result = [val[1]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 103)
  def _reduce_20(val, _values, result)
     result = handle_mtype(val[0], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 105)
  def _reduce_21(val, _values, result)
     result = handle_mtype(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 110)
  def _reduce_22(val, _values, result)
     result = handle_mtype(val[0], val[2], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 112)
  def _reduce_23(val, _values, result)
     result = handle_mtype(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 114)
  def _reduce_24(val, _values, result)
     result = handle_mtype(val[0], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 116)
  def _reduce_25(val, _values, result)
     result = handle_mtype(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 118)
  def _reduce_26(val, _values, result)
        	result = handle_mtype(ClassMethodIdentifier.new(val[2]), nil, val[4]) 
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 121)
  def _reduce_27(val, _values, result)
     result = handle_mtype(ClassMethodIdentifier.new(val[2]), val[4], val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 123)
  def _reduce_28(val, _values, result)
           result = handle_mtype(MethodIdentifier.new("__rtc_next_method"), nil, val[0])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 128)
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 130)
  def _reduce_30(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 132)
  def _reduce_31(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 135)
  def _reduce_32(val, _values, result)
     result = MethodIdentifier.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 136)
  def _reduce_33(val, _values, result)
     result = ClassMethodIdentifier.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 140)
  def _reduce_34(val, _values, result)
            result = construct_msig([], val[2], val[4])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 143)
  def _reduce_35(val, _values, result)
            result = construct_msig(val[1], val[3], val[5])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 146)
  def _reduce_36(val, _values, result)
        	result = construct_msig(val[1], val[3], Rtc::Types::TopType.instance)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 149)
  def _reduce_37(val, _values, result)
            result = construct_msig([], val[2], Rtc::Types::TopType.instance)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 155)
  def _reduce_38(val, _values, result)
          result = val[2].unshift(val[0])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 158)
  def _reduce_39(val, _values, result)
          result = [val[0]]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 162)
  def _reduce_40(val, _values, result)
            result = Rtc::Types::OptionalArg.new(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 165)
  def _reduce_41(val, _values, result)
            result = Rtc::Types::Vararg.new(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 168)
  def _reduce_42(val, _values, result)
            result = val[0]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 173)
  def _reduce_43(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 174)
  def _reduce_44(val, _values, result)
     result = handle_btype(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 177)
  def _reduce_45(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 178)
  def _reduce_46(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 181)
  def _reduce_47(val, _values, result)
     result = handle_type_param(:id, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 182)
  def _reduce_48(val, _values, result)
     result = handle_type_param(:self, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 185)
  def _reduce_49(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 187)
  def _reduce_50(val, _values, result)
            result = handle_type_param(:varargs, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 191)
  def _reduce_51(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 193)
  def _reduce_52(val, _values, result)
          result = [val[0]] + val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 198)
  def _reduce_53(val, _values, result)
       	  	result = {
   	  		:type => :absolute,
   	  		:name_list => val[1]
   	  	}
   	  
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 204)
  def _reduce_54(val, _values, result)
            result = {
        	:type => :relative,
        	:name_list => val[0]
        }
   	  
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 212)
  def _reduce_55(val, _values, result)
            list = val[0][:or_list]
        if(list.length > 1)
          result = Rtc::Types::UnionType.new(list)
        else
          # flatten if there is no union
          result = list[0]
        end
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 222)
  def _reduce_56(val, _values, result)
     result = {:or_list => [val[0]]} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 224)
  def _reduce_57(val, _values, result)
            # need to differientiate OR lists from tuples (which are just arrays)
        val[2][:or_list] = [val[0]] + val[2][:or_list]
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 230)
  def _reduce_58(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 232)
  def _reduce_59(val, _values, result)
        	result = Rtc::Types::SymbolType.new(eval(val[0]))
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 235)
  def _reduce_60(val, _values, result)
            result = handle_type_ident(val[0])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 238)
  def _reduce_61(val, _values, result)
            result = val[0] 
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 241)
  def _reduce_62(val, _values, result)
            result = Rtc::Types::TopType.instance
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 244)
  def _reduce_63(val, _values, result)
        	result = Rtc::Types::BottomType.instance
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 247)
  def _reduce_64(val, _values, result)
            result = Rtc::Types::NominalType.of(TrueClass)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 250)
  def _reduce_65(val, _values, result)
            result = Rtc::Types::NominalType.of(FalseClass)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 253)
  def _reduce_66(val, _values, result)
            result = Rtc::Types::UnionType.of([
          Rtc::Types::NominalType.of(FalseClass),
          Rtc::Types::NominalType.of(TrueClass)
        ])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 259)
  def _reduce_67(val, _values, result)
            result = Rtc::Types::TopType.instance
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 262)
  def _reduce_68(val, _values, result)
            result = handle_structural_type(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 265)
  def _reduce_69(val, _values, result)
            nominal = handle_type_ident(val[0])
        result = Rtc::Types::ParameterizedType.new(nominal, val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 269)
  def _reduce_70(val, _values, result)
           result = Rtc::Types::ProceduralType.new(nil, val[4], val[1], nil)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 272)
  def _reduce_71(val, _values, result)
        	result = Rtc::Types::NominalType.of(NilClass)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 275)
  def _reduce_72(val, _values, result)
            result = Rtc::Types::HashType.new(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 280)
  def _reduce_73(val, _values, result)
           result = val[4]
       result[val[0]] = val[2]
     
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 284)
  def _reduce_74(val, _values, result)
          result = Rtc::NativeHash.new
      result[val[0]] = val[2]
     
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 289)
  def _reduce_75(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 290)
  def _reduce_76(val, _values, result)
     result = eval(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 294)
  def _reduce_77(val, _values, result)
           result = Rtc::Types::OptionalArg.new(val[1])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 296)
  def _reduce_78(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 300)
  def _reduce_79(val, _values, result)
            result = Rtc::Types::TupleType.new(val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 304)
  def _reduce_80(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 306)
  def _reduce_81(val, _values, result)
            result = [val[0]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 311)
  def _reduce_82(val, _values, result)
            id = val[0]
        type_vars = val[2]
        result = handle_class_decl(id, type_vars)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 316)
  def _reduce_83(val, _values, result)
            id = val[0]
        result = handle_class_decl(id)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 322)
  def _reduce_84(val, _values, result)
            result = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 325)
  def _reduce_85(val, _values, result)
            result = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 331)
  def _reduce_86(val, _values, result)
            result = handle_var(:ivar, val[0], val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 336)
  def _reduce_87(val, _values, result)
            result = {:fields => [val[0]], :methods => []}       
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 338)
  def _reduce_88(val, _values, result)
            result = {:fields => [],       :methods => [val[0]]} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 340)
  def _reduce_89(val, _values, result)
            field_method_hash = val[2]
        field_method_hash[:fields] += [val[0]]
        result = field_method_hash
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 345)
  def _reduce_90(val, _values, result)
            field_method_hash = val[2]
        field_method_hash[:methods] += [val[0]]
        result = field_method_hash
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 351)
  def _reduce_91(val, _values, result)
     result = {:fields => [], :methods => []} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 352)
  def _reduce_92(val, _values, result)
     result = val[0] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class TypeAnnotationParser


end
