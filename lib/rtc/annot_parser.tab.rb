#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/rtc/annot_parser.racc".
#

require 'racc/parser'



require 'rtc/annot_lexer.rex'
require 'rtc/parser'
require 'rtc/typing/types.rb'

module Rtc

  class TypeAnnotationParser < Racc::Parser

    attr_accessor :pos, :proxy

    # FIXME(rwsims): it's not clear what proxy is for, it's used when defining
    # class constants for doing class type signatures.
    def initialize(proxy)
        @proxy = proxy
    end

    def strip_quotes(arg)
      arg.strip.gsub(/^\"/, "").gsub(/\"$/, "")
    end

    # ####################
    # helper methods for type constructors from ML parser
    # ####################

    
    def pragma(key)
      fail "Unknown pragma keyword: #{key}" if(key !="FIXME")
    end

  end


class TypeAnnotationParser < Racc::Parser

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 55, :_reduce_1,
 1, 55, :_reduce_2,
 1, 55, :_reduce_3,
 1, 55, :_reduce_4,
 3, 60, :_reduce_5,
 3, 60, :_reduce_6,
 3, 60, :_reduce_7,
 2, 56, :_reduce_8,
 2, 57, :_reduce_9,
 2, 58, :_reduce_10,
 3, 59, :_reduce_11,
 1, 65, :_reduce_12,
 0, 65, :_reduce_13,
 2, 62, :_reduce_14,
 3, 62, :_reduce_15,
 1, 67, :_reduce_16,
 0, 67, :_reduce_17,
 2, 63, :_reduce_18,
 3, 63, :_reduce_19,
 6, 68, :_reduce_20,
 3, 68, :_reduce_21,
 6, 66, :_reduce_22,
 3, 66, :_reduce_23,
 6, 66, :_reduce_24,
 3, 66, :_reduce_25,
 5, 66, :_reduce_26,
 8, 66, :_reduce_27,
 1, 66, :_reduce_28,
 1, 72, :_reduce_29,
 1, 72, :_reduce_30,
 1, 72, :_reduce_31,
 1, 69, :_reduce_32,
 3, 69, :_reduce_33,
 5, 71, :_reduce_34,
 6, 71, :_reduce_35,
 4, 71, :_reduce_36,
 3, 71, :_reduce_37,
 3, 74, :_reduce_38,
 1, 74, :_reduce_39,
 2, 75, :_reduce_40,
 2, 75, :_reduce_41,
 1, 75, :_reduce_42,
 0, 73, :_reduce_43,
 3, 73, :_reduce_44,
 1, 70, :_reduce_45,
 3, 70, :_reduce_46,
 1, 77, :_reduce_47,
 1, 77, :_reduce_48,
 1, 76, :_reduce_49,
 2, 76, :_reduce_50,
 1, 78, :_reduce_51,
 3, 78, :_reduce_52,
 2, 79, :_reduce_53,
 1, 79, :_reduce_54,
 1, 61, :_reduce_55,
 1, 80, :_reduce_56,
 3, 80, :_reduce_57,
 1, 81, :_reduce_58,
 1, 81, :_reduce_59,
 1, 81, :_reduce_60,
 1, 81, :_reduce_61,
 1, 81, :_reduce_62,
 1, 81, :_reduce_63,
 1, 81, :_reduce_64,
 1, 81, :_reduce_65,
 1, 81, :_reduce_66,
 2, 81, :_reduce_67,
 3, 81, :_reduce_68,
 4, 81, :_reduce_69,
 5, 81, :_reduce_70,
 1, 81, :_reduce_71,
 3, 81, :_reduce_72,
 5, 85, :_reduce_73,
 3, 85, :_reduce_74,
 1, 86, :_reduce_75,
 1, 86, :_reduce_76,
 2, 87, :_reduce_77,
 1, 87, :_reduce_78,
 4, 82, :_reduce_79,
 1, 84, :_reduce_80,
 3, 84, :_reduce_81,
 4, 88, :_reduce_82,
 1, 88, :_reduce_83,
 2, 64, :_reduce_84,
 2, 64, :_reduce_85,
 3, 89, :_reduce_86,
 1, 90, :_reduce_87,
 1, 90, :_reduce_88,
 3, 90, :_reduce_89,
 3, 90, :_reduce_90,
 0, 83, :_reduce_91,
 1, 83, :_reduce_92 ]

racc_reduce_n = 93

racc_shift_n = 177

racc_action_table = [
     7,    36,     9,    21,    93,    21,    59,    36,   -18,    36,
    37,    42,    45,    10,    91,    94,    21,    29,    35,   117,
    35,   114,    65,   113,    46,    92,    74,    24,    28,    24,
    31,   -14,    38,    41,    44,    40,   120,   -17,   -17,   -17,
    24,    40,    33,    40,   121,    90,    11,    47,    36,    37,
    42,    45,    81,    60,    76,    21,    29,    74,    79,    35,
    55,    60,    58,    46,   110,    36,    36,    28,    55,    31,
    58,    38,    41,    44,    81,   111,    35,    35,   116,    24,
    79,    33,    40,   112,    60,    76,    47,    36,    37,    42,
    45,    55,   151,    58,    21,    29,    74,    59,    35,    40,
    40,   109,    46,   150,    54,    36,    28,   108,    31,    24,
    38,    41,    44,    19,    16,    17,    35,    95,    24,    59,
    33,    40,   130,    60,    76,    47,    36,    37,    42,    45,
    55,    60,    58,    21,    29,    52,   131,    35,    55,    40,
    58,    46,   132,    36,    36,    28,   134,    31,   135,    38,
    41,    44,    86,    85,    35,    35,    59,    24,    83,    33,
    40,   -16,   -16,   -16,    47,    36,    37,    42,    45,    78,
    77,   141,    21,    29,    69,   145,    35,    40,    40,    68,
    46,   147,   148,   149,    28,    24,    31,   132,    38,    41,
    44,    66,    59,    60,   155,    63,    24,   126,    33,    40,
    55,   157,    58,    47,    36,    37,    42,    45,    62,   159,
    61,    21,    29,   161,   162,    35,    50,    59,   165,    46,
   166,    49,   168,    28,    25,    31,    59,    38,    41,    44,
    59,   172,    15,    59,   175,    24,    59,    33,    40,   nil,
   nil,   nil,    47,    36,    37,    42,    45,   nil,   nil,   nil,
    21,    29,   nil,   nil,    35,   nil,   nil,   nil,    46,   nil,
   nil,   nil,    28,   nil,    31,   nil,    38,    41,    44,   nil,
   nil,   nil,   nil,   nil,    24,   nil,    33,    40,   nil,   nil,
   nil,    47,    36,    37,    42,    45,   nil,   nil,   nil,    21,
    29,   nil,   nil,    35,   nil,   nil,   nil,    46,   nil,   nil,
   nil,    28,   nil,    31,   nil,    38,    41,    44,   nil,   nil,
   nil,   nil,   nil,    24,   nil,    33,    40,   nil,   nil,   nil,
    47,    36,    37,    42,    45,   nil,   nil,   nil,    21,    29,
   nil,   nil,    35,   nil,   nil,   nil,    46,   nil,   nil,   nil,
    28,   nil,    31,   nil,    38,    41,    44,   nil,   nil,   nil,
   nil,   nil,    24,   nil,    33,    40,   nil,   nil,   nil,    47,
    36,    37,    42,    45,   nil,   nil,   nil,    21,    29,    96,
    97,    35,   nil,   nil,   nil,    46,   101,   nil,   nil,    28,
   nil,    31,   nil,    38,    41,    44,   nil,   nil,   nil,   nil,
   nil,    24,   nil,    33,    40,   nil,   nil,   nil,    47,    36,
    37,    42,    45,   nil,   nil,   nil,    21,    29,   nil,   nil,
    35,   nil,   nil,   nil,    46,   nil,   nil,   nil,    28,   nil,
    31,   nil,    38,    41,    44,   nil,   nil,   nil,   nil,   nil,
    24,   nil,    33,    40,   nil,   nil,   nil,    47,    36,    37,
    42,    45,   nil,   nil,   nil,    21,    29,   nil,   nil,    35,
   nil,   nil,   nil,    46,   nil,   nil,   nil,    28,   nil,    31,
   nil,    38,    41,    44,   nil,   nil,   nil,   nil,   nil,    24,
   nil,    33,    40,   nil,   nil,   nil,    47,    36,    37,    42,
    45,   nil,   nil,   nil,    21,    29,   nil,   nil,    35,   nil,
   nil,   nil,    46,   nil,   nil,   nil,    28,   nil,    31,   nil,
    38,    41,    44,   nil,   nil,   nil,   nil,   nil,    24,   nil,
    33,    40,   nil,   nil,   nil,    47,    36,    37,    42,    45,
   nil,   nil,   nil,    21,    29,   nil,   nil,    35,   nil,   nil,
   nil,    46,   nil,   nil,   nil,    28,   nil,    31,   nil,    38,
    41,    44,   nil,   nil,   nil,   nil,   nil,    24,   nil,    33,
    40,   nil,   nil,   nil,    47,    36,    37,    42,    45,   nil,
   nil,   nil,    21,    29,    96,    97,    35,   nil,   nil,   nil,
    46,   nil,   nil,   nil,    28,   nil,    31,   nil,    38,    41,
    44,   nil,   nil,   nil,   nil,   nil,    24,   nil,    33,    40,
   nil,   nil,   nil,    47,    36,    37,    42,    45,   nil,   nil,
   nil,    21,    29,   nil,   nil,    35,   nil,   nil,   nil,    46,
   nil,   nil,   nil,    28,   nil,    31,   nil,    38,    41,    44,
   nil,   nil,   nil,   nil,   nil,    24,   nil,    33,    40,   nil,
   nil,   nil,    47,    36,    37,    42,    45,   nil,   nil,   nil,
    21,    29,   nil,   nil,    35,   nil,   nil,   nil,    46,   nil,
   nil,   nil,    28,   nil,    31,   nil,    38,    41,    44,   nil,
   nil,   nil,   nil,   nil,    24,   nil,    33,    40,   nil,   nil,
   nil,    47,    36,    37,    42,    45,   nil,   nil,   nil,    21,
    29,   nil,   142,    35,   nil,   nil,   nil,    46,   nil,   nil,
   nil,    28,   nil,    31,   nil,    38,    41,    44,   nil,   nil,
   nil,   nil,   nil,    24,   nil,    33,    40,   nil,   nil,   nil,
    47,    36,    37,    42,    45,   nil,   nil,   nil,    21,    29,
   nil,   nil,    35,   nil,   nil,   nil,    46,   nil,   nil,   nil,
    28,   nil,    31,   nil,    38,    41,    44,   nil,   nil,   nil,
   nil,   nil,    24,   nil,    33,    40,   nil,   nil,   nil,    47 ]

racc_action_check = [
     0,    35,     0,     7,    53,     9,    91,   111,    18,   165,
   165,   165,   165,     0,    52,    53,   165,   165,   111,    82,
   165,    76,    18,    75,   165,    52,    28,     7,   165,     9,
   165,    51,   165,   165,   165,    35,    87,     0,     0,     0,
   165,   111,   165,   165,    88,    51,     0,   165,    83,    83,
    83,    83,   159,    28,    28,    83,    83,   109,   159,    83,
    28,   112,    28,    83,    73,    92,    94,    83,   112,    83,
   112,    83,    83,    83,    31,    73,    92,    94,    80,    83,
    31,    83,    83,    74,   109,   109,    83,    85,    85,    85,
    85,   109,   126,   109,    85,    85,   108,    93,    85,    92,
    94,    72,    85,   126,    14,    68,    85,    70,    85,    69,
    85,    85,    85,     2,     2,     2,    68,    54,    85,    14,
    85,    85,    99,   108,   108,    85,    96,    96,    96,    96,
   108,    14,   108,    96,    96,    14,   100,    96,    14,    68,
    14,    96,   101,   135,   150,    96,   105,    96,   106,    96,
    96,    96,    43,    37,   135,   150,   110,    96,    34,    96,
    96,    10,    10,    10,    96,    66,    66,    66,    66,    30,
    29,   115,    66,    66,    24,   119,    66,   135,   150,    23,
    66,   121,   123,   125,    66,    21,    66,   130,    66,    66,
    66,    19,   132,    95,   133,    17,    66,    95,    66,    66,
    95,   139,    95,    66,    63,    63,    63,    63,    16,   144,
    15,    63,    63,   148,   149,    63,    13,   151,   152,    63,
   154,    12,   157,    63,     8,    63,   161,    63,    63,    63,
   162,   163,     1,   168,   172,    63,   175,    63,    63,   nil,
   nil,   nil,    63,    11,    11,    11,    11,   nil,   nil,   nil,
    11,    11,   nil,   nil,    11,   nil,   nil,   nil,    11,   nil,
   nil,   nil,    11,   nil,    11,   nil,    11,    11,    11,   nil,
   nil,   nil,   nil,   nil,    11,   nil,    11,    11,   nil,   nil,
   nil,    11,   155,   155,   155,   155,   nil,   nil,   nil,   155,
   155,   nil,   nil,   155,   nil,   nil,   nil,   155,   nil,   nil,
   nil,   155,   nil,   155,   nil,   155,   155,   155,   nil,   nil,
   nil,   nil,   nil,   155,   nil,   155,   155,   nil,   nil,   nil,
   155,    62,    62,    62,    62,   nil,   nil,   nil,    62,    62,
   nil,   nil,    62,   nil,   nil,   nil,    62,   nil,   nil,   nil,
    62,   nil,    62,   nil,    62,    62,    62,   nil,   nil,   nil,
   nil,   nil,    62,   nil,    62,    62,   nil,   nil,   nil,    62,
    59,    59,    59,    59,   nil,   nil,   nil,    59,    59,    59,
    59,    59,   nil,   nil,   nil,    59,    59,   nil,   nil,    59,
   nil,    59,   nil,    59,    59,    59,   nil,   nil,   nil,   nil,
   nil,    59,   nil,    59,    59,   nil,   nil,   nil,    59,   147,
   147,   147,   147,   nil,   nil,   nil,   147,   147,   nil,   nil,
   147,   nil,   nil,   nil,   147,   nil,   nil,   nil,   147,   nil,
   147,   nil,   147,   147,   147,   nil,   nil,   nil,   nil,   nil,
   147,   nil,   147,   147,   nil,   nil,   nil,   147,   142,   142,
   142,   142,   nil,   nil,   nil,   142,   142,   nil,   nil,   142,
   nil,   nil,   nil,   142,   nil,   nil,   nil,   142,   nil,   142,
   nil,   142,   142,   142,   nil,   nil,   nil,   nil,   nil,   142,
   nil,   142,   142,   nil,   nil,   nil,   142,    97,    97,    97,
    97,   nil,   nil,   nil,    97,    97,   nil,   nil,    97,   nil,
   nil,   nil,    97,   nil,   nil,   nil,    97,   nil,    97,   nil,
    97,    97,    97,   nil,   nil,   nil,   nil,   nil,    97,   nil,
    97,    97,   nil,   nil,   nil,    97,    46,    46,    46,    46,
   nil,   nil,   nil,    46,    46,   nil,   nil,    46,   nil,   nil,
   nil,    46,   nil,   nil,   nil,    46,   nil,    46,   nil,    46,
    46,    46,   nil,   nil,   nil,   nil,   nil,    46,   nil,    46,
    46,   nil,   nil,   nil,    46,   131,   131,   131,   131,   nil,
   nil,   nil,   131,   131,   131,   131,   131,   nil,   nil,   nil,
   131,   nil,   nil,   nil,   131,   nil,   131,   nil,   131,   131,
   131,   nil,   nil,   nil,   nil,   nil,   131,   nil,   131,   131,
   nil,   nil,   nil,   131,   114,   114,   114,   114,   nil,   nil,
   nil,   114,   114,   nil,   nil,   114,   nil,   nil,   nil,   114,
   nil,   nil,   nil,   114,   nil,   114,   nil,   114,   114,   114,
   nil,   nil,   nil,   nil,   nil,   114,   nil,   114,   114,   nil,
   nil,   nil,   114,   120,   120,   120,   120,   nil,   nil,   nil,
   120,   120,   nil,   nil,   120,   nil,   nil,   nil,   120,   nil,
   nil,   nil,   120,   nil,   120,   nil,   120,   120,   120,   nil,
   nil,   nil,   nil,   nil,   120,   nil,   120,   120,   nil,   nil,
   nil,   120,   117,   117,   117,   117,   nil,   nil,   nil,   117,
   117,   nil,   117,   117,   nil,   nil,   nil,   117,   nil,   nil,
   nil,   117,   nil,   117,   nil,   117,   117,   117,   nil,   nil,
   nil,   nil,   nil,   117,   nil,   117,   117,   nil,   nil,   nil,
   117,    78,    78,    78,    78,   nil,   nil,   nil,    78,    78,
   nil,   nil,    78,   nil,   nil,   nil,    78,   nil,   nil,   nil,
    78,   nil,    78,   nil,    78,    78,    78,   nil,   nil,   nil,
   nil,   nil,    78,   nil,    78,    78,   nil,   nil,   nil,    78 ]

racc_action_pointer = [
    -6,   232,    70,   nil,   nil,   nil,   nil,   -19,   219,   -17,
   118,   228,   216,   211,    89,   210,   187,   174,     3,   170,
   nil,   139,   nil,   147,   152,   nil,   nil,   nil,    11,   145,
   137,    32,   nil,   nil,   154,   -14,   nil,   121,   nil,   nil,
   nil,   nil,   nil,   147,   nil,   nil,   501,   nil,   nil,   nil,
   nil,    26,    -7,   -17,    94,   nil,   nil,   nil,   nil,   345,
   nil,   nil,   306,   189,   nil,   nil,   150,   nil,    90,    63,
   105,   nil,    99,    43,    60,   -12,     0,   nil,   696,   nil,
    41,   nil,   -10,    33,   nil,    72,   nil,    34,    13,   nil,
   nil,   -24,    50,    67,    51,   151,   111,   462,   nil,    91,
   134,   106,   nil,   nil,   nil,   113,   146,   nil,    81,    42,
   126,    -8,    19,   nil,   579,   138,   nil,   657,   nil,   142,
   618,   178,   nil,   149,   nil,   150,    71,   nil,   nil,   nil,
   151,   540,   162,   191,   nil,   128,   nil,   nil,   nil,   168,
   nil,   nil,   423,   nil,   207,   nil,   nil,   384,   192,   193,
   129,   187,   215,   nil,   183,   267,   nil,   201,   nil,    10,
   nil,   196,   200,   198,   nil,    -6,   nil,   nil,   203,   nil,
   nil,   nil,   213,   nil,   nil,   206,   nil ]

racc_action_default = [
   -13,   -93,   -93,    -1,    -2,    -3,    -4,   -93,   -93,   -93,
   -12,   -93,   -93,   -93,   -93,   -93,   -93,   -93,   -17,   -93,
   -84,   -93,   -54,   -83,   -51,    -8,   -85,   -49,   -91,   -93,
   -60,   -93,   -55,   -59,   -56,   -93,   -48,   -93,   -64,   -61,
   -47,   -66,   -63,   -93,   -65,   -62,   -93,   -71,   -58,    -9,
   -10,   -13,   -93,   -93,   -93,   -30,   -28,   -32,   -31,   -93,
   -29,   177,   -93,   -93,   -19,   -16,   -93,   -53,   -93,   -93,
   -87,   -92,   -88,   -93,   -93,   -93,   -93,   -67,   -93,   -76,
   -93,   -75,   -93,   -93,   -50,   -93,   -11,   -80,   -93,   -15,
   -12,   -93,   -93,   -93,   -93,   -93,   -93,   -93,   -42,   -93,
   -39,   -43,    -6,    -7,    -5,   -93,   -45,   -52,   -93,   -93,
   -93,   -93,   -93,   -68,   -93,   -93,   -72,   -93,   -57,   -93,
   -93,   -93,   -25,   -93,   -23,   -93,   -93,   -33,   -41,   -40,
   -43,   -93,   -93,   -37,   -82,   -93,   -89,   -90,   -21,   -93,
   -86,   -69,   -93,   -78,   -74,   -79,   -81,   -93,   -93,   -93,
   -93,   -93,   -36,   -38,   -93,   -93,   -46,   -93,   -77,   -93,
   -70,   -93,   -93,   -93,   -26,   -93,   -44,   -34,   -93,   -73,
   -24,   -22,   -93,   -35,   -20,   -93,   -27 ]

racc_goto_table = [
    56,    43,    80,   105,    88,   133,     8,   106,    99,   127,
    71,    67,    12,    23,    20,    23,    26,   118,    18,     6,
    84,     5,    53,    13,   160,    75,   127,   123,     4,   125,
    64,   106,     3,   106,   152,   144,   115,    51,     1,   nil,
   nil,   nil,   nil,   119,   nil,   nil,   139,   nil,   nil,    98,
   106,   nil,   102,   103,   nil,   nil,   104,    89,   nil,   107,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   156,   nil,   nil,   nil,   106,   nil,   nil,   122,   146,   124,
   153,   nil,   nil,   nil,   nil,   163,   128,   129,   nil,   106,
   136,   137,   nil,   nil,   nil,   nil,   138,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   140,   nil,   nil,   143,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   154,   nil,
   nil,    98,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   169,   nil,   158,   nil,   nil,   nil,   nil,   164,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   167,   nil,   170,   171,   nil,
   nil,   nil,   nil,   nil,   174,   173,   nil,   nil,   nil,   nil,
   nil,   176 ]

racc_goto_check = [
    17,     7,    31,    16,    30,    19,     8,    22,    20,    18,
    36,    24,     9,    25,    34,    25,    34,    26,     6,     5,
    23,     4,    15,    10,    27,    29,    18,    16,     3,    16,
     9,    22,     2,    22,    19,    33,    30,    12,     1,   nil,
   nil,   nil,   nil,    30,   nil,   nil,    16,   nil,   nil,     7,
    22,   nil,     7,     7,   nil,   nil,     7,     8,   nil,    24,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    16,   nil,   nil,   nil,    22,   nil,   nil,    17,    30,    17,
    20,   nil,   nil,   nil,   nil,    16,     7,     7,   nil,    22,
    36,    36,   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,   nil,   nil,     7,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,
   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    31,   nil,     7,   nil,   nil,   nil,   nil,    17,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     7,   nil,    17,    17,   nil,
   nil,   nil,   nil,   nil,    17,     7,   nil,   nil,   nil,   nil,
   nil,    17 ]

racc_goto_pointer = [
   nil,    38,    32,    28,    21,    19,    16,   -10,     6,    12,
    23,   nil,    23,   nil,   nil,     8,   -65,   -14,   -86,   -96,
   -51,   nil,   -61,   -15,   -10,     6,   -66,  -123,   nil,    -3,
   -42,   -29,   nil,   -82,     7,   nil,   -18 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    87,   nil,   nil,
   nil,    14,   nil,     2,    72,    73,   nil,   nil,    57,   nil,
   nil,   100,    48,    27,    22,    30,    32,    34,    39,   nil,
   nil,   nil,    82,   nil,   nil,    70,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :T_COMMA => 2,
 :T_RARROW => 3,
 :K_OR => 4,
 :T_EOF => 5,
 :K_CLASS => 6,
 :K_METACLASS => 7,
 :K_MODULE => 8,
 :K_INTERFACE => 9,
 :K_TYPE => 10,
 :K_TYPEVAR => 11,
 :K_ALIAS => 12,
 :K_REQUIRE => 13,
 :K_END => 14,
 :K_SELF => 15,
 :K_TUPLE => 16,
 :T_BOTTOM => 17,
 :T_TOP => 18,
 :T_BEGIN_LINE => 19,
 :T_SEMICOLON => 20,
 :T_COLON => 21,
 :T_DOUBLE_COLON => 22,
 :T_DOT => 23,
 :T_STAR => 24,
 :T_QUESTION => 25,
 :T_CARROT => 26,
 :T_BANG => 27,
 :T_EQUAL => 28,
 :T_ASSOC => 29,
 :T_LPAREN => 30,
 :T_RPAREN => 31,
 :T_LESS => 32,
 :T_GREATER => 33,
 :T_LBRACKET => 34,
 :T_RBRACKET => 35,
 :T_LBRACE => 36,
 :T_RBRACE => 37,
 :T_TRUE => 38,
 :T_BOOL => 39,
 :T_FALSE => 40,
 :T_SUBTYPE => 41,
 :T_STRING => 42,
 :T_IVAR => 43,
 :T_CVAR => 44,
 :T_GVAR => 45,
 :T_CONST_ID => 46,
 :T_TYPE_ID => 47,
 :T_SYMBOL => 48,
 :T_LOCAL_ID => 49,
 :T_TICKED_ID => 50,
 :T_SUFFIXED_ID => 51,
 :T_DOUBLE_HASH => 52,
 :K_NIL => 53 }

racc_use_result_var = true

racc_nt_base = 54

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'T_COMMA',
'T_RARROW',
'K_OR',
'T_EOF',
'K_CLASS',
'K_METACLASS',
'K_MODULE',
'K_INTERFACE',
'K_TYPE',
'K_TYPEVAR',
'K_ALIAS',
'K_REQUIRE',
'K_END',
'K_SELF',
'K_TUPLE',
'T_BOTTOM',
'T_TOP',
'T_BEGIN_LINE',
'T_SEMICOLON',
'T_COLON',
'T_DOUBLE_COLON',
'T_DOT',
'T_STAR',
'T_QUESTION',
'T_CARROT',
'T_BANG',
'T_EQUAL',
'T_ASSOC',
'T_LPAREN',
'T_RPAREN',
'T_LESS',
'T_GREATER',
'T_LBRACKET',
'T_RBRACKET',
'T_LBRACE',
'T_RBRACE',
'T_TRUE',
'T_BOOL',
'T_FALSE',
'T_SUBTYPE',
'T_STRING',
'T_IVAR',
'T_CVAR',
'T_GVAR',
'T_CONST_ID',
'T_TYPE_ID',
'T_SYMBOL',
'T_LOCAL_ID',
'T_TICKED_ID',
'T_SUFFIXED_ID',
'T_DOUBLE_HASH',
'K_NIL',
'$start',
'entry',
'e_method',
'e_field',
'e_class',
'e_annotation',
'field_sig',
'type_expr',
'method_annotation_list',
'field_annotation_list',
'class_annotation',
'method_start',
'const_method_type',
'field_start',
'method_type',
'method_name',
'type_id_list',
'method_sig',
'relative_method_name',
'block',
'method_arg_list',
'method_arg',
'type_var',
'simple_type_var',
'type_ident_list',
'type_ident',
'or_type_list',
'single_type_expr',
'tuple',
'field_or_method_list',
'type_expr_comma_list',
'hash_member_list',
'hash_key',
'hash_type',
'class_decl',
'field_type',
'field_or_method_nonempty_list']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 51
  def _reduce_1( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 52
  def _reduce_2( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 53
  def _reduce_3( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 54
  def _reduce_4( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 60
  def _reduce_5( val, _values, result )
        result = handle_var(:ivar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 62
  def _reduce_6( val, _values, result )
        result = handle_var(:cvar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 64
  def _reduce_7( val, _values, result )
        result = handle_var(:gvar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 71
  def _reduce_8( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 74
  def _reduce_9( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 77
  def _reduce_10( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 80
  def _reduce_11( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 83
  def _reduce_12( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 84
  def _reduce_13( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 87
  def _reduce_14( val, _values, result )
 result = [val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 91
  def _reduce_15( val, _values, result )
        result = [val[1]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 93
  def _reduce_16( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 94
  def _reduce_17( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 97
  def _reduce_18( val, _values, result )
 result = [val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 98
  def _reduce_19( val, _values, result )
 result = [val[1]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 103
  def _reduce_20( val, _values, result )
 result = handle_mtype(val[0], val[2], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 105
  def _reduce_21( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 110
  def _reduce_22( val, _values, result )
 result = handle_mtype(val[0], val[2], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 112
  def _reduce_23( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 114
  def _reduce_24( val, _values, result )
 result = handle_mtype(val[0], val[2], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 116
  def _reduce_25( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 120
  def _reduce_26( val, _values, result )
    	result = handle_mtype(ClassMethodIdentifier.new(val[2]), nil, val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 121
  def _reduce_27( val, _values, result )
 result = handle_mtype(ClassMethodIdentifier.new(val[2]), val[4], val[7])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 125
  def _reduce_28( val, _values, result )
       result = handle_mtype(MethodIdentifier.new("__rtc_next_method"), nil, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 128
  def _reduce_29( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 130
  def _reduce_30( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 132
  def _reduce_31( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 135
  def _reduce_32( val, _values, result )
 result = MethodIdentifier.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 136
  def _reduce_33( val, _values, result )
 result = ClassMethodIdentifier.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 142
  def _reduce_34( val, _values, result )
        result = construct_msig([], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 145
  def _reduce_35( val, _values, result )
        result = construct_msig(val[1], val[3], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 148
  def _reduce_36( val, _values, result )
    	result = construct_msig(val[1], val[3], Rtc::Types::TopType.instance)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 151
  def _reduce_37( val, _values, result )
        result = construct_msig([], val[2], Rtc::Types::TopType.instance)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 157
  def _reduce_38( val, _values, result )
      result = val[2].unshift(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 160
  def _reduce_39( val, _values, result )
      result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 164
  def _reduce_40( val, _values, result )
        result = Rtc::Types::OptionalArg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 167
  def _reduce_41( val, _values, result )
        result = Rtc::Types::Vararg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 170
  def _reduce_42( val, _values, result )
        result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 173
  def _reduce_43( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 174
  def _reduce_44( val, _values, result )
 result = handle_btype(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 177
  def _reduce_45( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 178
  def _reduce_46( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 181
  def _reduce_47( val, _values, result )
 result = handle_type_param(:id, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 182
  def _reduce_48( val, _values, result )
 result = handle_type_param(:self, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 185
  def _reduce_49( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 188
  def _reduce_50( val, _values, result )
        result = handle_type_param(:varargs, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 191
  def _reduce_51( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 195
  def _reduce_52( val, _values, result )
      result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 203
  def _reduce_53( val, _values, result )
   	  	result = {
   	  		:type => :absolute,
   	  		:name_list => val[1]
   	  	}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 209
  def _reduce_54( val, _values, result )
        result = {
        	:type => :relative,
        	:name_list => val[0]
        }
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 220
  def _reduce_55( val, _values, result )
        list = val[0][:or_list]
        if(list.length > 1)
          result = Rtc::Types::UnionType.new(list)
        else
          # flatten if there is no union
          result = list[0]
        end
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 222
  def _reduce_56( val, _values, result )
 result = {:or_list => [val[0]]}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 228
  def _reduce_57( val, _values, result )
        # need to differientiate OR lists from tuples (which are just arrays)
        val[2][:or_list] = [val[0]] + val[2][:or_list]
        result = val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 230
  def _reduce_58( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 234
  def _reduce_59( val, _values, result )
    	result = Rtc::Types::SymbolType.new(eval(val[0]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 237
  def _reduce_60( val, _values, result )
        result = handle_type_ident(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 240
  def _reduce_61( val, _values, result )
        result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 243
  def _reduce_62( val, _values, result )
        result = Rtc::Types::TopType.instance
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 246
  def _reduce_63( val, _values, result )
    	result = Rtc::Types::BottomType.instance
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 249
  def _reduce_64( val, _values, result )
        result = Rtc::Types::NominalType.of(TrueClass)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 252
  def _reduce_65( val, _values, result )
        result = Rtc::Types::NominalType.of(FalseClass)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 258
  def _reduce_66( val, _values, result )
        result = Rtc::Types::UnionType.of([
          Rtc::Types::NominalType.of(FalseClass),
          Rtc::Types::NominalType.of(TrueClass)
        ])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 261
  def _reduce_67( val, _values, result )
        result = Rtc::Types::TopType.instance
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 264
  def _reduce_68( val, _values, result )
        result = handle_structural_type(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 268
  def _reduce_69( val, _values, result )
        nominal = handle_type_ident(val[0])
        result = Rtc::Types::ParameterizedType.new(nominal, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 271
  def _reduce_70( val, _values, result )
       result = Rtc::Types::ProceduralType.new(nil, val[4], val[1], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 274
  def _reduce_71( val, _values, result )
    	result = Rtc::Types::NominalType.of(NilClass)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 277
  def _reduce_72( val, _values, result )
        result = Rtc::Types::HashType.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 283
  def _reduce_73( val, _values, result )
       result = val[4]
       result[val[0]] = val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 287
  def _reduce_74( val, _values, result )
      result = Rtc::NativeHash.new
      result[val[0]] = val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 289
  def _reduce_75( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 290
  def _reduce_76( val, _values, result )
 result = eval(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 296
  def _reduce_77( val, _values, result )
       result = Rtc::Types::OptionalArg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 296
  def _reduce_78( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 302
  def _reduce_79( val, _values, result )
        result = Rtc::Types::TupleType.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 304
  def _reduce_80( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 307
  def _reduce_81( val, _values, result )
        result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 315
  def _reduce_82( val, _values, result )
        id = val[0]
        type_vars = val[2]
        result = handle_class_decl(id, type_vars)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 319
  def _reduce_83( val, _values, result )
        id = val[0]
        result = handle_class_decl(id)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 324
  def _reduce_84( val, _values, result )
        result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 327
  def _reduce_85( val, _values, result )
        result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 333
  def _reduce_86( val, _values, result )
        result = handle_var(:ivar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 337
  def _reduce_87( val, _values, result )
        result = {:fields => [val[0]], :methods => []}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 339
  def _reduce_88( val, _values, result )
        result = {:fields => [],       :methods => [val[0]]}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 344
  def _reduce_89( val, _values, result )
        field_method_hash = val[2]
        field_method_hash[:fields] += [val[0]]
        result = field_method_hash
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 349
  def _reduce_90( val, _values, result )
        field_method_hash = val[2]
        field_method_hash[:methods] += [val[0]]
        result = field_method_hash
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 351
  def _reduce_91( val, _values, result )
 result = {:fields => [], :methods => []}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 352
  def _reduce_92( val, _values, result )
 result = val[0]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

end   # class TypeAnnotationParser


end
