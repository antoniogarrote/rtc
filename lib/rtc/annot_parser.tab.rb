#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'rtc/annot_lexer.rex'
require 'rtc/parser'
require 'rtc/typing/types.rb'

module Rtc

  class TypeAnnotationParser < Racc::Parser

    attr_accessor :pos, :proxy

    # FIXME(rwsims): it's not clear what proxy is for, it's used when defining
    # class constants for doing class type signatures.
    def initialize(proxy)
        @proxy = proxy
    end

    def strip_quotes(arg)
      arg.strip.gsub(/^\"/, "").gsub(/\"$/, "")
    end

    # ####################
    # helper methods for type constructors from ML parser
    # ####################

    
    def pragma(key)
      fail "Unknown pragma keyword: #{key}" if(key !="FIXME")
    end

  end

class TypeAnnotationParser < Racc::Parser

module_eval(<<'...end annot_parser.racc/module_eval...', 'annot_parser.racc', 325)

...end annot_parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    54,    14,    21,    21,   128,    94,    54,    49,    89,
    10,    54,   118,    88,   101,    56,    94,    54,    48,    56,
    94,    54,   117,    20,    20,    56,    28,    96,    53,    56,
   -17,   -17,   -17,    29,    53,    30,    28,    96,    53,     9,
    28,    96,    26,    29,    53,    30,    54,    29,    53,    30,
    21,    86,    54,    32,    56,   110,    21,    63,    65,    64,
    56,   -18,    28,    67,    51,   111,    25,    66,    85,    29,
    20,    30,    72,    53,    32,   -14,    20,    54,    60,    53,
    47,    21,    63,    65,    64,    56,    44,    32,    67,   106,
    46,    54,    66,   107,   108,    21,    63,    65,    64,    56,
   109,    20,    67,    60,    53,    54,    66,    20,   112,    21,
    63,    65,    64,    56,    32,    20,    67,    60,    53,    54,
    66,    85,    74,    21,    63,    65,    64,    56,    71,    20,
    67,    60,    53,    54,    66,    70,   119,    21,    63,    65,
    64,    56,   120,    20,    67,    60,    53,    54,    66,   121,
   122,    21,    63,    65,    64,    56,   123,    20,    67,    60,
    53,    54,    66,   124,    69,    21,    63,    65,    64,    56,
   126,    20,    67,    60,    53,    54,    66,   127,    90,    21,
    63,    65,    64,    56,    50,    20,    67,    60,    53,    54,
    66,   130,    32,    21,    63,    65,    64,    56,    20,    20,
    67,    60,    53,    54,    66,    42,   134,    21,    63,    65,
    64,    56,    54,    20,    67,    60,    53,    54,    66,   135,
    56,    21,    63,    65,    64,    56,    28,    20,    67,    60,
    53,   136,    66,    29,    41,    30,    33,    34,    35,    53,
    32,    20,    54,    60,    53,    40,    21,    63,    65,    64,
    56,    18,    17,    67,    16,    32,    54,    66,    32,   144,
    21,    63,    65,    64,    56,    15,    20,    67,    60,    53,
    28,    66,   146,   147,    82,   148,    32,    29,    32,    30,
    20,   nil,    60,    53,   -16,   -16,   -16 ]

racc_action_check = [
     0,    56,     0,    13,     9,   107,   123,   117,    25,    61,
     0,   111,    93,    58,    68,   117,    66,   108,    25,   111,
   122,    48,    93,    13,     9,   108,   123,   123,    56,    48,
     0,     0,     0,   123,   117,   123,    66,    66,   111,     0,
   122,   122,    11,    66,   108,    66,    74,   122,    48,   122,
    14,    52,    32,    11,    74,    82,    32,    32,    32,    32,
    32,    36,    11,    32,    32,    82,    11,    32,    51,    11,
    14,    11,    36,    74,    49,    23,    32,    64,    32,    32,
    24,    64,    64,    64,    64,    64,    23,    47,    64,    75,
    24,   121,    64,    77,    78,   121,   121,   121,   121,   121,
    80,    64,   121,    64,    64,    65,   121,    42,    84,    65,
    65,    65,    65,    65,    85,   121,    65,   121,   121,   135,
    65,    86,    37,   135,   135,   135,   135,   135,    35,    65,
   135,    65,    65,    67,   135,    34,    94,    67,    67,    67,
    67,    67,    95,   135,    67,   135,   135,   112,    67,    96,
    97,   112,   112,   112,   112,   112,    98,    67,   112,    67,
    67,    69,   112,   100,    33,    69,    69,    69,    69,    69,
   105,   112,    69,   112,   112,    70,    69,   106,    63,    70,
    70,    70,    70,    70,    26,    69,    70,    69,    69,    71,
    70,   109,   110,    71,    71,    71,    71,    71,    21,    70,
    71,    70,    70,   101,    71,    20,   113,   101,   101,   101,
   101,   101,    46,    71,   101,    71,    71,    41,   101,   114,
    46,    41,    41,    41,    41,    41,   119,   101,    41,   101,
   101,   116,    41,   119,    19,   119,    12,    12,    12,    46,
   118,    41,    88,    41,    41,    15,    88,    88,    88,    88,
    88,     8,     7,    88,     6,   128,    89,    88,   130,   132,
    89,    89,    89,    89,    89,     1,    88,    89,    88,    88,
    50,    89,   137,   144,    50,   146,   147,    50,   148,    50,
    89,   nil,    89,    89,    10,    10,    10 ]

racc_action_pointer = [
    -6,   265,   nil,   nil,   nil,   nil,   249,   247,   246,   -15,
   248,    27,   200,   -16,    31,   245,   nil,   nil,   nil,   206,
   186,   159,   nil,    70,    62,   -10,   164,   nil,   nil,   nil,
   nil,   nil,    37,   146,   117,   110,    56,    94,   nil,   nil,
   nil,   202,    68,   nil,   nil,   nil,   197,    61,     6,    48,
   235,    36,    24,   nil,   nil,   nil,   -14,   nil,     9,   nil,
   nil,   -19,   nil,   156,    62,    90,     1,   118,    12,   146,
   160,   174,   nil,   nil,    31,    60,   nil,    64,    92,   nil,
    71,   nil,    37,   nil,   105,    88,    89,   nil,   227,   241,
   nil,   nil,   nil,    -6,   116,   111,   131,   148,   154,   nil,
   136,   188,   nil,   nil,   nil,   141,   172,   -13,     2,   173,
   166,    -4,   132,   173,   216,   nil,   202,    -8,   214,   191,
   nil,    76,     5,    -9,   nil,   nil,   nil,   nil,   229,   nil,
   232,   nil,   230,   nil,   nil,   104,   nil,   243,   nil,   nil,
   nil,   nil,   nil,   nil,   255,   nil,   257,   250,   252,   nil,
   nil ]

racc_action_default = [
   -13,   -76,    -1,    -2,    -3,    -4,   -76,   -76,   -76,   -76,
   -12,   -76,   -76,   -76,   -76,   -76,    -8,    -9,   -10,   -76,
   -46,   -76,   -49,   -13,   -76,   -76,   -76,   -28,   -29,   -30,
   -31,   -32,   -76,   -76,   -76,   -76,   -17,   -66,   -67,   -68,
   151,   -76,   -76,   -48,   -12,   -15,   -76,   -76,   -76,   -76,
   -76,   -38,   -76,   -42,   -43,   -44,   -76,   -50,   -51,   -53,
   -54,   -55,   -56,   -76,   -76,   -76,   -74,   -76,   -63,   -76,
   -76,   -76,   -16,   -19,   -76,   -76,   -47,   -76,   -40,   -23,
   -76,   -25,   -76,   -33,   -37,   -76,   -38,   -45,   -76,   -76,
   -57,   -58,   -59,   -76,   -76,   -76,   -76,   -70,   -71,   -75,
   -76,   -76,    -5,    -6,    -7,   -76,   -76,   -76,   -76,   -76,
   -76,   -76,   -76,   -76,   -36,   -52,   -76,   -76,   -76,   -76,
   -60,   -76,   -76,   -76,   -62,   -64,   -65,   -11,   -76,   -41,
   -76,   -26,   -76,   -34,   -39,   -76,   -61,   -76,   -21,   -69,
   -72,   -73,   -22,   -24,   -76,   -35,   -76,   -76,   -76,   -27,
   -20 ]

racc_goto_table = [
    27,    77,    78,    80,    78,     7,    83,    84,    52,     6,
   102,   103,   104,    99,    43,    19,    24,    75,    23,    37,
    37,    91,    92,    38,    39,     8,    36,     5,    87,   105,
    78,     4,    45,   115,     3,    76,    79,    95,    81,     2,
     1,    73,   114,   100,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   133,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   139,   129,    78,   116,   132,    78,   nil,   140,
   141,   nil,   137,    78,   113,    83,   145,   125,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   131,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   138,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   142,   nil,   143,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   149,   150 ]

racc_goto_check = [
    19,    18,    22,    18,    22,     9,    20,    21,    12,     8,
     7,     7,     7,    31,    24,    11,    17,    12,    14,    11,
    11,    26,    26,    29,    29,    10,     6,     5,    23,    18,
    22,     4,     8,    25,     3,    24,    19,    28,    19,     2,
     1,     9,    21,    12,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     7,    18,    22,    12,    18,    22,   nil,    31,
    31,   nil,    18,    22,    19,    20,     7,    12,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,    19 ]

racc_goto_pointer = [
   nil,    40,    39,    34,    31,    27,    14,   -59,     9,     5,
    25,     6,   -24,   nil,     7,   nil,   nil,     5,   -45,   -11,
   -44,   -44,   -44,   -28,    -7,   -55,   -43,   nil,   -29,    10,
   nil,   -53 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,   nil,
   nil,    61,   nil,    11,   nil,    12,    98,    93,   nil,   nil,
    31,   nil,    59,    55,    22,    57,    58,    62,   nil,   nil,
    97,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 47, :_reduce_1,
  1, 47, :_reduce_2,
  1, 47, :_reduce_3,
  1, 47, :_reduce_4,
  3, 52, :_reduce_5,
  3, 52, :_reduce_6,
  3, 52, :_reduce_7,
  2, 48, :_reduce_8,
  2, 49, :_reduce_9,
  2, 50, :_reduce_10,
  6, 51, :_reduce_11,
  1, 59, :_reduce_12,
  0, 59, :_reduce_13,
  2, 54, :_reduce_14,
  3, 54, :_reduce_15,
  1, 61, :_reduce_16,
  0, 61, :_reduce_17,
  2, 55, :_reduce_18,
  3, 55, :_reduce_19,
  6, 62, :_reduce_20,
  3, 62, :_reduce_21,
  6, 60, :_reduce_22,
  3, 60, :_reduce_23,
  6, 60, :_reduce_24,
  3, 60, :_reduce_25,
  5, 60, :_reduce_26,
  8, 60, :_reduce_27,
  1, 60, :_reduce_28,
  1, 66, :_reduce_29,
  1, 66, :_reduce_30,
  1, 66, :_reduce_31,
  1, 63, :_reduce_32,
  3, 63, :_reduce_33,
  5, 65, :_reduce_34,
  6, 65, :_reduce_35,
  4, 65, :_reduce_36,
  3, 65, :_reduce_37,
  0, 67, :_reduce_38,
  3, 67, :_reduce_39,
  1, 64, :_reduce_40,
  3, 64, :_reduce_41,
  1, 69, :_reduce_42,
  1, 69, :_reduce_43,
  1, 68, :_reduce_44,
  2, 68, :_reduce_45,
  1, 70, :_reduce_46,
  3, 70, :_reduce_47,
  2, 57, :_reduce_48,
  1, 57, :_reduce_49,
  1, 53, :_reduce_50,
  1, 71, :_reduce_51,
  3, 71, :_reduce_52,
  1, 72, :_reduce_53,
  1, 72, :_reduce_54,
  1, 72, :_reduce_55,
  1, 72, :_reduce_56,
  2, 72, :_reduce_57,
  2, 72, :_reduce_58,
  2, 72, :_reduce_59,
  3, 72, :_reduce_60,
  4, 72, :_reduce_61,
  3, 73, :_reduce_62,
  1, 58, :_reduce_63,
  3, 58, :_reduce_64,
  4, 75, :_reduce_65,
  1, 75, :_reduce_66,
  2, 56, :_reduce_67,
  2, 56, :_reduce_68,
  3, 76, :_reduce_69,
  1, 77, :_reduce_70,
  1, 77, :_reduce_71,
  3, 77, :_reduce_72,
  3, 77, :_reduce_73,
  0, 74, :_reduce_74,
  1, 74, :_reduce_75 ]

racc_reduce_n = 76

racc_shift_n = 151

racc_token_table = {
  false => 0,
  :error => 1,
  :T_COMMA => 2,
  :T_RARROW => 3,
  :K_OR => 4,
  :T_EOF => 5,
  :K_CLASS => 6,
  :K_METACLASS => 7,
  :K_MODULE => 8,
  :K_INTERFACE => 9,
  :K_TYPE => 10,
  :K_TYPEVAR => 11,
  :K_ALIAS => 12,
  :K_REQUIRE => 13,
  :K_END => 14,
  :K_SELF => 15,
  :T_BEGIN_LINE => 16,
  :T_SEMICOLON => 17,
  :T_COLON => 18,
  :T_DOUBLE_COLON => 19,
  :T_DOT => 20,
  :T_STAR => 21,
  :T_QUESTION => 22,
  :T_CARROT => 23,
  :T_BANG => 24,
  :T_EQUAL => 25,
  :T_LPAREN => 26,
  :T_RPAREN => 27,
  :T_LESS => 28,
  :T_GREATER => 29,
  :T_LBRACKET => 30,
  :T_RBRACKET => 31,
  :T_LBRACE => 32,
  :T_RBRACE => 33,
  :T_SUBTYPE => 34,
  :T_STRING => 35,
  :T_IVAR => 36,
  :T_CVAR => 37,
  :T_GVAR => 38,
  :T_CONST_ID => 39,
  :T_TYPE_ID => 40,
  :T_SYMBOL => 41,
  :T_LOCAL_ID => 42,
  :T_TICKED_ID => 43,
  :T_SUFFIXED_ID => 44,
  :T_DOUBLE_HASH => 45 }

racc_nt_base = 46

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "T_COMMA",
  "T_RARROW",
  "K_OR",
  "T_EOF",
  "K_CLASS",
  "K_METACLASS",
  "K_MODULE",
  "K_INTERFACE",
  "K_TYPE",
  "K_TYPEVAR",
  "K_ALIAS",
  "K_REQUIRE",
  "K_END",
  "K_SELF",
  "T_BEGIN_LINE",
  "T_SEMICOLON",
  "T_COLON",
  "T_DOUBLE_COLON",
  "T_DOT",
  "T_STAR",
  "T_QUESTION",
  "T_CARROT",
  "T_BANG",
  "T_EQUAL",
  "T_LPAREN",
  "T_RPAREN",
  "T_LESS",
  "T_GREATER",
  "T_LBRACKET",
  "T_RBRACKET",
  "T_LBRACE",
  "T_RBRACE",
  "T_SUBTYPE",
  "T_STRING",
  "T_IVAR",
  "T_CVAR",
  "T_GVAR",
  "T_CONST_ID",
  "T_TYPE_ID",
  "T_SYMBOL",
  "T_LOCAL_ID",
  "T_TICKED_ID",
  "T_SUFFIXED_ID",
  "T_DOUBLE_HASH",
  "$start",
  "entry",
  "e_method",
  "e_field",
  "e_class",
  "e_annotation",
  "field_sig",
  "type_expr",
  "method_annotation_list",
  "field_annotation_list",
  "class_annotation",
  "type_ident",
  "type_expr_comma_list",
  "method_start",
  "const_method_type",
  "field_start",
  "method_type",
  "method_name",
  "type_id_list",
  "method_sig",
  "relative_method_name",
  "block",
  "type_var",
  "simple_type_var",
  "type_ident_list",
  "or_type_list",
  "single_type_expr",
  "tuple",
  "field_or_method_list",
  "class_decl",
  "field_type",
  "field_or_method_nonempty_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'annot_parser.racc', 48)
  def _reduce_1(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 49)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 50)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 51)
  def _reduce_4(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 56)
  def _reduce_5(val, _values, result)
            result = handle_var(:ivar, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 58)
  def _reduce_6(val, _values, result)
            result = handle_var(:cvar, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 60)
  def _reduce_7(val, _values, result)
            result = handle_var(:gvar, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 68)
  def _reduce_8(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 71)
  def _reduce_9(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 74)
  def _reduce_10(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 78)
  def _reduce_11(val, _values, result)
      	  	result = Rtc::Types::ParameterizedType.new(handle_type_ident(val[1]), val[3])
  	  
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 82)
  def _reduce_12(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 83)
  def _reduce_13(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 86)
  def _reduce_14(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 88)
  def _reduce_15(val, _values, result)
            result = [val[1]] + val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 92)
  def _reduce_16(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 93)
  def _reduce_17(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 96)
  def _reduce_18(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 97)
  def _reduce_19(val, _values, result)
     result = [val[1]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 102)
  def _reduce_20(val, _values, result)
     result = handle_mtype(val[0], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 104)
  def _reduce_21(val, _values, result)
     result = handle_mtype(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 109)
  def _reduce_22(val, _values, result)
     result = handle_mtype(val[0], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 111)
  def _reduce_23(val, _values, result)
     result = handle_mtype(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 113)
  def _reduce_24(val, _values, result)
     result = handle_mtype(val[0], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 115)
  def _reduce_25(val, _values, result)
     result = handle_mtype(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 117)
  def _reduce_26(val, _values, result)
        	result = handle_mtype(ClassMethodIdentifier.new(val[2]), nil, val[4]) 
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 120)
  def _reduce_27(val, _values, result)
     result = handle_mtype(ClassMethodIdentifier.new(val[2]), val[4], val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 122)
  def _reduce_28(val, _values, result)
           result = handle_mtype(MethodIdentifier.new("__rtc_next_method"), nil, val[0])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 127)
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 129)
  def _reduce_30(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 131)
  def _reduce_31(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 134)
  def _reduce_32(val, _values, result)
     result = MethodIdentifier.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 135)
  def _reduce_33(val, _values, result)
     result = ClassMethodIdentifier.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 139)
  def _reduce_34(val, _values, result)
            result = construct_msig([], val[2], val[4])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 142)
  def _reduce_35(val, _values, result)
            result = construct_msig(val[1], val[3], val[5])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 145)
  def _reduce_36(val, _values, result)
        	result = construct_msig(val[1], val[3], Rtc::Types::TopType.instance)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 148)
  def _reduce_37(val, _values, result)
            result = construct_msig([], val[2], Rtc::Types::TopType.instance)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 153)
  def _reduce_38(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 154)
  def _reduce_39(val, _values, result)
     result = handle_btype(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 157)
  def _reduce_40(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 158)
  def _reduce_41(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 161)
  def _reduce_42(val, _values, result)
     result = handle_type_param(:id, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 162)
  def _reduce_43(val, _values, result)
     result = handle_type_param(:self, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 165)
  def _reduce_44(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 167)
  def _reduce_45(val, _values, result)
            result = handle_type_param(:varargs, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 171)
  def _reduce_46(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 173)
  def _reduce_47(val, _values, result)
          result = [val[0]] + val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 178)
  def _reduce_48(val, _values, result)
       	  	result = {
   	  		:type => :absolute,
   	  		:name_list => val[1]
   	  	}
   	  
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 184)
  def _reduce_49(val, _values, result)
            result = {
        	:type => :relative,
        	:name_list => val[0]
        }
   	  
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 191)
  def _reduce_50(val, _values, result)
            list = val[0][:or_list]
        if(list.length > 1)
          result = Rtc::Types::UnionType.new(list)
        else
          # flatten if there is no union
          result = list[0]
        end
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 201)
  def _reduce_51(val, _values, result)
     result = {:or_list => [val[0]]} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 203)
  def _reduce_52(val, _values, result)
            # need to differientiate OR lists from tuples (which are just arrays)
        val[2][:or_list] = [val[0]] + val[2][:or_list]
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 209)
  def _reduce_53(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 211)
  def _reduce_54(val, _values, result)
        	result = Rtc::Types::SymbolType.new(eval(val[0]))
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 214)
  def _reduce_55(val, _values, result)
            result = handle_type_ident(val[0])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 216)
  def _reduce_56(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 218)
  def _reduce_57(val, _values, result)
            result = Rtc::Types::TopType.instance
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 221)
  def _reduce_58(val, _values, result)
            result = Rtc::Types::OptionalArg.new(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 224)
  def _reduce_59(val, _values, result)
            result = Rtc::Types::Vararg.new(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 227)
  def _reduce_60(val, _values, result)
            result = handle_structural_type(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 230)
  def _reduce_61(val, _values, result)
            nominal = handle_type_ident(val[0])
        result = Rtc::Types::ParameterizedType.new(nominal, val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 235)
  def _reduce_62(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 238)
  def _reduce_63(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 240)
  def _reduce_64(val, _values, result)
            result = [val[0]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 245)
  def _reduce_65(val, _values, result)
            id = val[0]
        type_vars = val[2]
        result = handle_class_decl(id, type_vars)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 250)
  def _reduce_66(val, _values, result)
            id = val[0]
        result = handle_class_decl(id)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 256)
  def _reduce_67(val, _values, result)
            result = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 259)
  def _reduce_68(val, _values, result)
            result = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 265)
  def _reduce_69(val, _values, result)
            result = handle_var(:ivar, val[0], val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 270)
  def _reduce_70(val, _values, result)
            result = {:fields => [val[0]], :methods => []}       
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 272)
  def _reduce_71(val, _values, result)
            result = {:fields => [],       :methods => [val[0]]} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 274)
  def _reduce_72(val, _values, result)
            field_method_hash = val[2]
        field_method_hash[:fields] += [val[0]]
        result = field_method_hash
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 279)
  def _reduce_73(val, _values, result)
            field_method_hash = val[2]
        field_method_hash[:methods] += [val[0]]
        result = field_method_hash
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 285)
  def _reduce_74(val, _values, result)
     result = {:fields => [], :methods => []} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 286)
  def _reduce_75(val, _values, result)
     result = val[0] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class TypeAnnotationParser


end
