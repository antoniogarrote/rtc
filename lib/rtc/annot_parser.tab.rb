#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/rtc/annot_parser.racc".
#

require 'racc/parser'



require 'rtc/annot_lexer.rex'
require 'rtc/parser'
require 'rtc/typing/types.rb'

module Rtc

  class TypeAnnotationParser < Racc::Parser

    attr_accessor :pos, :proxy

    # FIXME(rwsims): it's not clear what proxy is for, it's used when defining
    # class constants for doing class type signatures.
    def initialize(proxy)
        @proxy = proxy
    end

    def strip_quotes(arg)
      arg.strip.gsub(/^\"/, "").gsub(/\"$/, "")
    end

    # ####################
    # helper methods for type constructors from ML parser
    # ####################

    
    def pragma(key)
      fail "Unknown pragma keyword: #{key}" if(key !="FIXME")
    end

  end


class TypeAnnotationParser < Racc::Parser

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 48, :_reduce_1,
 1, 48, :_reduce_2,
 1, 48, :_reduce_3,
 1, 48, :_reduce_4,
 3, 53, :_reduce_5,
 3, 53, :_reduce_6,
 3, 53, :_reduce_7,
 2, 49, :_reduce_8,
 2, 50, :_reduce_9,
 2, 51, :_reduce_10,
 3, 52, :_reduce_11,
 1, 58, :_reduce_12,
 0, 58, :_reduce_13,
 2, 55, :_reduce_14,
 3, 55, :_reduce_15,
 1, 60, :_reduce_16,
 0, 60, :_reduce_17,
 2, 56, :_reduce_18,
 3, 56, :_reduce_19,
 6, 61, :_reduce_20,
 3, 61, :_reduce_21,
 6, 59, :_reduce_22,
 3, 59, :_reduce_23,
 6, 59, :_reduce_24,
 3, 59, :_reduce_25,
 5, 59, :_reduce_26,
 8, 59, :_reduce_27,
 1, 59, :_reduce_28,
 1, 65, :_reduce_29,
 1, 65, :_reduce_30,
 1, 65, :_reduce_31,
 1, 62, :_reduce_32,
 3, 62, :_reduce_33,
 5, 64, :_reduce_34,
 6, 64, :_reduce_35,
 4, 64, :_reduce_36,
 3, 64, :_reduce_37,
 0, 66, :_reduce_38,
 3, 66, :_reduce_39,
 1, 63, :_reduce_40,
 3, 63, :_reduce_41,
 1, 69, :_reduce_42,
 1, 69, :_reduce_43,
 1, 68, :_reduce_44,
 2, 68, :_reduce_45,
 1, 70, :_reduce_46,
 3, 70, :_reduce_47,
 2, 71, :_reduce_48,
 1, 71, :_reduce_49,
 1, 54, :_reduce_50,
 1, 72, :_reduce_51,
 3, 72, :_reduce_52,
 1, 73, :_reduce_53,
 1, 73, :_reduce_54,
 1, 73, :_reduce_55,
 1, 73, :_reduce_56,
 2, 73, :_reduce_57,
 2, 73, :_reduce_58,
 2, 73, :_reduce_59,
 3, 73, :_reduce_60,
 4, 73, :_reduce_61,
 1, 73, :_reduce_62,
 3, 74, :_reduce_63,
 1, 67, :_reduce_64,
 3, 67, :_reduce_65,
 4, 76, :_reduce_66,
 1, 76, :_reduce_67,
 2, 57, :_reduce_68,
 2, 57, :_reduce_69,
 3, 77, :_reduce_70,
 1, 78, :_reduce_71,
 1, 78, :_reduce_72,
 3, 78, :_reduce_73,
 3, 78, :_reduce_74,
 0, 75, :_reduce_75,
 1, 75, :_reduce_76 ]

racc_reduce_n = 77

racc_shift_n = 149

racc_action_table = [
    10,    23,    13,    31,    91,    31,    96,   -18,    97,    23,
     8,    23,   100,    31,    32,    34,    16,    17,    88,    17,
    21,    98,    99,    26,    28,    26,    23,    86,    33,   101,
   -17,   -17,   -17,    26,    17,    30,    33,    23,    33,     2,
    18,    31,    32,    34,    16,    17,   102,   104,    21,   -14,
    89,    23,    28,    33,    85,    31,    32,    34,    16,    17,
    78,    26,    21,    30,    33,    23,    28,    40,    18,    31,
    32,    34,    16,    17,    80,    26,    21,    30,    33,    23,
    28,    39,    18,    84,    79,    82,    40,    17,    45,    26,
    38,    30,    33,    23,    83,    81,    18,    31,    32,    34,
    16,    17,    76,    73,    21,    75,    33,    23,    28,    71,
    26,    31,    32,    34,    16,    17,   117,    26,    21,    30,
    33,    23,    28,    62,    18,    31,    32,    34,    16,    17,
    61,    26,    21,    30,    33,    23,    28,    26,    18,    31,
    32,    34,    16,    17,    60,    26,    21,    30,    33,    23,
    28,    95,    18,    31,    32,    34,    16,    17,    40,    26,
    21,    30,    33,    23,    28,   104,    18,    31,    32,    34,
    16,    17,   124,    26,    21,    30,    33,    23,    28,    40,
    18,    31,    32,    34,    16,    17,    90,    26,    21,    30,
    33,    23,    28,   128,    18,    31,    32,    34,    16,    17,
   129,    26,    21,    30,    33,    23,    28,   130,    18,    31,
    32,    34,    16,    17,   131,    26,    21,    30,    33,    23,
    28,   132,    18,    31,    32,    34,    16,    17,    66,    26,
    21,    30,    33,   133,    28,    48,    18,   135,    37,    23,
    41,    66,    40,    26,   127,    30,    33,    17,    39,    65,
    18,    40,    66,    36,   126,    45,   139,    38,   140,   141,
    39,    39,    65,    23,    43,    15,    33,    45,    45,    38,
    38,    17,    39,    65,    23,   143,    39,    40,    40,    45,
   105,    38,    17,    45,    40,    38,    49,    50,    51,   147,
    33,   -16,   -16,   -16,    40,   nil,   nil,   nil,   nil,   nil,
   nil,    33 ]

racc_action_check = [
     0,    17,     0,    10,    59,    13,    65,    52,    66,   133,
     0,    89,    68,   133,   133,   133,   133,   133,    52,    89,
   133,    67,    68,    10,   133,    13,    81,    51,    17,    69,
     0,     0,     0,   133,    81,   133,   133,     2,    89,     0,
   133,     2,     2,     2,     2,     2,    74,    75,     2,    42,
    53,    84,     2,    81,    50,    84,    84,    84,    84,    84,
    42,     2,    84,     2,     2,    85,    84,    80,     2,    85,
    85,    85,    85,    85,    43,    84,    85,    84,    84,    99,
    85,    97,    84,    49,    43,    44,    82,    99,    97,    85,
    97,    85,    85,    40,    48,    44,    85,    40,    40,    40,
    40,    40,    41,    35,    40,    40,    99,   124,    40,    32,
    31,   124,   124,   124,   124,   124,    92,    40,   124,    40,
    40,    60,   124,    27,    40,    60,    60,    60,    60,    60,
    26,   124,    60,   124,   124,    86,    60,    61,   124,    86,
    86,    86,    86,    86,    24,    60,    86,    60,    60,    34,
    86,    63,    60,    34,    34,    34,    34,    34,   100,    86,
    34,    86,    86,    91,    34,   102,    86,    91,    91,    91,
    91,    91,   103,    34,    91,    34,    34,    16,    91,   104,
    34,    16,    16,    16,    16,    16,    58,    91,    16,    91,
    91,    96,    16,   107,    91,    96,    96,    96,    96,    96,
   108,    16,    96,    16,    16,    21,    96,   110,    16,    21,
    21,    21,    21,    21,   115,    96,    21,    96,    96,    62,
    21,   121,    96,    62,    62,    62,    62,    62,    98,    21,
    62,    21,    21,   123,    62,     6,    21,   125,     4,   128,
     5,    28,   127,    62,   105,    62,    62,   128,    98,    98,
    62,     5,    95,     3,   105,    98,   129,    98,   130,   132,
     5,    28,    28,   126,     5,     1,   128,     5,    28,     5,
    28,   126,    95,    95,    79,   136,    76,   139,   140,    95,
    76,    95,    79,    76,   141,    76,     7,     7,     7,   143,
   126,     8,     8,     8,   147,   nil,   nil,   nil,   nil,   nil,
   nil,    79 ]

racc_action_pointer = [
    -6,   260,    22,   248,   233,   225,   235,   250,   255,   nil,
   -16,   nil,   nil,   -14,   nil,   nil,   162,   -14,   nil,   nil,
   nil,   190,   nil,   nil,   116,   nil,   111,   119,   226,   nil,
   nil,    71,    87,   nil,   134,    98,   nil,   nil,   nil,   nil,
    78,    82,    44,    56,    67,   nil,   nil,   nil,    94,    65,
    36,     9,     2,    22,   nil,   nil,   nil,   nil,   159,     2,
   106,    98,   204,   149,   nil,   -12,   -12,    19,    -6,    -2,
   nil,   nil,   nil,   nil,    19,    15,   241,   nil,   nil,   259,
    41,    11,    60,   nil,    36,    50,   120,   nil,   nil,    -4,
   nil,   148,    87,   nil,   nil,   237,   176,    46,   213,    64,
   132,   nil,   133,   169,   153,   226,   nil,   191,   171,   nil,
   178,   nil,   nil,   nil,   nil,   185,   nil,   nil,   nil,   nil,
   nil,   192,   nil,   230,    92,   204,   248,   216,   224,   238,
   240,   nil,   241,    -6,   nil,   nil,   246,   nil,   nil,   251,
   252,   258,   nil,   271,   nil,   nil,   nil,   268,   nil ]

racc_action_default = [
   -13,   -77,   -77,   -77,   -77,   -77,   -77,   -77,   -12,    -1,
   -77,    -2,    -3,   -77,    -4,    -8,   -77,   -77,   -62,   -53,
   -44,   -77,   -49,   -43,   -55,   -50,   -46,   -51,   -75,   -56,
   -54,   -77,   -77,   -42,   -77,   -77,    -9,   -10,   -31,   -29,
   -77,   -77,   -13,   -77,   -77,   -30,   -28,   -32,   -77,   -77,
   -77,   -77,   -17,   -67,   -68,   -69,   -58,   -45,   -77,   -64,
   -77,   -77,   -77,   -71,   -76,   -77,   -77,   -72,   -77,   -77,
   -48,   -57,   -59,   -11,   -77,   -38,   -77,   -15,   -12,   -77,
   -77,   -77,   -77,   149,   -77,   -77,   -77,   -19,   -16,   -77,
   -63,   -77,   -77,   -47,   -52,   -77,   -77,   -77,   -77,   -77,
   -77,   -60,   -38,   -37,   -77,   -77,   -33,   -40,   -77,   -25,
   -77,   -23,    -5,    -6,    -7,   -77,   -65,   -61,   -73,   -70,
   -74,   -77,   -21,   -36,   -77,   -77,   -77,   -77,   -77,   -77,
   -77,   -66,   -77,   -77,   -34,   -39,   -77,   -26,   -41,   -77,
   -77,   -77,   -35,   -77,   -24,   -22,   -20,   -77,   -27 ]

racc_goto_table = [
    46,    58,    35,    64,     3,   108,   107,   110,   107,     1,
   103,    70,   106,    56,    54,   115,   107,    55,    53,    14,
    74,    53,    11,     9,    44,   121,   107,    57,    42,     4,
    94,    72,    12,   106,    69,    52,     6,   123,   nil,   nil,
    92,    93,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    77,   136,   107,   138,   107,    87,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   118,   116,   nil,   120,   nil,   109,   nil,   111,   nil,   nil,
   nil,   nil,   nil,   nil,   112,   113,   114,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   122,   119,   nil,   nil,   125,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   137,   nil,   134,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   142,   144,   145,   146,   nil,   nil,   nil,
   nil,   nil,   148 ]

racc_goto_check = [
    17,    20,     7,    31,     9,    16,    21,    16,    21,     8,
    19,    23,    18,    26,    29,    16,    21,    29,    24,     5,
    20,    24,     3,     2,    15,    16,    21,    22,    12,    10,
    25,    26,     4,    18,    28,     6,     1,    19,   nil,   nil,
    20,    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     8,    16,    21,    16,    21,     9,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    31,    20,   nil,    31,   nil,    17,   nil,    17,   nil,   nil,
   nil,   nil,   nil,   nil,     7,     7,     7,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    17,     7,   nil,   nil,    17,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    17,   nil,     7,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,    17,    17,    17,   nil,   nil,   nil,
   nil,   nil,    17 ]

racc_goto_pointer = [
   nil,    36,    23,    22,    32,    19,    28,     0,     9,     4,
    29,   nil,    23,   nil,   nil,    19,   -74,    -5,   -64,   -65,
   -20,   -73,    10,   -20,     8,   -32,    -3,   nil,     6,     4,
   nil,   -25 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    59,   nil,   nil,
   nil,     5,   nil,     7,    67,    68,   nil,   nil,    47,   nil,
   nil,    19,    20,    22,    24,    25,    27,    29,   nil,   nil,
    63,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :T_COMMA => 2,
 :T_RARROW => 3,
 :K_OR => 4,
 :T_EOF => 5,
 :K_CLASS => 6,
 :K_METACLASS => 7,
 :K_MODULE => 8,
 :K_INTERFACE => 9,
 :K_TYPE => 10,
 :K_TYPEVAR => 11,
 :K_ALIAS => 12,
 :K_REQUIRE => 13,
 :K_END => 14,
 :K_SELF => 15,
 :T_BEGIN_LINE => 16,
 :T_SEMICOLON => 17,
 :T_COLON => 18,
 :T_DOUBLE_COLON => 19,
 :T_DOT => 20,
 :T_STAR => 21,
 :T_QUESTION => 22,
 :T_CARROT => 23,
 :T_BANG => 24,
 :T_EQUAL => 25,
 :T_LPAREN => 26,
 :T_RPAREN => 27,
 :T_LESS => 28,
 :T_GREATER => 29,
 :T_LBRACKET => 30,
 :T_RBRACKET => 31,
 :T_LBRACE => 32,
 :T_RBRACE => 33,
 :T_SUBTYPE => 34,
 :T_STRING => 35,
 :T_IVAR => 36,
 :T_CVAR => 37,
 :T_GVAR => 38,
 :T_CONST_ID => 39,
 :T_TYPE_ID => 40,
 :T_SYMBOL => 41,
 :T_LOCAL_ID => 42,
 :T_TICKED_ID => 43,
 :T_SUFFIXED_ID => 44,
 :T_DOUBLE_HASH => 45,
 :K_NIL => 46 }

racc_use_result_var = true

racc_nt_base = 47

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'T_COMMA',
'T_RARROW',
'K_OR',
'T_EOF',
'K_CLASS',
'K_METACLASS',
'K_MODULE',
'K_INTERFACE',
'K_TYPE',
'K_TYPEVAR',
'K_ALIAS',
'K_REQUIRE',
'K_END',
'K_SELF',
'T_BEGIN_LINE',
'T_SEMICOLON',
'T_COLON',
'T_DOUBLE_COLON',
'T_DOT',
'T_STAR',
'T_QUESTION',
'T_CARROT',
'T_BANG',
'T_EQUAL',
'T_LPAREN',
'T_RPAREN',
'T_LESS',
'T_GREATER',
'T_LBRACKET',
'T_RBRACKET',
'T_LBRACE',
'T_RBRACE',
'T_SUBTYPE',
'T_STRING',
'T_IVAR',
'T_CVAR',
'T_GVAR',
'T_CONST_ID',
'T_TYPE_ID',
'T_SYMBOL',
'T_LOCAL_ID',
'T_TICKED_ID',
'T_SUFFIXED_ID',
'T_DOUBLE_HASH',
'K_NIL',
'$start',
'entry',
'e_method',
'e_field',
'e_class',
'e_annotation',
'field_sig',
'type_expr',
'method_annotation_list',
'field_annotation_list',
'class_annotation',
'method_start',
'const_method_type',
'field_start',
'method_type',
'method_name',
'type_id_list',
'method_sig',
'relative_method_name',
'block',
'type_expr_comma_list',
'type_var',
'simple_type_var',
'type_ident_list',
'type_ident',
'or_type_list',
'single_type_expr',
'tuple',
'field_or_method_list',
'class_decl',
'field_type',
'field_or_method_nonempty_list']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 49
  def _reduce_1( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 50
  def _reduce_2( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 51
  def _reduce_3( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 52
  def _reduce_4( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 58
  def _reduce_5( val, _values, result )
        result = handle_var(:ivar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 60
  def _reduce_6( val, _values, result )
        result = handle_var(:cvar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 62
  def _reduce_7( val, _values, result )
        result = handle_var(:gvar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 69
  def _reduce_8( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 72
  def _reduce_9( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 75
  def _reduce_10( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 81
  def _reduce_11( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 84
  def _reduce_12( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 85
  def _reduce_13( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 88
  def _reduce_14( val, _values, result )
 result = [val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 92
  def _reduce_15( val, _values, result )
        result = [val[1]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 94
  def _reduce_16( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 95
  def _reduce_17( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 98
  def _reduce_18( val, _values, result )
 result = [val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 99
  def _reduce_19( val, _values, result )
 result = [val[1]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 104
  def _reduce_20( val, _values, result )
 result = handle_mtype(val[0], val[2], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 106
  def _reduce_21( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 111
  def _reduce_22( val, _values, result )
 result = handle_mtype(val[0], val[2], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 113
  def _reduce_23( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 115
  def _reduce_24( val, _values, result )
 result = handle_mtype(val[0], val[2], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 117
  def _reduce_25( val, _values, result )
 result = handle_mtype(val[0], nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 121
  def _reduce_26( val, _values, result )
    	result = handle_mtype(ClassMethodIdentifier.new(val[2]), nil, val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 122
  def _reduce_27( val, _values, result )
 result = handle_mtype(ClassMethodIdentifier.new(val[2]), val[4], val[7])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 126
  def _reduce_28( val, _values, result )
       result = handle_mtype(MethodIdentifier.new("__rtc_next_method"), nil, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 129
  def _reduce_29( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 131
  def _reduce_30( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 133
  def _reduce_31( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 136
  def _reduce_32( val, _values, result )
 result = MethodIdentifier.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 137
  def _reduce_33( val, _values, result )
 result = ClassMethodIdentifier.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 143
  def _reduce_34( val, _values, result )
        result = construct_msig([], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 146
  def _reduce_35( val, _values, result )
        result = construct_msig(val[1], val[3], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 149
  def _reduce_36( val, _values, result )
    	result = construct_msig(val[1], val[3], Rtc::Types::TopType.instance)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 152
  def _reduce_37( val, _values, result )
        result = construct_msig([], val[2], Rtc::Types::TopType.instance)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 155
  def _reduce_38( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 156
  def _reduce_39( val, _values, result )
 result = handle_btype(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 159
  def _reduce_40( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 160
  def _reduce_41( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 163
  def _reduce_42( val, _values, result )
 result = handle_type_param(:id, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 164
  def _reduce_43( val, _values, result )
 result = handle_type_param(:self, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 167
  def _reduce_44( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 170
  def _reduce_45( val, _values, result )
        result = handle_type_param(:varargs, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 173
  def _reduce_46( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 177
  def _reduce_47( val, _values, result )
      result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 185
  def _reduce_48( val, _values, result )
   	  	result = {
   	  		:type => :absolute,
   	  		:name_list => val[1]
   	  	}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 191
  def _reduce_49( val, _values, result )
        result = {
        	:type => :relative,
        	:name_list => val[0]
        }
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 201
  def _reduce_50( val, _values, result )
        list = val[0][:or_list]
        if(list.length > 1)
          result = Rtc::Types::UnionType.new(list)
        else
          # flatten if there is no union
          result = list[0]
        end
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 203
  def _reduce_51( val, _values, result )
 result = {:or_list => [val[0]]}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 209
  def _reduce_52( val, _values, result )
        # need to differientiate OR lists from tuples (which are just arrays)
        val[2][:or_list] = [val[0]] + val[2][:or_list]
        result = val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 211
  def _reduce_53( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 215
  def _reduce_54( val, _values, result )
    	result = Rtc::Types::SymbolType.new(eval(val[0]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 218
  def _reduce_55( val, _values, result )
        result = handle_type_ident(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 218
  def _reduce_56( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 222
  def _reduce_57( val, _values, result )
        result = Rtc::Types::TopType.instance
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 225
  def _reduce_58( val, _values, result )
        result = Rtc::Types::OptionalArg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 228
  def _reduce_59( val, _values, result )
        result = Rtc::Types::Vararg.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 231
  def _reduce_60( val, _values, result )
        result = handle_structural_type(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 235
  def _reduce_61( val, _values, result )
        nominal = handle_type_ident(val[0])
        result = Rtc::Types::ParameterizedType.new(nominal, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 238
  def _reduce_62( val, _values, result )
    	result = Rtc::Types::NominalType.of(NilClass)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 240
  def _reduce_63( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 243
  def _reduce_64( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 246
  def _reduce_65( val, _values, result )
        result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 254
  def _reduce_66( val, _values, result )
        id = val[0]
        type_vars = val[2]
        result = handle_class_decl(id, type_vars)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 258
  def _reduce_67( val, _values, result )
        id = val[0]
        result = handle_class_decl(id)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 263
  def _reduce_68( val, _values, result )
        result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 266
  def _reduce_69( val, _values, result )
        result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 272
  def _reduce_70( val, _values, result )
        result = handle_var(:ivar, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 276
  def _reduce_71( val, _values, result )
        result = {:fields => [val[0]], :methods => []}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 278
  def _reduce_72( val, _values, result )
        result = {:fields => [],       :methods => [val[0]]}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 283
  def _reduce_73( val, _values, result )
        field_method_hash = val[2]
        field_method_hash[:fields] += [val[0]]
        result = field_method_hash
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 288
  def _reduce_74( val, _values, result )
        field_method_hash = val[2]
        field_method_hash[:methods] += [val[0]]
        result = field_method_hash
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 290
  def _reduce_75( val, _values, result )
 result = {:fields => [], :methods => []}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/rtc/annot_parser.racc', 291
  def _reduce_76( val, _values, result )
 result = val[0]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

end   # class TypeAnnotationParser


end
