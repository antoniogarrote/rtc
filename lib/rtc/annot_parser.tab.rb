#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'rtc/annot_lexer.rex'
require 'rtc/parser'
require 'rtc/typing/types.rb'

module Rtc

#  FIXME(rwsims): this is never called
#  def str_typedef(s)
#    pos = Rtc::Positioning.caller_pos(caller(), 0)
#    ctx = Rtc::ErrorReporting::Context.new(pos, s.to_s)
#    sigs = parse_typesig(s, pos, ctx)
#    sigs.each {|sig| __alias_type(@pos, sig.id, sig.type) }
#  end

  class TypeAnnotationParser < Racc::Parser

    attr_accessor :pos, :proxy

    # FIXME(rwsims): it's not clear what proxy is for, it's used when defining
    # class constants for doing class type signatures.
    def initialize(proxy)
        @proxy = proxy
    end

    def strip_quotes(arg)
      arg.strip.gsub(/^\"/, "").gsub(/\"$/, "")
    end

    # ####################
    # helper methods for type constructors from ML parser
    # ####################

    def token_text(x)
      x
    end

    def pragma(key)
      fail "Unknown pragma keyword: #{key}" if(key !="FIXME")
    end

  end

class TypeAnnotationParser < Racc::Parser

module_eval(<<'...end annot_parser.racc/module_eval...', 'annot_parser.racc', 432)

...end annot_parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    65,    14,    65,    16,    35,    76,    78,    77,    67,
    10,   -36,    83,    65,    35,    35,    79,    35,    76,    78,
    77,    67,    52,   133,    69,    34,    91,    64,    79,    64,
   -35,   -35,   -35,   132,    34,    34,    65,    34,    65,    64,
    35,    76,    78,    77,    67,    17,    67,    69,    65,   106,
   -32,    79,    35,    76,    78,    77,    67,    46,    65,    83,
    34,    43,    64,    79,    64,   116,    67,    45,   104,   117,
    48,    65,    34,    65,    64,    35,    76,    78,    77,    67,
    47,    67,    69,    65,    64,   118,    79,    35,    76,    78,
    77,    67,   119,    65,    83,    34,    55,    64,    79,    64,
   120,    67,    30,    31,    32,    56,    65,    34,    65,    64,
    35,    76,    78,    77,    67,    99,    67,    83,    65,    64,
    95,    79,    35,    76,    78,    77,    67,    98,    65,    83,
    34,    65,    64,    79,    64,   104,    67,   127,   128,    67,
    95,    65,    34,    91,    64,    35,    76,    78,    77,    67,
    55,    95,    83,   101,    64,    86,    79,    64,    61,   105,
   -34,   -34,   -34,   134,    65,    34,    91,    64,    35,    76,
    78,    77,    67,   135,   136,    83,    65,   137,    95,    79,
    35,    76,    78,    77,    67,   107,    16,    83,    34,    25,
    64,    79,    57,    24,   142,    26,   143,    27,    28,    65,
    34,   144,    64,    35,    76,    78,    77,    67,   145,    57,
    69,    65,   147,   148,    79,    35,    76,    78,    77,    67,
    54,    51,    83,    34,    50,    64,    79,    49,    42,   154,
    41,    39,    21,    20,    65,    34,    91,    64,    35,    76,
    78,    77,    67,   159,    19,    83,    65,    95,   162,    79,
    35,    76,    78,    77,    67,    18,   nil,    69,    34,   nil,
    64,    79,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    65,
    34,   nil,    64,    35,    76,    78,    77,    67,   nil,   nil,
    83,    65,   nil,   nil,    79,    35,    76,    78,    77,    67,
   nil,   nil,    83,    34,    91,    64,    79,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    65,    34,   nil,    64,    35,    76,
    78,    77,    67,   nil,   nil,    83,    65,   nil,   nil,    79,
    35,    76,    78,    77,    67,   nil,   nil,    83,    34,    91,
    64,    79,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    65,
    34,   nil,    64,    35,    76,    78,    77,    67,   nil,   nil,
    83,    65,   nil,   nil,    79,    35,    76,    78,    77,    67,
   nil,   nil,    69,    34,   nil,    64,    79,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    65,    34,   nil,    64,    35,    76,
    78,    77,    67,   nil,   nil,    69,    65,   nil,   nil,    79,
    35,    76,    78,    77,    67,   nil,   nil,    83,    34,   nil,
    64,    79,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    65,
    34,   nil,    64,    35,    76,    78,    77,    67,   nil,   nil,
    83,    65,   nil,   nil,    79,    35,    76,    78,    77,    67,
   nil,   nil,    83,    34,   nil,    64,    79,   nil,   nil,   nil,
    25,   112,   nil,   nil,   nil,    34,    26,    64,    27,    28,
    25,   112,   nil,   nil,    25,   112,    26,   nil,    27,    28,
    26,   nil,    27,    28 ]

racc_action_check = [
     0,   118,     0,    67,     0,   118,   118,   118,   118,   118,
     0,    33,   118,   162,    14,    13,   118,   162,   162,   162,
   162,   162,    33,   110,   162,   118,   118,   118,   162,    67,
     0,     0,     0,   110,    14,    13,   154,   162,   142,   162,
   154,   154,   154,   154,   154,     1,   142,   154,   145,    73,
    22,   154,   145,   145,   145,   145,   145,    23,    95,   145,
   154,    22,   154,   145,   142,    80,    95,    23,    70,    87,
    24,   144,   145,    99,   145,   144,   144,   144,   144,   144,
    24,    99,   144,    77,    95,    89,   144,    77,    77,    77,
    77,    77,    91,   132,    77,   144,    36,   144,    77,    99,
    92,   132,    12,    12,    12,    36,    78,    77,    56,    77,
    78,    78,    78,    78,    78,    63,    56,    78,    83,   132,
    98,    78,    83,    83,    83,    83,    83,    62,    45,    83,
    78,    47,    78,    83,    56,   101,    45,   102,   103,    47,
    59,    69,    83,    83,    83,    69,    69,    69,    69,    69,
    71,    58,    69,    69,    45,    55,    69,    47,    40,    71,
    10,    10,    10,   111,   143,    69,    69,    69,   143,   143,
   143,   143,   143,   112,   113,   143,    61,   114,   116,   143,
    61,    61,    61,    61,    61,    76,    39,    61,   143,    11,
   143,    61,    38,    11,   122,    11,   123,    11,    11,   104,
    61,   124,    61,   104,   104,   104,   104,   104,   126,    37,
   104,   105,   129,   130,   104,   105,   105,   105,   105,   105,
    35,    32,   105,   104,    31,   104,   105,    30,    17,   138,
    16,    15,     9,     8,   135,   105,   105,   105,   135,   135,
   135,   135,   135,   149,     7,   135,   133,   159,   161,   135,
   133,   133,   133,   133,   133,     6,   nil,   133,   135,   nil,
   135,   133,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,
   133,   nil,   133,    57,    57,    57,    57,    57,   nil,   nil,
    57,   128,   nil,   nil,    57,   128,   128,   128,   128,   128,
   nil,   nil,   128,    57,    57,    57,   128,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   120,   128,   nil,   128,   120,   120,
   120,   120,   120,   nil,   nil,   120,    51,   nil,   nil,   120,
    51,    51,    51,    51,    51,   nil,   nil,    51,   120,   120,
   120,    51,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   106,
    51,   nil,    51,   106,   106,   106,   106,   106,   nil,   nil,
   106,    46,   nil,   nil,   106,    46,    46,    46,    46,    46,
   nil,   nil,    46,   106,   nil,   106,    46,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    48,    46,   nil,    46,    48,    48,
    48,    48,    48,   nil,   nil,    48,    49,   nil,   nil,    48,
    49,    49,    49,    49,    49,   nil,   nil,    49,    48,   nil,
    48,    49,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    50,
    49,   nil,    49,    50,    50,    50,    50,    50,   nil,   nil,
    50,   119,   nil,   nil,    50,   119,   119,   119,   119,   119,
   nil,   nil,   119,    50,   nil,    50,   119,   nil,   nil,   nil,
   136,   136,   nil,   nil,   nil,   119,   136,   119,   136,   136,
    79,    79,   nil,   nil,   137,   137,    79,   nil,    79,    79,
   137,   nil,   137,   137 ]

racc_action_pointer = [
    -6,    45,   nil,   nil,   nil,   nil,   250,   239,   228,   227,
   124,   154,    66,    -4,    -5,   214,   191,   228,   nil,   nil,
   nil,   nil,    45,    39,    52,   nil,   nil,   nil,   nil,   nil,
   209,   206,   203,     6,   nil,   181,    77,   175,   158,   176,
   140,   nil,   nil,   nil,   nil,   113,   336,   116,   359,   371,
   394,   301,   nil,   nil,   nil,   116,    93,   254,   134,   123,
   nil,   161,    98,   113,   nil,   nil,   nil,   -12,   nil,   126,
    36,   131,   nil,    45,   nil,   nil,   163,    68,    91,   415,
    36,   nil,   nil,   103,   nil,   nil,   nil,    40,   nil,    81,
   nil,    74,    98,   nil,   nil,    43,   nil,   nil,   103,    58,
   nil,   103,   110,   135,   184,   196,   324,   nil,   nil,   nil,
     5,   132,   155,   172,   175,   nil,   161,   nil,   -14,   406,
   289,   nil,   192,   162,   183,   nil,   205,   nil,   266,   179,
   184,   nil,    78,   231,   nil,   219,   405,   419,   211,   nil,
   nil,   nil,    23,   149,    56,    33,   nil,   nil,   nil,   214,
   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   230,
   nil,   230,    -2,   nil ]

racc_action_default = [
   -31,  -104,    -1,    -2,    -3,    -4,  -104,  -104,  -104,  -104,
   -30,  -104,  -104,  -104,  -104,  -100,  -104,  -104,   -26,   -27,
   -28,   -29,   -31,  -104,  -104,   -45,   -46,   -47,   -48,   -49,
  -104,  -104,  -104,   -35,   -60,  -104,   -85,   -82,   -82,  -104,
  -104,  -103,   164,   -30,   -33,  -104,  -104,  -104,  -104,  -104,
  -104,  -104,   -34,   -37,   -61,  -104,  -104,  -104,   -88,   -88,
  -101,  -104,  -104,   -54,   -56,   -57,   -58,  -104,   -40,  -104,
   -52,   -67,   -63,   -64,   -66,   -68,  -104,  -104,  -104,   -98,
  -104,   -42,   -22,  -104,   -23,   -24,   -62,  -104,   -75,   -76,
   -78,  -104,   -80,   -83,   -86,  -104,   -87,  -102,   -88,  -104,
   -59,   -52,  -104,  -104,  -104,  -104,  -104,   -69,   -70,   -71,
  -104,  -104,  -104,   -94,   -95,   -99,   -88,   -84,  -104,  -104,
  -104,   -89,   -90,  -104,  -104,   -55,  -104,   -74,  -104,  -104,
  -104,   -65,  -104,  -104,   -72,  -104,  -104,  -104,  -104,   -77,
   -79,   -81,  -104,  -104,  -104,  -104,   -51,   -53,   -73,  -104,
   -44,   -93,   -96,   -97,  -104,   -91,   -92,   -39,   -50,   -88,
   -41,  -104,  -104,   -43 ]

racc_goto_table = [
    68,    93,    81,    94,    96,    63,    62,    63,    80,    82,
    84,    85,   115,     8,    90,     7,    63,    87,    97,   121,
   103,     1,     6,    58,    59,    23,    90,    37,    38,    36,
    36,    22,   100,    33,   108,   109,   131,    29,   111,     9,
    90,   139,     5,   124,    44,     4,     3,     2,    53,   130,
    40,   126,    60,   nil,   nil,   123,   nil,   nil,   129,    63,
   125,   138,    90,   nil,   141,   nil,   155,   nil,   nil,   152,
   153,   nil,   nil,   nil,   nil,    90,   140,    90,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   150,   146,   nil,
   nil,   nil,    63,   149,   nil,   151,   nil,   nil,   157,   nil,
   nil,   nil,   123,   156,   161,   158,   nil,   nil,   160,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   163 ]

racc_goto_check = [
    30,    39,    30,    29,    29,    32,    28,    32,    28,    19,
    19,    19,    48,    23,    36,    22,    32,    28,    36,    45,
    31,     1,    21,    43,    43,    27,    36,    44,    44,    34,
    34,    25,    33,    17,    36,    36,    35,    15,    38,    12,
    36,    41,     5,    29,    21,     4,     3,     2,    22,    39,
    50,    31,    23,   nil,   nil,    32,   nil,   nil,    30,    32,
    28,    29,    36,   nil,    39,   nil,    45,   nil,   nil,    48,
    48,   nil,   nil,   nil,   nil,    36,    36,    36,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    30,    19,   nil,
   nil,   nil,    32,    28,   nil,    19,   nil,   nil,    30,   nil,
   nil,   nil,    32,    19,    29,    19,   nil,   nil,    30,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    30 ]

racc_goto_pointer = [
   nil,    21,    47,    46,    45,    42,   nil,   nil,   nil,   nil,
   nil,   nil,    39,   nil,   nil,    26,   nil,    21,   nil,   -40,
   nil,    22,    15,    13,   nil,    20,   nil,    14,   -39,   -55,
   -46,   -50,   -40,   -35,    16,   -70,   -43,   nil,   -41,   -56,
   nil,   -77,   nil,   -14,    14,   -76,   nil,   nil,   -67,   nil,
    34 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   110,   114,   nil,   nil,    70,
   nil,   nil,   nil,   nil,    11,   nil,    12,   nil,   nil,   nil,
   nil,   nil,    74,    66,    71,    72,    73,    75,   nil,   102,
    92,    88,    89,   nil,   nil,   nil,   122,   113,   nil,    15,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 46, :_reduce_1,
  1, 46, :_reduce_2,
  1, 46, :_reduce_3,
  1, 46, :_reduce_4,
  3, 51, :_reduce_5,
  0, 52, :_reduce_6,
  2, 52, :_reduce_7,
  2, 54, :_reduce_8,
  0, 53, :_reduce_9,
  2, 53, :_reduce_10,
  3, 55, :_reduce_11,
  4, 55, :_reduce_12,
  4, 55, :_reduce_13,
  0, 56, :_reduce_14,
  2, 56, :_reduce_15,
  1, 59, :_reduce_16,
  3, 58, :_reduce_17,
  1, 58, :_reduce_18,
  1, 58, :_reduce_19,
  1, 58, :_reduce_20,
  1, 58, :_reduce_21,
  3, 62, :_reduce_22,
  3, 62, :_reduce_23,
  3, 62, :_reduce_24,
  2, 65, :_reduce_25,
  2, 47, :_reduce_26,
  2, 48, :_reduce_27,
  2, 49, :_reduce_28,
  2, 50, :_reduce_29,
  1, 69, :_reduce_30,
  0, 69, :_reduce_31,
  2, 66, :_reduce_32,
  3, 66, :_reduce_33,
  1, 71, :_reduce_34,
  0, 71, :_reduce_35,
  2, 67, :_reduce_36,
  3, 67, :_reduce_37,
  3, 63, :_reduce_38,
  7, 70, :_reduce_39,
  3, 70, :_reduce_40,
  7, 70, :_reduce_41,
  3, 70, :_reduce_42,
  7, 61, :_reduce_43,
  3, 61, :_reduce_44,
  1, 60, :_reduce_45,
  1, 60, :_reduce_46,
  1, 60, :_reduce_47,
  1, 60, :_reduce_48,
  1, 72, :_reduce_49,
  5, 75, :_reduce_50,
  4, 75, :_reduce_51,
  0, 76, :_reduce_52,
  3, 76, :_reduce_53,
  1, 73, :_reduce_54,
  3, 73, :_reduce_55,
  1, 78, :_reduce_56,
  1, 78, :_reduce_57,
  1, 77, :_reduce_58,
  2, 77, :_reduce_59,
  1, 79, :_reduce_60,
  2, 79, :_reduce_61,
  3, 79, :_reduce_62,
  1, 64, :_reduce_63,
  1, 80, :_reduce_64,
  3, 80, :_reduce_65,
  1, 81, :_reduce_66,
  1, 81, :_reduce_67,
  1, 81, :_reduce_68,
  2, 81, :_reduce_69,
  2, 81, :_reduce_70,
  2, 81, :_reduce_71,
  3, 81, :_reduce_72,
  4, 81, :_reduce_73,
  3, 82, :_reduce_74,
  1, 85, :_reduce_75,
  1, 86, :_reduce_76,
  3, 86, :_reduce_77,
  1, 87, :_reduce_78,
  3, 87, :_reduce_79,
  1, 84, :_reduce_80,
  3, 84, :_reduce_81,
  0, 88, :_reduce_82,
  2, 88, :_reduce_83,
  4, 89, :_reduce_84,
  1, 89, :_reduce_85,
  4, 57, :_reduce_86,
  4, 57, :_reduce_87,
  0, 74, :_reduce_88,
  2, 74, :_reduce_89,
  1, 90, :_reduce_90,
  3, 90, :_reduce_91,
  3, 91, :_reduce_92,
  3, 92, :_reduce_93,
  1, 93, :_reduce_94,
  1, 93, :_reduce_95,
  3, 93, :_reduce_96,
  3, 93, :_reduce_97,
  0, 83, :_reduce_98,
  1, 83, :_reduce_99,
  1, 68, :_reduce_100,
  3, 68, :_reduce_101,
  4, 94, :_reduce_102,
  1, 95, :_reduce_103 ]

racc_reduce_n = 104

racc_shift_n = 164

racc_token_table = {
  false => 0,
  :error => 1,
  :T_COMMA => 2,
  :T_RARROW => 3,
  :K_OR => 4,
  :T_EOF => 5,
  :K_CLASS => 6,
  :K_METACLASS => 7,
  :K_MODULE => 8,
  :K_INTERFACE => 9,
  :K_TYPE => 10,
  :K_TYPEVAR => 11,
  :K_ALIAS => 12,
  :K_REQUIRE => 13,
  :K_END => 14,
  :K_SELF => 15,
  :T_BEGIN_LINE => 16,
  :T_SEMICOLON => 17,
  :T_COLON => 18,
  :T_DOUBLE_COLON => 19,
  :T_DOT => 20,
  :T_STAR => 21,
  :T_QUESTION => 22,
  :T_CARROT => 23,
  :T_BANG => 24,
  :T_EQUAL => 25,
  :T_LPAREN => 26,
  :T_RPAREN => 27,
  :T_LESS => 28,
  :T_GREATER => 29,
  :T_LBRACKET => 30,
  :T_RBRACKET => 31,
  :T_LBRACE => 32,
  :T_RBRACE => 33,
  :T_SUBTYPE => 34,
  :T_STRING => 35,
  :T_IVAR => 36,
  :T_CVAR => 37,
  :T_GVAR => 38,
  :T_CONST_ID => 39,
  :T_TYPE_ID => 40,
  :T_LOCAL_ID => 41,
  :T_TICKED_ID => 42,
  :T_SUFFIXED_ID => 43,
  :T_SCOPED_ID => 44 }

racc_nt_base = 45

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "T_COMMA",
  "T_RARROW",
  "K_OR",
  "T_EOF",
  "K_CLASS",
  "K_METACLASS",
  "K_MODULE",
  "K_INTERFACE",
  "K_TYPE",
  "K_TYPEVAR",
  "K_ALIAS",
  "K_REQUIRE",
  "K_END",
  "K_SELF",
  "T_BEGIN_LINE",
  "T_SEMICOLON",
  "T_COLON",
  "T_DOUBLE_COLON",
  "T_DOT",
  "T_STAR",
  "T_QUESTION",
  "T_CARROT",
  "T_BANG",
  "T_EQUAL",
  "T_LPAREN",
  "T_RPAREN",
  "T_LESS",
  "T_GREATER",
  "T_LBRACKET",
  "T_RBRACKET",
  "T_LBRACE",
  "T_RBRACE",
  "T_SUBTYPE",
  "T_STRING",
  "T_IVAR",
  "T_CVAR",
  "T_GVAR",
  "T_CONST_ID",
  "T_TYPE_ID",
  "T_LOCAL_ID",
  "T_TICKED_ID",
  "T_SUFFIXED_ID",
  "T_SCOPED_ID",
  "$start",
  "entry",
  "e_method",
  "e_field",
  "e_named",
  "e_class",
  "interface_file",
  "require_list",
  "class_def_list",
  "require_stmt",
  "class_def",
  "class_elem_list",
  "class_annotation",
  "class_elem",
  "alias_name",
  "relative_method_name",
  "method_type",
  "field_sig",
  "const_expr",
  "type_expr",
  "e_expr",
  "method_annotation_list",
  "field_annotation_list",
  "named_type_list",
  "method_start",
  "const_method_type",
  "field_start",
  "method_name",
  "type_id_list",
  "constraint_list",
  "method_sig",
  "block",
  "type_var",
  "simple_type_var",
  "type_ident",
  "or_type_list",
  "single_type_expr",
  "tuple",
  "field_or_method_list",
  "type_expr_comma_list",
  "named_type_expr",
  "named_or_type_list",
  "single_named_type_expr",
  "declared_subtypes",
  "class_decl",
  "bounded_quantifier_list",
  "bounded_quantifier",
  "field_type",
  "field_or_method_nonempty_list",
  "named_type",
  "type_name" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'annot_parser.racc', 46)
  def _reduce_1(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 47)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 48)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 49)
  def _reduce_4(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 55)
  def _reduce_5(val, _values, result)
            fatal("Interface parsing not yet implemented")
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 59)
  def _reduce_6(val, _values, result)
     [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 60)
  def _reduce_7(val, _values, result)
     result = [val[0]] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 63)
  def _reduce_8(val, _values, result)
     result = strip_quotes(token_text(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 66)
  def _reduce_9(val, _values, result)
     [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 67)
  def _reduce_10(val, _values, result)
     result = [val[0]] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 71)
  def _reduce_11(val, _values, result)
            fatal("Metaclass type annotations not yet supported")
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 74)
  def _reduce_12(val, _values, result)
            fatal("Class type annotations not yet supported")
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 77)
  def _reduce_13(val, _values, result)
            fatal("Module type annotations not yet supported")
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 81)
  def _reduce_14(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 82)
  def _reduce_15(val, _values, result)
     result = [val[0]] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 85)
  def _reduce_16(val, _values, result)
     result = token_text(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 88)
  def _reduce_17(val, _values, result)
     fatal("Alias not yet implemented") 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 89)
  def _reduce_18(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 90)
  def _reduce_19(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 91)
  def _reduce_20(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 92)
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 96)
  def _reduce_22(val, _values, result)
            result = handle_var(:ivar, token_text(val[0]), val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 98)
  def _reduce_23(val, _values, result)
            result = handle_var(:cvar, token_text(val[0]), val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 100)
  def _reduce_24(val, _values, result)
            result = handle_var(:gvar, token_text(val[0]), val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 104)
  def _reduce_25(val, _values, result)
     fatal("Expr parsing not yet implemented") 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 110)
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 113)
  def _reduce_27(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 116)
  def _reduce_28(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 119)
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 122)
  def _reduce_30(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 123)
  def _reduce_31(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 126)
  def _reduce_32(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 128)
  def _reduce_33(val, _values, result)
            result = [val[1]] + val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 132)
  def _reduce_34(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 133)
  def _reduce_35(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 136)
  def _reduce_36(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 137)
  def _reduce_37(val, _values, result)
     result = [val[1]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 143)
  def _reduce_38(val, _values, result)
            result = handle_constant(token_text(val[0]).to_sym, val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 148)
  def _reduce_39(val, _values, result)
     result = handle_mtype(val[0], val[2], val[4], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 150)
  def _reduce_40(val, _values, result)
     result = handle_mtype(val[0], nil, nil, val[2]); 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 152)
  def _reduce_41(val, _values, result)
     result = handle_mtype(token_text(val[0]).to_sym,
                              val[2], val[4], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 156)
  def _reduce_42(val, _values, result)
            result = handle_mtype(token_text(val[0]).to_sym, nil, nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 160)
  def _reduce_43(val, _values, result)
     result = handle_mtype(val[0], val[2], val[4], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 162)
  def _reduce_44(val, _values, result)
     result = handle_mtype(val[0], nil, nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 166)
  def _reduce_45(val, _values, result)
     result = MethodIdentifier.new(proxy, token_text(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 168)
  def _reduce_46(val, _values, result)
     result = MethodIdentifier.new(proxy, token_text(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 170)
  def _reduce_47(val, _values, result)
     result = MethodIdentifier.new(proxy, token_text(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 173)
  def _reduce_48(val, _values, result)
            result = handle_scoped_id(token_text(val[0])) 
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 177)
  def _reduce_49(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 185)
  def _reduce_50(val, _values, result)
            result = construct_msig([], val[2], val[4])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 188)
  def _reduce_51(val, _values, result)
            result = construct_msig(val[0], val[1], val[3])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 192)
  def _reduce_52(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 193)
  def _reduce_53(val, _values, result)
     result = handle_btype(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 196)
  def _reduce_54(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 197)
  def _reduce_55(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 200)
  def _reduce_56(val, _values, result)
     result = handle_type_param(:id, token_text(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 202)
  def _reduce_57(val, _values, result)
     result = handle_type_param(:self, token_text(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 206)
  def _reduce_58(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 208)
  def _reduce_59(val, _values, result)
            result = handle_type_param(:varargs, token_text(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 213)
  def _reduce_60(val, _values, result)
     token_text(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 215)
  def _reduce_61(val, _values, result)
            result = token_text(val[1])
# token_text(val[0]) + token_text(val[1]) 
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 219)
  def _reduce_62(val, _values, result)
            result =
          if val[0].class == Array 
            val[0] << token_text(val[2]) 
          else 
            [val[0], token_text(val[2])]
          end 
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 229)
  def _reduce_63(val, _values, result)
            list = val[0][:or_list]
        if(list.length > 1)
          # args = list + [pos]
          result = # proxy.utype(*args)
                   Rtc::Types::UnionType.new(list)
        else
          # flatten if there is no union
          result = list[0]
        end
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 241)
  def _reduce_64(val, _values, result)
     result = {:or_list => [val[0]]} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 243)
  def _reduce_65(val, _values, result)
            # need to differientiate OR lists from tuples (which are just arrays)
        val[2][:or_list] = [val[0]] + val[2][:or_list]
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 249)
  def _reduce_66(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 251)
  def _reduce_67(val, _values, result)
            id = handle_type_ident(val[0])
        if(id.class == Class)
          result = Rtc::Types::NominalType.of(id)
        else
          result = id
        end
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 258)
  def _reduce_68(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 260)
  def _reduce_69(val, _values, result)
            result = Rtc::Types::TopType.instance
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 263)
  def _reduce_70(val, _values, result)
            result = Rtc::Types::OptionalArg.new(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 266)
  def _reduce_71(val, _values, result)
            result = Rtc::Types::Vararg.new(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 269)
  def _reduce_72(val, _values, result)
            result = handle_structural_type(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 272)
  def _reduce_73(val, _values, result)
            id = handle_type_ident(val[0])
        nominal = Rtc::Types::NominalType.of(id)
        result = Rtc::Types::ParameterizedType.new(nominal, val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 278)
  def _reduce_74(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 283)
  def _reduce_75(val, _values, result)
            list = val[0][:or_list]
        if(list.length > 1)
          result = Rtc::Types::UnionType.new(list)
        else
          result = list[0]
        end
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 292)
  def _reduce_76(val, _values, result)
     result = {:or_list => [val[0]]} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 294)
  def _reduce_77(val, _values, result)
            val[2][:or_list] = [val[0]] + val[2][:or_list]
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 299)
  def _reduce_78(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 301)
  def _reduce_79(val, _values, result)
            result = {:name => token_text(val[0]),
                  :type => val[2]}
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 306)
  def _reduce_80(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 308)
  def _reduce_81(val, _values, result)
            result = [val[0]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 311)
  def _reduce_82(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 312)
  def _reduce_83(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 316)
  def _reduce_84(val, _values, result)
            id = val[0].to_sym
        type_vars = prepare_type_vars_for_sig(val[2])
        result = handle_class_decl(id, type_vars)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 321)
  def _reduce_85(val, _values, result)
            id = val[0].to_sym
        result = handle_class_decl(id)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 327)
  def _reduce_86(val, _values, result)
            result = handle_class_annot(val[1], val[2], val[3], true)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 330)
  def _reduce_87(val, _values, result)
            result = handle_class_annot(val[1], val[2], val[3], false)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 334)
  def _reduce_88(val, _values, result)
     [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 335)
  def _reduce_89(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 338)
  def _reduce_90(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 340)
  def _reduce_91(val, _values, result)
            result = [val[0]] + val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 344)
  def _reduce_92(val, _values, result)
            result = TypeConstraint.new(pos, val[0], val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 349)
  def _reduce_93(val, _values, result)
            result = handle_var(:ivar, token_text(val[0]), val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 354)
  def _reduce_94(val, _values, result)
            result = {:fields => [val[0]], :methods => []}       
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 356)
  def _reduce_95(val, _values, result)
            result = {:fields => [],       :methods => [val[0]]} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 358)
  def _reduce_96(val, _values, result)
            field_method_hash = val[2]
        field_method_hash[:fields] += [val[0]]
        result = field_method_hash
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 363)
  def _reduce_97(val, _values, result)
            field_method_hash = val[2]
        field_method_hash[:methods] += [val[0]]
        result = field_method_hash
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 369)
  def _reduce_98(val, _values, result)
     result = {:fields => [], :methods => []} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 370)
  def _reduce_99(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 373)
  def _reduce_100(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 374)
  def _reduce_101(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 378)
  def _reduce_102(val, _values, result)
            result = handle_named_type_expr(val[1], val[3])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 382)
  def _reduce_103(val, _values, result)
     token_text(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class TypeAnnotationParser


end
