#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'rtc/annot_lexer.rex'
require 'rtc/parser'
require 'rtc/typing/types.rb'

module Rtc

  class TypeAnnotationParser < Racc::Parser

    attr_accessor :pos, :proxy

    # FIXME(rwsims): it's not clear what proxy is for, it's used when defining
    # class constants for doing class type signatures.
    def initialize(proxy)
        @proxy = proxy
    end

    def strip_quotes(arg)
      arg.strip.gsub(/^\"/, "").gsub(/\"$/, "")
    end

    # ####################
    # helper methods for type constructors from ML parser
    # ####################

    
    def pragma(key)
      fail "Unknown pragma keyword: #{key}" if(key !="FIXME")
    end

  end

class TypeAnnotationParser < Racc::Parser

module_eval(<<'...end annot_parser.racc/module_eval...', 'annot_parser.racc', 316)

...end annot_parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    53,    14,    21,    21,    21,    62,    64,    63,    55,
    10,    53,    66,    21,    97,    86,    65,    85,   -18,   -16,
   -16,   -16,    83,    20,    20,    20,    53,    59,    52,    71,
   -17,   -17,   -17,    20,    55,   -14,    82,    53,    52,   112,
     9,    21,    62,    64,    63,    55,    44,    87,    66,   111,
    49,    53,    65,    52,    32,    21,    62,    64,    63,    55,
    48,    20,    66,    59,    52,    53,    65,    32,    20,    21,
    62,    64,    63,    55,    73,    20,    66,    59,    52,    53,
    65,   102,   103,    21,    62,    64,    63,    55,    53,    20,
    66,    59,    52,    53,    65,   104,    55,    21,    62,    64,
    63,    55,    47,    20,    66,    59,    52,   105,    65,    33,
    34,    35,    46,    53,   106,    52,    32,    20,    53,    59,
    52,    55,    21,    62,    64,    63,    55,    82,    53,    66,
    70,    69,    68,    65,   113,   114,    55,   115,   116,   117,
    52,    20,    20,    53,    59,    52,   119,    21,    62,    64,
    63,    55,   120,    42,    66,    52,   122,    53,    65,    41,
   124,    21,    62,    64,    63,    55,    53,    20,    66,    59,
    52,    53,    65,   125,    55,    21,    62,    64,    63,    55,
   126,    20,    66,    59,    52,    40,    65,    32,    18,    17,
    16,    32,    32,    52,    15,    20,    53,    59,    52,    32,
    21,    62,    64,    63,    55,   135,   136,    66,    27,    32,
   nil,    65,    25,   nil,   nil,    28,   nil,    29,    30,   nil,
    20,    53,    59,    52,   nil,    21,    62,    64,    63,    55,
   nil,   nil,    66,    50,   nil,    53,    65,   nil,   nil,    21,
    62,    64,    63,    55,   nil,    20,    66,    59,    52,    53,
    65,   nil,   nil,    21,    62,    64,    63,    55,   nil,    20,
    66,    59,    52,   nil,    65,   nil,   nil,   nil,   nil,   nil,
    27,    92,   nil,    20,   nil,    59,    52,    28,   nil,    29,
    30,    27,    92,   nil,   nil,    27,    92,   nil,    28,   nil,
    29,    30,    28,   nil,    29,    30 ]

racc_action_check = [
     0,   125,     0,    13,    14,   125,   125,   125,   125,   125,
     0,    55,   125,     9,    67,    60,   125,    57,    36,    10,
    10,    10,    51,    13,    14,   125,    48,   125,   125,    36,
     0,     0,     0,     9,    48,    23,    50,    64,    55,    90,
     0,    64,    64,    64,    64,    64,    23,    62,    64,    90,
    25,   114,    64,    48,    49,   114,   114,   114,   114,   114,
    25,    64,   114,    64,    64,    66,   114,    47,    42,    66,
    66,    66,    66,    66,    37,   114,    66,   114,   114,    68,
    66,    74,    76,    68,    68,    68,    68,    68,    46,    66,
    68,    66,    66,    69,    68,    77,    46,    69,    69,    69,
    69,    69,    24,    68,    69,    68,    68,    79,    69,    12,
    12,    12,    24,   111,    81,    46,    82,    69,    70,    69,
    69,   111,    70,    70,    70,    70,    70,    83,   104,    70,
    35,    34,    33,    70,    91,    92,   104,    93,    94,    96,
   111,    21,    70,   106,    70,    70,   101,   106,   106,   106,
   106,   106,   103,    20,   106,   104,   105,    97,   106,    19,
   107,    97,    97,    97,    97,    97,    73,   106,    97,   106,
   106,    41,    97,   108,    73,    41,    41,    41,    41,    41,
   110,    97,    41,    97,    97,    15,    41,   112,     8,     7,
     6,   120,   122,    73,     1,    41,    86,    41,    41,    11,
    86,    86,    86,    86,    86,   127,   135,    86,    11,   136,
   nil,    86,    11,   nil,   nil,    11,   nil,    11,    11,   nil,
    86,    32,    86,    86,   nil,    32,    32,    32,    32,    32,
   nil,   nil,    32,    32,   nil,    85,    32,   nil,   nil,    85,
    85,    85,    85,    85,   nil,    32,    85,    32,    32,    63,
    85,   nil,   nil,    63,    63,    63,    63,    63,   nil,    85,
    63,    85,    85,   nil,    63,   nil,   nil,   nil,   nil,   nil,
   116,   116,   nil,    63,   nil,    63,    63,   116,   nil,   116,
   116,   115,   115,   nil,   nil,    65,    65,   nil,   115,   nil,
   115,   115,    65,   nil,    65,    65 ]

racc_action_pointer = [
    -6,   194,   nil,   nil,   nil,   nil,   185,   184,   183,    -6,
   -17,   173,    73,   -16,   -15,   185,   nil,   nil,   nil,   131,
   134,   102,   nil,    30,    84,    32,   nil,   nil,   nil,   nil,
   nil,   nil,   206,   114,   113,   112,    13,    46,   nil,   nil,
   nil,   156,    29,   nil,   nil,   nil,    73,    41,    11,    28,
     4,    -5,   nil,   nil,   nil,    -4,   nil,    13,   nil,   nil,
   -13,   nil,    25,   234,    22,   250,    50,    12,    64,    78,
   103,   nil,   nil,   151,    52,   nil,    53,    93,   nil,    78,
   nil,   111,    90,    95,   nil,   220,   181,   nil,   nil,   nil,
    21,   103,   117,   135,   136,   nil,   112,   142,   nil,   nil,
   nil,   117,   nil,   134,   113,   138,   128,   127,   170,   nil,
   151,    98,   161,   nil,    36,   246,   235,   nil,   nil,   nil,
   165,   nil,   166,   nil,   nil,   -14,   nil,   176,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   188,   183,   nil ]

racc_action_default = [
   -13,   -72,    -1,    -2,    -3,    -4,   -72,   -72,   -72,   -72,
   -12,   -72,   -72,   -72,   -72,   -72,    -8,    -9,   -10,   -72,
   -42,   -72,   -45,   -13,   -72,   -72,   -26,   -27,   -28,   -29,
   -30,   -31,   -72,   -72,   -72,   -72,   -17,   -62,   -63,   -64,
   138,   -72,   -72,   -44,   -12,   -15,   -72,   -72,   -72,   -72,
   -34,   -72,   -38,   -39,   -40,   -72,   -46,   -47,   -49,   -50,
   -51,   -52,   -72,   -72,   -72,   -70,   -72,   -59,   -72,   -72,
   -72,   -16,   -19,   -72,   -72,   -43,   -72,   -36,   -23,   -72,
   -25,   -72,   -72,   -34,   -41,   -72,   -72,   -53,   -54,   -55,
   -72,   -72,   -72,   -66,   -67,   -71,   -72,   -72,    -5,    -6,
    -7,   -72,   -11,   -72,   -72,   -72,   -72,   -72,   -72,   -48,
   -72,   -72,   -72,   -56,   -72,   -72,   -72,   -58,   -60,   -61,
   -72,   -37,   -72,   -32,   -35,   -72,   -57,   -72,   -21,   -65,
   -68,   -69,   -22,   -24,   -33,   -72,   -72,   -20 ]

racc_goto_table = [
    26,    76,    77,    79,    77,    95,     7,    51,    98,    99,
   100,    81,     6,    43,    19,    23,    74,    24,    37,    37,
    38,    39,    88,    89,     8,    36,     5,    84,   101,    77,
     4,   109,     3,    91,    75,    45,    78,     2,    80,     1,
   nil,    96,    72,   nil,   108,   nil,   123,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   129,   130,   131,   nil,   nil,   121,
    77,   110,   nil,   nil,   nil,   134,   127,    77,   nil,   nil,
   nil,   107,   118,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   128,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   132,
   nil,   133,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   137 ]

racc_goto_check = [
    19,    18,    22,    18,    22,    31,     9,    12,     7,     7,
     7,    21,     8,    24,    11,    14,    12,    17,    11,    11,
    29,    29,    26,    26,    10,     6,     5,    23,    18,    22,
     4,    25,     3,    28,    24,     8,    19,     2,    19,     1,
   nil,    12,     9,   nil,    21,   nil,     7,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,    31,    31,   nil,   nil,    18,
    22,    12,   nil,   nil,   nil,     7,    18,    22,   nil,   nil,
   nil,    19,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    19 ]

racc_goto_pointer = [
   nil,    39,    37,    32,    30,    26,    13,   -60,    12,     6,
    24,     5,   -25,   nil,     4,   nil,   nil,     6,   -45,   -11,
   nil,   -39,   -44,   -28,    -8,   -54,   -41,   nil,   -32,     7,
   nil,   -60 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    67,   nil,   nil,
   nil,    60,   nil,    11,   nil,    12,    94,    90,   nil,   nil,
    31,   nil,    58,    54,    22,    56,    57,    61,   nil,   nil,
    93,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 48, :_reduce_1,
  1, 48, :_reduce_2,
  1, 48, :_reduce_3,
  1, 48, :_reduce_4,
  3, 53, :_reduce_5,
  3, 53, :_reduce_6,
  3, 53, :_reduce_7,
  2, 49, :_reduce_8,
  2, 50, :_reduce_9,
  2, 51, :_reduce_10,
  5, 52, :_reduce_11,
  1, 60, :_reduce_12,
  0, 60, :_reduce_13,
  2, 55, :_reduce_14,
  3, 55, :_reduce_15,
  1, 62, :_reduce_16,
  0, 62, :_reduce_17,
  2, 56, :_reduce_18,
  3, 56, :_reduce_19,
  6, 63, :_reduce_20,
  3, 63, :_reduce_21,
  6, 61, :_reduce_22,
  3, 61, :_reduce_23,
  6, 61, :_reduce_24,
  3, 61, :_reduce_25,
  1, 61, :_reduce_26,
  1, 67, :_reduce_27,
  1, 67, :_reduce_28,
  1, 67, :_reduce_29,
  1, 67, :_reduce_30,
  1, 64, :_reduce_31,
  5, 66, :_reduce_32,
  6, 66, :_reduce_33,
  0, 68, :_reduce_34,
  3, 68, :_reduce_35,
  1, 65, :_reduce_36,
  3, 65, :_reduce_37,
  1, 70, :_reduce_38,
  1, 70, :_reduce_39,
  1, 69, :_reduce_40,
  2, 69, :_reduce_41,
  1, 71, :_reduce_42,
  3, 71, :_reduce_43,
  2, 58, :_reduce_44,
  1, 58, :_reduce_45,
  1, 54, :_reduce_46,
  1, 72, :_reduce_47,
  3, 72, :_reduce_48,
  1, 73, :_reduce_49,
  1, 73, :_reduce_50,
  1, 73, :_reduce_51,
  1, 73, :_reduce_52,
  2, 73, :_reduce_53,
  2, 73, :_reduce_54,
  2, 73, :_reduce_55,
  3, 73, :_reduce_56,
  4, 73, :_reduce_57,
  3, 74, :_reduce_58,
  1, 59, :_reduce_59,
  3, 59, :_reduce_60,
  4, 76, :_reduce_61,
  1, 76, :_reduce_62,
  2, 57, :_reduce_63,
  2, 57, :_reduce_64,
  3, 77, :_reduce_65,
  1, 78, :_reduce_66,
  1, 78, :_reduce_67,
  3, 78, :_reduce_68,
  3, 78, :_reduce_69,
  0, 75, :_reduce_70,
  1, 75, :_reduce_71 ]

racc_reduce_n = 72

racc_shift_n = 138

racc_token_table = {
  false => 0,
  :error => 1,
  :T_COMMA => 2,
  :T_RARROW => 3,
  :K_OR => 4,
  :T_EOF => 5,
  :K_CLASS => 6,
  :K_METACLASS => 7,
  :K_MODULE => 8,
  :K_INTERFACE => 9,
  :K_TYPE => 10,
  :K_TYPEVAR => 11,
  :K_ALIAS => 12,
  :K_REQUIRE => 13,
  :K_END => 14,
  :K_SELF => 15,
  :T_BEGIN_LINE => 16,
  :T_SEMICOLON => 17,
  :T_COLON => 18,
  :T_DOUBLE_COLON => 19,
  :T_DOT => 20,
  :T_STAR => 21,
  :T_QUESTION => 22,
  :T_CARROT => 23,
  :T_BANG => 24,
  :T_EQUAL => 25,
  :T_LPAREN => 26,
  :T_RPAREN => 27,
  :T_LESS => 28,
  :T_GREATER => 29,
  :T_LBRACKET => 30,
  :T_RBRACKET => 31,
  :T_LBRACE => 32,
  :T_RBRACE => 33,
  :T_SUBTYPE => 34,
  :T_STRING => 35,
  :T_IVAR => 36,
  :T_CVAR => 37,
  :T_GVAR => 38,
  :T_CONST_ID => 39,
  :T_TYPE_ID => 40,
  :T_SYMBOL => 41,
  :T_LOCAL_ID => 42,
  :T_TICKED_ID => 43,
  :T_SUFFIXED_ID => 44,
  :T_SCOPED_ID => 45,
  :T_DOUBLE_HASH => 46 }

racc_nt_base = 47

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "T_COMMA",
  "T_RARROW",
  "K_OR",
  "T_EOF",
  "K_CLASS",
  "K_METACLASS",
  "K_MODULE",
  "K_INTERFACE",
  "K_TYPE",
  "K_TYPEVAR",
  "K_ALIAS",
  "K_REQUIRE",
  "K_END",
  "K_SELF",
  "T_BEGIN_LINE",
  "T_SEMICOLON",
  "T_COLON",
  "T_DOUBLE_COLON",
  "T_DOT",
  "T_STAR",
  "T_QUESTION",
  "T_CARROT",
  "T_BANG",
  "T_EQUAL",
  "T_LPAREN",
  "T_RPAREN",
  "T_LESS",
  "T_GREATER",
  "T_LBRACKET",
  "T_RBRACKET",
  "T_LBRACE",
  "T_RBRACE",
  "T_SUBTYPE",
  "T_STRING",
  "T_IVAR",
  "T_CVAR",
  "T_GVAR",
  "T_CONST_ID",
  "T_TYPE_ID",
  "T_SYMBOL",
  "T_LOCAL_ID",
  "T_TICKED_ID",
  "T_SUFFIXED_ID",
  "T_SCOPED_ID",
  "T_DOUBLE_HASH",
  "$start",
  "entry",
  "e_method",
  "e_field",
  "e_class",
  "e_annotation",
  "field_sig",
  "type_expr",
  "method_annotation_list",
  "field_annotation_list",
  "class_annotation",
  "type_ident",
  "type_expr_comma_list",
  "method_start",
  "const_method_type",
  "field_start",
  "method_type",
  "method_name",
  "type_id_list",
  "method_sig",
  "relative_method_name",
  "block",
  "type_var",
  "simple_type_var",
  "type_ident_list",
  "or_type_list",
  "single_type_expr",
  "tuple",
  "field_or_method_list",
  "class_decl",
  "field_type",
  "field_or_method_nonempty_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'annot_parser.racc', 48)
  def _reduce_1(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 49)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 50)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 51)
  def _reduce_4(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 56)
  def _reduce_5(val, _values, result)
            result = handle_var(:ivar, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 58)
  def _reduce_6(val, _values, result)
            result = handle_var(:cvar, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 60)
  def _reduce_7(val, _values, result)
            result = handle_var(:gvar, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 68)
  def _reduce_8(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 71)
  def _reduce_9(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 74)
  def _reduce_10(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 77)
  def _reduce_11(val, _values, result)
      	  	result = Rtc::Types::ParameterizedType.new(handle_type_ident(val[1], val[3])
  	  
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 80)
  def _reduce_12(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 81)
  def _reduce_13(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 84)
  def _reduce_14(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 86)
  def _reduce_15(val, _values, result)
            result = [val[1]] + val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 90)
  def _reduce_16(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 91)
  def _reduce_17(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 94)
  def _reduce_18(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 95)
  def _reduce_19(val, _values, result)
     result = [val[1]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 100)
  def _reduce_20(val, _values, result)
     result = handle_mtype(val[0], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 102)
  def _reduce_21(val, _values, result)
     result = handle_mtype(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 107)
  def _reduce_22(val, _values, result)
     result = handle_mtype(val[0], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 109)
  def _reduce_23(val, _values, result)
     result = handle_mtype(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 111)
  def _reduce_24(val, _values, result)
     result = handle_mtype(val[0], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 113)
  def _reduce_25(val, _values, result)
     result = handle_mtype(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 115)
  def _reduce_26(val, _values, result)
           result = handle_mtype("__rtc_next_method", nil, val[0])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 120)
  def _reduce_27(val, _values, result)
     result = MethodIdentifier.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 122)
  def _reduce_28(val, _values, result)
     result = MethodIdentifier.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 124)
  def _reduce_29(val, _values, result)
     result = MethodIdentifier.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 127)
  def _reduce_30(val, _values, result)
          	#FIXME(jtoman): this is broken
        result = handle_scoped_id(val[0]) 
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 132)
  def _reduce_31(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 136)
  def _reduce_32(val, _values, result)
            result = construct_msig([], val[2], val[4])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 139)
  def _reduce_33(val, _values, result)
            result = construct_msig(val[1], val[3], val[5])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 144)
  def _reduce_34(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 145)
  def _reduce_35(val, _values, result)
     result = handle_btype(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 148)
  def _reduce_36(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 149)
  def _reduce_37(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 152)
  def _reduce_38(val, _values, result)
     result = handle_type_param(:id, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 153)
  def _reduce_39(val, _values, result)
     result = handle_type_param(:self, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 156)
  def _reduce_40(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 158)
  def _reduce_41(val, _values, result)
            result = handle_type_param(:varargs, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 162)
  def _reduce_42(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 164)
  def _reduce_43(val, _values, result)
          result = [val[0]] + val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 169)
  def _reduce_44(val, _values, result)
       	  	result = {
   	  		:type => :absolute,
   	  		:name_list => val[1]
   	  	}
   	  
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 175)
  def _reduce_45(val, _values, result)
            result = {
        	:type => :relative,
        	:name_list => val[0]
        }
   	  
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 182)
  def _reduce_46(val, _values, result)
            list = val[0][:or_list]
        if(list.length > 1)
          result = Rtc::Types::UnionType.new(list)
        else
          # flatten if there is no union
          result = list[0]
        end
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 192)
  def _reduce_47(val, _values, result)
     result = {:or_list => [val[0]]} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 194)
  def _reduce_48(val, _values, result)
            # need to differientiate OR lists from tuples (which are just arrays)
        val[2][:or_list] = [val[0]] + val[2][:or_list]
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 200)
  def _reduce_49(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 202)
  def _reduce_50(val, _values, result)
        	result = Rtc::Types::SymbolType.new(eval(val[0]))
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 205)
  def _reduce_51(val, _values, result)
            result = handle_type_ident(val[0])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 207)
  def _reduce_52(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 209)
  def _reduce_53(val, _values, result)
            result = Rtc::Types::TopType.instance
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 212)
  def _reduce_54(val, _values, result)
            result = Rtc::Types::OptionalArg.new(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 215)
  def _reduce_55(val, _values, result)
            result = Rtc::Types::Vararg.new(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 218)
  def _reduce_56(val, _values, result)
            result = handle_structural_type(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 221)
  def _reduce_57(val, _values, result)
            nominal = handle_type_ident(val[0])
        result = Rtc::Types::ParameterizedType.new(nominal, val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 226)
  def _reduce_58(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 229)
  def _reduce_59(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 231)
  def _reduce_60(val, _values, result)
            result = [val[0]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 236)
  def _reduce_61(val, _values, result)
            id = val[0]
        type_vars = val[2]
        result = handle_class_decl(id, type_vars)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 241)
  def _reduce_62(val, _values, result)
            id = val[0]
        result = handle_class_decl(id)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 247)
  def _reduce_63(val, _values, result)
            result = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 250)
  def _reduce_64(val, _values, result)
            result = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 256)
  def _reduce_65(val, _values, result)
            result = handle_var(:ivar, val[0], val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 261)
  def _reduce_66(val, _values, result)
            result = {:fields => [val[0]], :methods => []}       
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 263)
  def _reduce_67(val, _values, result)
            result = {:fields => [],       :methods => [val[0]]} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 265)
  def _reduce_68(val, _values, result)
            field_method_hash = val[2]
        field_method_hash[:fields] += [val[0]]
        result = field_method_hash
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 270)
  def _reduce_69(val, _values, result)
            field_method_hash = val[2]
        field_method_hash[:methods] += [val[0]]
        result = field_method_hash
      
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 276)
  def _reduce_70(val, _values, result)
     result = {:fields => [], :methods => []} 
    result
  end
.,.,

module_eval(<<'.,.,', 'annot_parser.racc', 277)
  def _reduce_71(val, _values, result)
     result = val[0] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class TypeAnnotationParser


end
